cscope 15 $HOME/Projects/back_up/dup/QCA4020.OR.2.0_00048/target/quartz/demo/temp_test/src/spple               0000528042
	@home_automation.c

23 
	~<°dio.h
>

24 
	~<°rög.h
>

25 
	~<°dlib.h
>

27 
	~"quπ_sig«l.h
"

28 
	~"q≠i/quπ_thªad.h
"

29 
	~"°döt.h
"

30 
	~<q˛i.h
>

31 
	~<q˛i_≠i.h
>

32 
	~<quπ_timî.h
>

33 
	~<quπ_pùe.h
>

34 
	~"q≠i_timî.h
"

35 
	~"q≠i/q≠i_°©us.h
"

36 
	~<q≠i_i2c_ma°î.h
>

38 
	~"q≠i_Ÿp_év.h
"

39 
	~"q≠i_timî.h
"

40 
	~"quπ_timî.h
"

42 
	~"home_autom©i⁄.h
"

43 
	~"q˛i_utû.h
"

46 
	~"bÀ_£rvî.h
"

48 
	~"q≠i_fs.h
"

50 
QCLI_Group_H™dÀ_t
 
	gbÀ_group
;

52 
	#LOG_ERROR
(...Ë
	`QCLI_Prötf
(
bÀ_group
, 
__VA_ARGS__
)

	)

53 
	#LOG_WARN
(...Ë
	`QCLI_Prötf
(
bÀ_group
, 
__VA_ARGS__
)

	)

54 
	#LOG_INFO
(...Ë
	`QCLI_Prötf
(
bÀ_group
, 
__VA_ARGS__
)

	)

55 
	#LOG_VERBOSE
(...Ë
	`QCLI_Prötf
(
bÀ_group
, 
__VA_ARGS__
)

	)

60 
	mAET_DISABLE_E
,

61 
	mAET_ENABLE_ALL_E
,

62 
	mAET_ENABLE_CHANNEL_37_E
,

63 
	mAET_ENABLE_CHANNEL_38_E
,

64 
	mAET_ENABLE_CHANNEL_39_E


68 
QAPI_BLE_BTPSAPI
 
GAP_LE_Evít_CÆlback
(
uöt32_t
 
BluëoŸhSèckID
, 
q≠i_BLE_GAP_LE_Evít_D©a_t
 *
GAP_LE_Evít_D©a
, uöt32_à
CÆlbackP¨amëî
);

70 
QCLI_Comm™d_Sètus_t
 
St‹ePîsi°ítD©a
();

71 
QCLI_Comm™d_Sètus_t
 
LﬂdPîsi°ítD©a
();

74 
	#HOME_AUTOMATION
 1

	)

76 #i‚de‡
V2


77 
	#QAPI_BLE_LAT_ANONYMOUS_E
 255

	)

81 
	#READ_UNALIGNED_BYTE_LITTLE_ENDIAN
(
_x
Ë(((
uöt8_t
 *)(_x))[0])

	)

82 
	#READ_UNALIGNED_WORD_LITTLE_ENDIAN
(
_x
Ë((
uöt16_t
)((((uöt16_t)(((
uöt8_t
 *)(_x))[1])Ë<< 8Ë| ((uöt16_t)(((uöt8_à*)(_x))[0]))))

	)

84 
	#ASSIGN_HOST_WORD_TO_LITTLE_ENDIAN_UNALIGNED_WORD
(
_x
, 
_y
) \

86 ((
uöt8_t
 *)(
_x
))[0] = ((uöt8_t)(((
uöt16_t
)(
_y
)) & 0xFF)); \

87 ((
uöt8_t
 *)(
_x
))[1] = ((uöt8_t)((((
uöt16_t
)(
_y
)) >> 8) & 0xFF)); \

88 }

	)

90 
	#CONVERT_TO_BASEBAND_SLOTS
(
_x
Ë(()((((8000L * (()(_x))Ë/ 500LË+ 5L)/10L))

	)

93 
	#DEVICE_FRIENDLY_NAME
 "Q4020_GES"

	)

98 
	#ToI¡
(
_x
Ë(((_xË> 0x39)?(((_xË& ~0x20)-0x37):((_x)-0x30))

	)

102 
	#DEFAULT_IO_CAPABILITY
 (
QAPI_BLE_LIC_NO_INPUT_NO_OUTPUT_E
)

	)

108 
	#DEFAULT_MITM_PROTECTION
 (
TRUE
Ë

	)

116 
	#DEFAULT_SECURE_CONNECTIONS
 (
TRUE
Ë

	)

125 
	#AIOP_NUMBER_OF_SUPPORTED_CHARACTERISTICS
 (2Ë

	)

131 
	#AIOP_NUMBER_OF_SUPPORTED_INSTANCES
 (2Ë

	)

138 
	#AIOP_DEFAULT_INPUT_CHARACTERISTIC_PROPERTY_FLAGS
 (
QAPI_BLE_AIOS_INPUT_CHARACTERISTIC_PROPERTY_FLAGS_NOTIFY
)

	)

144 
	#AIOP_DEFAULT_OUTPUT_CHARACTERISTIC_PROPERTY_FLAGS
 (
QAPI_BLE_AIOS_OUTPUT_CHARACTERISTIC_PROPERTY_FLAGS_WRITE
 | \

145 
QAPI_BLE_AIOS_OUTPUT_CHARACTERISTIC_PROPERTY_FLAGS_READ
 | \

146 
QAPI_BLE_AIOS_OUTPUT_CHARACTERISTIC_PROPERTY_FLAGS_NOTIFY
)

	)

154 
	#MAX_SUPPORTED_BATTERY_INSTANCES
 (1Ë

	)

164 
	#MAX_SUPPORTED_HID_INSTANCES
 (1Ë

	)

171 
	#HIDS_MAXIMUM_NUMBER_REPORTS
 (5Ë

	)

176 
	#HIDS_MAXIMUM_NUMBER_EXTERNAL_REPORT_REFERENCES
 (5Ë

	)

182 
	#HID_KEYBOARD_INPUT_REPORT_SIZE
 (8Ë

	)

187 
	#HID_KEYBOARD_OUTPUT_REPORT_SIZE
 (1Ë

	)

192 
	#HID_MOUSE_INPUT_REPORT_SIZE
 (8Ë

	)

199 
	#HID_KEYBOARD_OUTPUT_REPORT_NUM_LOCK
 0x01

	)

200 
	#HID_KEYBOARD_OUTPUT_REPORT_CAPS_LOCK
 0x02

	)

201 
	#HID_KEYBOARD_OUTPUT_REPORT_SCOLL_LOCK
 0x04

	)

202 
	#HID_KEYBOARD_OUTPUT_REPORT_COMPOSE
 0x08

	)

203 
	#HID_KEYBOARD_OUTPUT_REPORT_KANA
 0x10

	)

206 
	#HID_KEYBOARD_INPUT_REPORT_ID
 1

	)

207 
	#HID_KEYBOARD_OUTPUT_REPORT_ID
 2

	)

208 
	#HID_MOUSE_INPUT_REPORT_ID
 3

	)

212 
	#CHECK_ASCII_VALID
(
_x
Ë(((_xË>' 'Ë&& ((_xË<'~'))

	)

218 
	#SLoWP_CHANNEL_PARAMETERS_FLAGS
 (0)

	)

219 
	#SLoWP_CHANNEL_PARAMETERS_MAX_SDU_SIZE
 (1280)

	)

220 
	#SLoWP_CHANNEL_PARAMETERS_MAX_PDU_SIZE
 (237)

	)

221 
	#SLoWP_CHANNEL_PARAMETERS_PDU_QUEUE_DEPTH
 (5)

	)

222 
	#SLoWP_CHANNEL_PARAMETERS_MAX_CREDITS
 (5)

	)

227 
	#SLoWP_QP_DATA_PACKET_QUEUEING_FLAGS
 (
QAPI_BLE_L2CA_QUEUEING_FLAG_LIMIT_BY_PACKETS
)

	)

228 
	#SLoWP_QP_MAXIMUM_NUMBER_QUEUED_DATA_PACKETS
 (3)

	)

229 
	#SLoWP_QP_QUEUED_DATA_PACKETS_THRESHOLD
 (2)

	)

233 #i‚de‡
SPPLE_DATA_BUFFER_LENGTH


234 
	#SPPLE_DATA_BUFFER_LENGTH
 (517)

	)

240 
	#SPPLE_DATA_CREDITS
 (
SPPLE_DATA_BUFFER_LENGTH
*3)

	)

249 
	s_ègGAPLE_P¨amëîs_t


251 
q≠i_BLE_GAP_LE_C⁄√˘abûôy_Mode_t
 
	mC⁄√˘abÀMode
;

252 
q≠i_BLE_GAP_Discovîabûôy_Mode_t
 
	mDiscovîabûôyMode
;

253 
q≠i_BLE_GAP_LE_IO_C≠abûôy_t
 
	mIOC≠abûôy
;

254 
boﬁón_t
 
	mMITMPrŸe˘i⁄
;

255 
boﬁón_t
 
	mSecuªC⁄√˘i⁄s
;

256 
boﬁón_t
 
	mOOBD©aPª£¡
;

257 } 
	tGAPLE_P¨amëîs_t
;

259 
	#GAPLE_PARAMETERS_DATA_SIZE
 ((
GAPLE_P¨amëîs_t
))

	)

263 
	#BLE_PARAMETERS_FLAGS_ADVERTISING_PARAMETERS_VALID
 0x00000001

	)

264 
	#BLE_PARAMETERS_FLAGS_SCAN_PARAMETERS_VALID
 0x00000002

	)

265 
	#BLE_PARAMETERS_FLAGS_CONNECTION_PARAMETERS_VALID
 0x00000004

	)

269 
	s_ègBLESˇnP¨amëîs_t


271 
uöt16_t
 
	mSˇnI¡îvÆ
;

272 
uöt16_t
 
	mSˇnWödow
;

273 } 
	tBLESˇnP¨amëîs_t
;

277 
	s_ègBLEP¨amëîs_t


279 
	mFœgs
;

280 
q≠i_BLE_GAP_LE_Advîtisög_P¨amëîs_t
 
	mAdvîtisögP¨amëîs
;

281 
q≠i_BLE_GAP_LE_C⁄√˘i⁄_P¨amëîs_t
 
	mC⁄√˘i⁄P¨amëîs
;

282 
BLESˇnP¨amëîs_t
 
	mSˇnP¨amëîs
;

283 } 
	tBLEP¨amëîs_t
;

303 
	s_ègAIOP_Sîvî_In°™˚_D©a_t


305 
q≠i_BLE_AIOS_Ch¨a˘îi°ic_In°™˚_E¡ry_t
 
	mIn°™˚_E¡ry
;

309 
uöt8_t
 
	mDigôÆ
[2];

310 
uöt16_t
 
	mA«log
;

311 } 
	mD©a
;

313 
uöt16_t
 
	mClõ¡_C⁄figuøti⁄
;

314 
q≠i_BLE_AIOS_Pª£¡©i⁄_F‹m©_D©a_t
 
	mPª£¡©i⁄_F‹m©
;

315 
uöt8_t
 
	mNumbî_Of_DigôÆs
;

316 } 
	tAIOP_Sîvî_In°™˚_D©a_t
;

318 
	#AIOP_SERVER_INSTANCE_DATA_SIZE
 ((
AIOP_Sîvî_In°™˚_D©a_t
))

	)

332 
	s_ègAIOP_Sîvî_Ch¨a˘îi°ic_D©a_t


334 
q≠i_BLE_AIOS_Ch¨a˘îi°ic_E¡ry_t
 
	mCh¨a˘îi°ic_E¡ry
;

335 
AIOP_Sîvî_In°™˚_D©a_t
 
	mIn°™˚s
[
AIOP_NUMBER_OF_SUPPORTED_INSTANCES
];

336 } 
	tAIOP_Sîvî_Ch¨a˘îi°ic_D©a_t
;

338 
	#AIOP_SERVER_CHARACTERISTIC_DATA_SIZE
 ((
AIOP_Sîvî_Ch¨a˘îi°ic_D©a_t
))

	)

354 
	s_ègAIOP_Sîvî_Inf‹m©i⁄_t


356 
AIOP_Sîvî_Ch¨a˘îi°ic_D©a_t
 
	mCh¨a˘îi°ic
[
AIOP_NUMBER_OF_SUPPORTED_CHARACTERISTICS
];

357 } 
	tAIOP_Sîvî_Inf‹m©i⁄_t
;

359 
	#AIOP_SERVER_INFORMATION_DATA_SIZE
 ((
AIOP_Sîvî_Inf‹m©i⁄_t
))

	)

366 
	mahtCh¨a˘îi°ic
,

367 
	mahtClõ¡Ch¨a˘îi°icC⁄fig
,

368 
	mahtPª£¡©i⁄F‹m©
,

369 
	mahtNumbîOfDigôÆs


370 } 
	tAIOP_Aâribuã_H™dÀ_Ty≥_t
;

386 
	s_ègAIOP_Clõ¡_Reque°_Info_t


388 
q≠i_BLE_AIOS_Ch¨a˘îi°ic_Ty≥_t
 
	mTy≥
;

389 
uöt16_t
 
	mID
;

390 
AIOP_Aâribuã_H™dÀ_Ty≥_t
 
	mAâribuãH™dÀTy≥
;

391 } 
	tAIOP_Clõ¡_Reque°_Info_t
;

416 
	s_ègAIOP_Clõ¡_In°™˚_Info_t


418 
boﬁón_t
 
	mVÆid
;

419 
uöt8_t
 
	mPr›îtõs
;

420 
q≠i_BLE_AIOS_IO_Ty≥_t
 
	mIOTy≥
;

421 
uöt8_t
 
	mNumbî_Of_DigôÆs
;

423 
uöt16_t
 
	mA«log_Ch¨a˘îsôic_H™dÀ
;

424 
uöt16_t
 
	mDigôÆ_Ch¨a˘îi°ic_H™dÀ
;

425 
uöt16_t
 
	mCCCD_H™dÀ
;

426 
uöt16_t
 
	mPª£¡©i⁄_F‹m©_H™dÀ
;

427 
uöt16_t
 
	mNumbî_Of_DigôÆs_H™dÀ
;

428 } 
	tAIOP_Clõ¡_In°™˚_Info_t
;

430 
	#AIOP_CLIENT_INSTANCE_INFO_SIZE
 ((
AIOP_Clõ¡_In°™˚_Info_t
))

	)

436 
	s_ègAIOP_Clõ¡_Ch¨a˘îi°ic_Info_t


438 
q≠i_BLE_AIOS_Ch¨a˘îi°ic_Ty≥_t
 
	mTy≥
;

439 
AIOP_Clõ¡_In°™˚_Info_t
 
	mIn°™˚s
[
AIOP_NUMBER_OF_SUPPORTED_INSTANCES
];

440 } 
	tAIOP_Clõ¡_Ch¨a˘îi°ic_Info_t
;

442 
	#AIOP_CLIENT_CHARACTERISTIC_INFO_SIZE
 ((
AIOP_Clõ¡_Ch¨a˘îi°ic_Info_t
))

	)

468 
	s_ègAIOP_Clõ¡_Inf‹m©i⁄_t


470 
AIOP_Clõ¡_Ch¨a˘îi°ic_Info_t
 
	mCh¨a˘îi°ics
[
AIOP_NUMBER_OF_SUPPORTED_CHARACTERISTICS
];

471 
AIOP_Clõ¡_Reque°_Info_t
 
	mClõ¡_Reque°_Info
;

472 } 
	tAIOP_Clõ¡_Inf‹m©i⁄_t
;

474 
	#AIOP_CLIENT_INFORMATION_DATA_SIZE
 ((
AIOP_Clõ¡_Inf‹m©i⁄_t
))

	)

479 
	s_ègKeyM≠pög_t


481 
	mAscii
;

482 
uöt8_t
 
	mHID
;

483 
uöt8_t
 
	mModifõrs
;

484 } 
	tKeyM≠pög_t
;

490 
	s_ègSíd_Info_t


492 
uöt32_t
 
	mByãsToSíd
;

493 
uöt32_t
 
	mByãsSít
;

494 } 
	tSíd_Info_t
;

497 
	s__ègSPPLE_D©a_Buf„r_t


499 
	mInIndex
;

500 
	mOutIndex
;

501 
	mByãsFªe
;

502 
	mBuf„rSize
;

503 
uöt8_t
 
	mBuf„r
[
SPPLE_DATA_BUFFER_LENGTH
*3];

504 } 
	tSPPLE_D©a_Buf„r_t
;

510 
	s_ègGAPS_Clõ¡_Info_t


512 
uöt16_t
 
	mDevi˚NameH™dÀ
;

513 
uöt16_t
 
	mDevi˚Aµóøn˚H™dÀ
;

514 } 
	tGAPS_Clõ¡_Info_t
;

518 
	s_ègGAPS_Devi˚_Aµóøn˚_M≠pög_t


520 
uöt16_t
 
	mAµóøn˚
;

521 *
	mSåög
;

522 } 
	tGAPS_Devi˚_Aµóøn˚_M≠pög_t
;

528 
	#DEVICE_INFO_FLAGS_LTK_VALID
 0x01

	)

529 
	#DEVICE_INFO_FLAGS_SPPLE_SERVER
 0x02

	)

530 
	#DEVICE_INFO_FLAGS_SPPLE_CLIENT
 0x04

	)

531 
	#DEVICE_INFO_FLAGS_SERVICE_DISCOVERY_OUTSTANDING
 0x08

	)

532 
	#DEVICE_INFO_FLAGS_IRK_VALID
 0x10

	)

533 
	#DEVICE_INFO_FLAGS_ADDED_TO_WHITE_LIST
 0x20

	)

534 
	#DEVICE_INFO_FLAGS_ADDED_TO_RESOLVING_LIST
 0x40

	)

537 
	s_ègHIDS_Rï‹t_t


539 
q≠i_BLE_HIDS_Rï‹t_Re„ªn˚_D©a_t
 
	mRï‹tRe„ªn˚D©a
;

540 
uöt16_t
 
	mH™dÀ
;

541 
uöt16_t
 
	mRï‹tRe„ªn˚H™dÀ
;

542 
uöt16_t
 
	mCCCDH™dÀ
;

543 } 
	tHIDS_Rï‹t_t
;

545 
	s_ègHIDS_Exã∫Æ_Rï‹t_t


547 
uöt16_t
 
	mExã∫ÆRï‹tRe„ªn˚H™dÀ
;

548 
q≠i_BLE_GATT_UUID_t
 
	mExã∫ÆRï‹tRe„ªn˚
;

549 } 
	tHIDS_Exã∫Æ_Rï‹t_t
;

555 
	mhπHIDSI≈utRï‹t
 = 1,

556 
	mhπHIDSOuçutRï‹t
 = 2,

557 
	mhπHIDSFótuªRï‹t
 = 3,

558 
	mhπHIDSBoŸKeybﬂrdI≈utRï‹t
 = 4,

559 
	mhπHIDSBoŸKeybﬂrdOuputRï‹t
 = 5,

560 
	mhπHIDSBoŸMou£I≈utRï‹t
 = 6

561 } 
	tHIDS_Rï‹t_Ty≥_VÆue_t
;

565 
	s_ègHIDS_Clõ¡_Info_t


567 
q≠i_BLE_GATT_Aâribuã_H™dÀ_Group_t
 
	mSîvi˚H™dÀR™ge
;

568 
uöt8_t
 *
	mRï‹tM≠
;

569 
	mRï‹tM≠Lígth
;

570 
q≠i_BLE_HIDS_HID_Inf‹m©i⁄_D©a_t
 
	mHIDSInf‹m©i⁄
;

571 
HIDS_Rï‹t_t
 
	mRï‹ts
[
HIDS_MAXIMUM_NUMBER_REPORTS
];

572 
HIDS_Exã∫Æ_Rï‹t_t
 
	mExã∫ÆRï‹tRe„ªn˚s
[
HIDS_MAXIMUM_NUMBER_EXTERNAL_REPORT_REFERENCES
];

573 
q≠i_BLE_DIS_PNP_ID_D©a_t
 
	mPNP_ID_D©a
;

574 
uöt16_t
 
	mPrŸocﬁModeH™dÀ
;

575 
uöt16_t
 
	mRï‹tM≠H™dÀ
;

576 
uöt16_t
 
	mBoŸKeybﬂrdI≈utRï‹t
;

577 
uöt16_t
 
	mBoŸKeybﬂrdOuçutRï‹t
;

578 
uöt16_t
 
	mBoŸMou£I≈utRï‹t
;

579 
uöt16_t
 
	mHIDSInf‹m©i⁄H™dÀ
;

580 
uöt16_t
 
	mC⁄åﬁPoöt
;

581 
uöt16_t
 
	mBoŸKeybﬂrdI≈utRï‹t_CCCD
;

582 
uöt16_t
 
	mBoŸMou£I≈utRï‹t_CCCD
;

583 
q≠i_BLE_HIDS_PrŸocﬁ_Mode_t
 
	mPrŸocﬁMode
;

584 } 
	tHIDS_Clõ¡_Info_t
;

588 
	s_ègHIDS_Sîvî_Info_t


590 
uöt16_t
 
	mBoŸMou£I≈utC⁄figuøti⁄
;

591 
uöt16_t
 
	mBoŸKeybﬂrdI≈utC⁄figuøti⁄
;

592 
uöt16_t
 
	mRï‹tKeybﬂrdI≈utC⁄figuøti⁄
;

593 
uöt16_t
 
	mRï‹tMou£I≈utC⁄figuøti⁄
;

594 } 
	tHIDS_Sîvî_Info_t
;

598 
	s_ègX„rInfo_t


600 
uöt64_t
 
	mRxCou¡
;

601 
boﬁón_t
 
	mTimögSèπed
;

602 
uöt64_t
 
	mFú°Time
;

603 
uöt64_t
 
	mLa°Time
;

604 } 
	tX„rInfo_t
;

621 
	s_ègDevi˚Info_t


623 
uöt8_t
 
	mFœgs
;

624 
	mC⁄√˘i⁄ID
;

625 
boﬁón_t
 
	mRemŸeDevi˚IsMa°î
;

626 
q≠i_BLE_BD_ADDR_t
 
	mRemŸeAddªss
;

627 
q≠i_BLE_GAP_LE_Addªss_Ty≥_t
 
	mRemŸeAddªssTy≥
;

628 
q≠i_BLE_GAP_LE_Addªss_Ty≥_t
 
	mIdítôyAddªssTy≥
;

629 
q≠i_BLE_BD_ADDR_t
 
	mIdítôyAddªssBD_ADDR
;

630 
uöt8_t
 
	mEn¸y±i⁄KeySize
;

631 
q≠i_BLE_L⁄g_Tîm_Key_t
 
	mLTK
;

632 
q≠i_BLE_En¸y±i⁄_Key_t
 
	mIRK
;

633 
q≠i_BLE_R™dom_Numbî_t
 
	mR™d
;

634 
uöt16_t
 
	mEDIV
;

635 
q≠i_BLE_GAP_LE_Whôe_Li°_E¡ry_t
 
	mWhôeLi°E¡ry
;

636 
q≠i_BLE_GAP_LE_Resﬁvög_Li°_E¡ry_t
 
	mResﬁvögLi°E¡ry
;

637 
AIOP_Clõ¡_Inf‹m©i⁄_t
 
	mAIOPClõ¡Info
;

638 
uöt16_t
 
	mAIOPSîvîC⁄figuøti⁄
;

639 
q≠i_BLE_BAS_Clõ¡_Inf‹m©i⁄_t
 
	mBASClõ¡Info
[
MAX_SUPPORTED_BATTERY_INSTANCES
];

640 
q≠i_BLE_BAS_Sîvî_Inf‹m©i⁄_t
 
	mBASSîvîInfo
[
MAX_SUPPORTED_BATTERY_INSTANCES
];

641 
GAPS_Clõ¡_Info_t
 
	mGAPSClõ¡Info
;

642 
q≠i_BLE_SCPS_Clõ¡_Inf‹m©i⁄_t
 
	mSCPSClõ¡Info
;

643 
q≠i_BLE_SCPS_Sîvî_Inf‹m©i⁄_t
 
	mSCPSSîvîInfo
;

644 
HIDS_Clõ¡_Info_t
 
	mHIDSClõ¡Info
[
MAX_SUPPORTED_HID_INSTANCES
];

645 
HIDS_Sîvî_Info_t
 
	mHIDSSîvîInfo
;

646 
q≠i_BLE_HRS_Clõ¡_Inf‹m©i⁄_t
 
	mHRSClõ¡Info
;

647 
SPPLE_Clõ¡_Info_t
 
	mClõ¡Info
;

648 
SPPLE_Sîvî_Info_t
 
	mSîvîInfo
;

649 
	mTønsmôCªdôs
;

650 
SPPLE_D©a_Buf„r_t
 
	mRe˚iveBuf„r
;

651 
SPPLE_D©a_Buf„r_t
 
	mTønsmôBuf„r
;

652 
X„rInfo_t
 
	mX„rInfo
;

653 
boﬁón_t
 
	mThroughputModeA˘ive
;

654 
_ègDevi˚Info_t
 *
	mNextDevi˚InfoInfoPå
;

655 } 
	tDevi˚Info_t
;

657 
	#DEVICE_INFO_DATA_SIZE
 ((
Devi˚Info_t
))

	)

659 
	s_ègPîsi°ítRemŸeDevi˚D©a_t


661 
uöt8_t
 
	mFœgs
;

662 
q≠i_BLE_BD_ADDR_t
 
	mLa°Addªss
;

663 
q≠i_BLE_GAP_LE_Addªss_Ty≥_t
 
	mLa°AddªssTy≥
;

664 
q≠i_BLE_BD_ADDR_t
 
	mIdítôyAddªss
;

665 
q≠i_BLE_GAP_LE_Addªss_Ty≥_t
 
	mIdítôyAddªssTy≥
;

666 
uöt8_t
 
	mEn¸y±i⁄KeySize
;

667 
q≠i_BLE_L⁄g_Tîm_Key_t
 
	mLTK
;

668 
q≠i_BLE_En¸y±i⁄_Key_t
 
	mIRK
;

669 } 
	tPîsi°ítRemŸeDevi˚D©a_t
;

671 
	#PERSISTENT_REMOTE_DEVICE_DATA_SIZE
 ((
Pîsi°ítRemŸeDevi˚D©a_t
))

	)

673 
	#PERSISTENT_REMOTE_DEVICE_DATA_FLAG_LTK_VALID
 0x01

	)

674 
	#PERSISTENT_REMOTE_DEVICE_DATA_FLAG_IDENTITY_VALID
 0x02

	)

676 
	s_ègPîsi°ítD©a_t


678 
q≠i_BLE_BD_ADDR_t
 
	mLoˇlAddªss
;

679 
uöt8_t
 
	mNumbîRemŸeDevi˚s
;

680 
Pîsi°ítRemŸeDevi˚D©a_t
 
	mRemŸeDevi˚s
[1];

681 } 
	tPîsi°ítD©a_t
;

683 
	#PERSISTENT_DATA_SIZE
(
_x
Ë(
	`QAPI_BLE_BTPS_STRUCTURE_OFFSET
(
Pîsi°ítD©a_t
, 
RemŸeDevi˚s
Ë+ (
PERSISTENT_REMOTE_DEVICE_DATA_SIZE
 * (_x)))

	)

689 
QCLI_Group_H™dÀ_t
 
	gbÀ_group
;

691 
Devi˚Info_t
 *
Cª©eNewDevi˚InfoE¡ry
(Devi˚Info_à**
Li°Hód
, 
q≠i_BLE_BD_ADDR_t
 
RemŸeAddªss
);

692 
uöt32_t
 
	gBluëoŸhSèckID
;

696 
uöt32_t
 
	gSˇnTimîID
;

698 
q≠i_BLE_HCI_DrivîInf‹m©i⁄_t
 
	gHCI_DrivîInf‹m©i⁄
;

704 
	gC⁄√˘i⁄Cou¡
;

707 
Devi˚Info_t
 *
	gDevi˚InfoLi°
;

710 
	tBﬂrdSå_t
[16];

716 
GAPLE_P¨amëîs_t
 
	gLE_P¨amëîs
;

720 
BLEP¨amëîs_t
 
	gBLEP¨amëîs
;

725 
q≠i_BLE_BD_ADDR_t
 
	gLoˇlBD_ADDR
;

728 
q≠i_BLE_BD_ADDR_t
 
	gSñe˘edRemŸeBD_ADDR
;

732 
q≠i_BLE_BD_ADDR_t
 
	gSecurôyRemŸeBD_ADDR
;

735 
q≠i_BLE_BD_ADDR_t
 
	gBLBD_SecurôyRemŸeBD_ADDR
;

741 
q≠i_BLE_En¸y±i⁄_Key_t
 
	gER
 = {0x28, 0xBA, 0xE1, 0x37, 0x13, 0xB2, 0x20, 0x45, 0x16, 0xB2, 0x19, 0xD0, 0x80, 0xEE, 0x4A, 0x51};

747 
q≠i_BLE_En¸y±i⁄_Key_t
 
	gIR
 = {0x41, 0x09, 0xA0, 0x88, 0x09, 0x6B, 0x70, 0xC0, 0x95, 0x23, 0x3C, 0x8C, 0x48, 0xFC, 0xC9, 0xFE};

753 
q≠i_BLE_En¸y±i⁄_Key_t
 
	gDHK
;

759 
q≠i_BLE_En¸y±i⁄_Key_t
 
	gIRK
;

765 
boﬁón_t
 
	gSˇnInProgªss
;

768 
boﬁón_t
 
	gLoˇlDevi˚IsMa°î
;

772 
q≠i_BLE_GAP_LE_Addªss_Ty≥_t
 
	gRemŸeAddªssTy≥
;

779 
q≠i_Pîsi°_H™dÀ_t
 
	gPîsi°H™dÀ
;

783 
boﬁón_t
 
	gLoˇlOOBVÆid
;

787 
q≠i_BLE_Secuª_C⁄√˘i⁄s_R™domizî_t
 
	gLoˇlOOBR™domizî
;

791 
q≠i_BLE_Secuª_C⁄√˘i⁄s_C⁄fúm©i⁄_t
 
	gLoˇlOOBC⁄fúm©i⁄
;

795 
boﬁón_t
 
	gRemŸeOOBVÆid
;

799 
q≠i_BLE_Secuª_C⁄√˘i⁄s_R™domizî_t
 
	gRemŸeOOBR™domizî
;

803 
q≠i_BLE_Secuª_C⁄√˘i⁄s_C⁄fúm©i⁄_t
 
	gRemŸeOOBC⁄fúm©i⁄
;

808 #ifde‡
V2


810 
QCLI_Group_H™dÀ_t
 
	gbt5_group
;

817 
QCLI_Group_H™dÀ_t
 
	gaios_group
;

820 
uöt32_t
 
	gAIOSIn°™˚ID
;

825 
AIOP_Sîvî_Inf‹m©i⁄_t
 
	gAIOSSîvîInfo
;

831 
QCLI_Group_H™dÀ_t
 
	gbas_group
;

834 
uöt32_t
 
	gBASIn°™˚ID
[
MAX_SUPPORTED_BATTERY_INSTANCES
];

839 
	gBASIn°™˚IDIndex
;

843 
uöt8_t
 
	gB©ãryLevñ
[
MAX_SUPPORTED_BATTERY_INSTANCES
];

850 
uöt32_t
 
	gDISIn°™˚ID
;

855 
QCLI_Group_H™dÀ_t
 
	gg≠s_group
;

858 
uöt32_t
 
	gGAPSIn°™˚ID
;

863 
	gHIDSIn°™˚ID
;

867 
QCLI_Group_H™dÀ_t
 
	ghids_group
;

870 
	gHIDSIn°™˚IDIndex
;

874 
q≠i_BLE_UUID_128_t
 
	gNULL_UUID_128
;

877 
uöt8_t
 
	gMou£I≈utRï‹t
[
HID_MOUSE_INPUT_REPORT_SIZE
];

880 
	gMou£I≈utRï‹tSize
 = 
HID_MOUSE_INPUT_REPORT_SIZE
;

884 
uöt8_t
 
	gKeybﬂrdI≈utRï‹t
[
HID_KEYBOARD_INPUT_REPORT_SIZE
];

888 
	gKeybﬂrdI≈utRï‹tSize
 = 
HID_KEYBOARD_INPUT_REPORT_SIZE
;

892 
uöt8_t
 
	gKeybﬂrdOuçutRï‹t
[
HID_KEYBOARD_OUTPUT_REPORT_SIZE
];

896 
	gKeybﬂrdOuçutRï‹tSize
 = 
HID_KEYBOARD_OUTPUT_REPORT_SIZE
;

900 
q≠i_BLE_HIDS_PrŸocﬁ_Mode_t
 
	gHIDS_PrŸocﬁ_Mode
;

906 
uöt8_t
 
	gKeybﬂrdRï‹tDes¸ùt‹
[] =

947 
KeyM≠pög_t
 
	gKeyTabÀ
[] =

1049 
QCLI_Group_H™dÀ_t
 
	gs˝s_group
;

1052 
uöt32_t
 
	gSCPSIn°™˚ID
;

1058 
QCLI_Group_H™dÀ_t
 
	g•∂e_group
;

1061 
QCLI_Group_H™dÀ_t
 
	gbÀ_Âga_group
;

1064 
uöt32_t
 
	gSPPLESîvi˚ID
;

1068 
uöt8_t
 
	gSPPLEBuf„r
[
SPPLE_DATA_BUFFER_LENGTH
+1];

1072 
Síd_Info_t
 
	gSídInfo
;

1076 
boﬁón_t
 
	gLo›backA˘ive
;

1081 
boﬁón_t
 
	gDi•œyRawD©a
;

1087 
boﬁón_t
 
	gAutom©icRódA˘ive
;

1092 
boﬁón_t
 
	gDi•œyAdvîtisögEvítD©a
;

1098 
QCLI_Group_H™dÀ_t
 
	g¶owp_group
;

1101 
q≠i_BLE_BD_ADDR_t
 
	gSLoWPRouãrAddªss
;

1104 
boﬁón_t
 
	gSLoWPInôülized
;

1107 
boﬁón_t
 
	gSLoWPNodeInôülized
;

1110 
boﬁón_t
 
	gSLoWPC⁄√˘ed
;

1115 
uöt32_t
 
	gTPSIn°™˚ID
;

1120 *
	gEº‹CodeSå
[] =

1142 
	#NUMBER_OF_ERROR_CODES
 ((
Eº‹CodeSå
)/(*))

	)

1146 
GAPS_Devi˚_Aµóøn˚_M≠pög_t
 
	gAµóøn˚M≠pögs
[] =

1148 { 
QAPI_BLE_GAP_DEVICE_APPEARANCE_VALUE_UNKNOWN
, "Unknown" },

1149 { 
QAPI_BLE_GAP_DEVICE_APPEARANCE_VALUE_GENERIC_PHONE
, "Generic Phone" },

1150 { 
QAPI_BLE_GAP_DEVICE_APPEARANCE_VALUE_GENERIC_COMPUTER
, "Generic Computer" },

1151 { 
QAPI_BLE_GAP_DEVICE_APPEARANCE_VALUE_GENERIC_WATCH
, "Generic Watch" },

1152 { 
QAPI_BLE_GAP_DEVICE_APPEARANCE_VALUE_SPORTS_WATCH
, "Sports Watch" },

1153 { 
QAPI_BLE_GAP_DEVICE_APPEARANCE_VALUE_GENERIC_CLOCK
, "Generic Clock" },

1154 { 
QAPI_BLE_GAP_DEVICE_APPEARANCE_VALUE_GENERIC_DISPLAY
, "Generic Display" },

1155 { 
QAPI_BLE_GAP_DEVICE_APPEARANCE_VALUE_GENERIC_GENERIC_REMOTE_CONTROL
, "Generic Remote Control" },

1156 { 
QAPI_BLE_GAP_DEVICE_APPEARANCE_VALUE_GENERIC_EYE_GLASSES
, "Eye Glasses" },

1157 { 
QAPI_BLE_GAP_DEVICE_APPEARANCE_VALUE_GENERIC_TAG
, "Generic Tag" },

1158 { 
QAPI_BLE_GAP_DEVICE_APPEARANCE_VALUE_GENERIC_KEYRING
, "Generic Keyring" },

1159 { 
QAPI_BLE_GAP_DEVICE_APPEARANCE_VALUE_GENERIC_MEDIA_PLAYER
, "Generic Media Player" },

1160 { 
QAPI_BLE_GAP_DEVICE_APPEARANCE_VALUE_GENERIC_BARCODE_SCANNER
, "Generic Barcode Scanner" },

1161 { 
QAPI_BLE_GAP_DEVICE_APPEARANCE_VALUE_GENERIC_THERMOMETER
, "Generic Thermometer" },

1162 { 
QAPI_BLE_GAP_DEVICE_APPEARANCE_VALUE_THERMOMETER_EAR
, "Ear Thermometer" },

1163 { 
QAPI_BLE_GAP_DEVICE_APPEARANCE_VALUE_GENERIC_HEART_RATE_SENSOR
, "Generic Heart Rate Sensor" },

1164 { 
QAPI_BLE_GAP_DEVICE_APPEARANCE_VALUE_BELT_HEART_RATE_SENSOR
, "Belt Heart Rate Sensor" },

1165 { 
QAPI_BLE_GAP_DEVICE_APPEARANCE_VALUE_GENERIC_BLOOD_PRESSURE
, "Generic Blood Pressure" },

1166 { 
QAPI_BLE_GAP_DEVICE_APPEARANCE_VALUE_BLOOD_PRESSURE_ARM
, "Blood Pressure: ARM" },

1167 { 
QAPI_BLE_GAP_DEVICE_APPEARANCE_VALUE_BLOOD_PRESSURE_WRIST
, "Blood Pressure: Wrist" },

1168 { 
QAPI_BLE_GAP_DEVICE_APPEARANCE_VALUE_HUMAN_INTERFACE_DEVICE
, "Human Interface Device" },

1169 { 
QAPI_BLE_GAP_DEVICE_APPEARANCE_VALUE_HID_KEYBOARD
, "HID Keyboard" },

1170 { 
QAPI_BLE_GAP_DEVICE_APPEARANCE_VALUE_HID_MOUSE
, "HID Mouse" },

1171 { 
QAPI_BLE_GAP_DEVICE_APPEARANCE_VALUE_HID_JOYSTICK
, "HID Joystick" },

1172 { 
QAPI_BLE_GAP_DEVICE_APPEARANCE_VALUE_HID_GAMEPAD
, "HID Gamepad" },

1173 { 
QAPI_BLE_GAP_DEVICE_APPEARANCE_VALUE_HID_DIGITIZER_TABLET
, "HID Digitizer Tablet" },

1174 { 
QAPI_BLE_GAP_DEVICE_APPEARANCE_VALUE_HID_CARD_READER
, "HID Card Reader" },

1175 { 
QAPI_BLE_GAP_DEVICE_APPEARANCE_VALUE_HID_DIGITAL_PEN
, "HID Digitizer Pen" },

1176 { 
QAPI_BLE_GAP_DEVICE_APPEARANCE_VALUE_HID_BARCODE_SCANNER
, "HID Bardcode Scanner" },

1177 { 
QAPI_BLE_GAP_DEVICE_APPEARANCE_VALUE_GENERIC_GLUCOSE_METER
, "Generic Glucose Meter" }

1180 
	#NUMBER_OF_APPEARANCE_MAPPINGS
 ((
Aµóøn˚M≠pögs
)/(
GAPS_Devi˚_Aµóøn˚_M≠pög_t
))

	)

1184 c⁄° *
	gHCIVîsi⁄Såögs
[] =

1199 
	#NUM_SUPPORTED_HCI_VERSIONS
 ((
HCIVîsi⁄Såögs
)/(*Ë- 1)

	)

1203 c⁄° *
	gIOC≠abûôõsSåögs
[] =

1215 
	#CURRENT_TEST_NONE
 0

	)

1216 
	#CURRENT_TEST_TX_ACL
 1

	)

1217 
	#CURRENT_TEST_RX_ACL
 3

	)

1218 
	#CURRENT_TEST_PERIODIC
 4

	)

1220 
	#MAXIMUM_TEST_BUFFER
 1024

	)

1222 
	gCuºítTe°
 = 
CURRENT_TEST_NONE
;

1223 
	gNumbîACLPackës
;

1224 
	gNumbîOut°™dögACLPackës
;

1225 
	gMaxACLPackëSize
;

1226 
	gSèπTime
;

1227 
	gEndTime
;

1228 
	gNumbîByãs
;

1229 
	gPackëLígth
;

1230 
	gTe°Buf„r
[
MAXIMUM_TEST_BUFFER
];

1231 
uöt16_t
 
	gC⁄√˘i⁄H™dÀ
;

1232 
uöt32_t
 
	gTønsmôPîiod
;

1233 
q≠i_TIMER_h™dÀ_t
 
	gPîiodicSídTimî
;

1237 
	gD©aSå
[] = "~!@#$%^&*()_+`1234567890-=:;\"'<>?,./@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]`abcdefghijklmnopqrstuvwxyz{|}<>\n";

1238 
	gD©aSåLí
 = ((
D©aSå
)-1);

1259 
	$BD_ADDRToSå
(
q≠i_BLE_BD_ADDR_t
 
Bﬂrd_Addªss
, 
BﬂrdSå_t
 
BﬂrdSå
)

1261 
	`¢¥ötf
((*)
BﬂrdSå
, ((
BﬂrdSå_t
)/()), "0x%02X%02X%02X%02X%02X%02X", 
Bﬂrd_Addªss
.
BD_ADDR5
, Bﬂrd_Addªss.
BD_ADDR4
, Bﬂrd_Addªss.
BD_ADDR3
, Bﬂrd_Addªss.
BD_ADDR2
, Bﬂrd_Addªss.
BD_ADDR1
, Bﬂrd_Addªss.
BD_ADDR0
);

1262 
	}
}

1268 
	$Di•œyFun˘i⁄Eº‹
(*
Fun˘i⁄
, 
Sètus
)

1270 
	`LOG_ERROR
("%†Faûed: %d.\n", 
Fun˘i⁄
, 
Sètus
);

1271 
	}
}

1273 
QCLI_Comm™d_Sètus_t
 
	$St‹ePîsi°ítD©a
()

1275 
uöt8_t
 
NumbîDevi˚s
;

1276 
uöt8_t
 
Index
;

1277 
Devi˚Info_t
 *
Devi˚Info
;

1278 
q≠i_Sètus_t
 
Resu…
;

1279 
Pîsi°ítD©a_t
 *
Pîsi°ítD©a
;

1280 
QCLI_Comm™d_Sètus_t
 
ªt_vÆ
;

1283 if(
BluëoŸhSèckID
)

1286 if(
Pîsi°H™dÀ
)

1288 if(!
	`q≠i_BLE_BSC_LockBluëoŸhSèck
(
BluëoŸhSèckID
))

1290 
Devi˚Info
 = 
Devi˚InfoLi°
;

1291 
NumbîDevi˚s
 = 0;

1293 
Devi˚Info
)

1295 ++
NumbîDevi˚s
;

1296 
Devi˚Info
 = Devi˚Info->
NextDevi˚InfoInfoPå
;

1299 if((
Pîsi°ítD©a
 = (
Pîsi°ítD©a_t
 *)
	`mÆloc
(
	`PERSISTENT_DATA_SIZE
(
NumbîDevi˚s
))Ë!
NULL
)

1301 
	`mem£t
(
Pîsi°ítD©a
, 0, 
	`PERSISTENT_DATA_SIZE
(
NumbîDevi˚s
));

1303 
Pîsi°ítD©a
->
LoˇlAddªss
 = 
LoˇlBD_ADDR
;

1304 
Pîsi°ítD©a
->
NumbîRemŸeDevi˚s
 = 
NumbîDevi˚s
;

1306 
Devi˚Info
 = 
Devi˚InfoLi°
;

1307 
Index
 = 0;

1309 
Devi˚Info
)

1311 
Pîsi°ítD©a
->
RemŸeDevi˚s
[
Index
].
La°Addªss
 = 
Devi˚Info
->
RemŸeAddªss
;

1312 
Pîsi°ítD©a
->
RemŸeDevi˚s
[
Index
].
La°AddªssTy≥
 = 
Devi˚Info
->
RemŸeAddªssTy≥
;

1314 if(
Devi˚Info
->
Fœgs
 & 
DEVICE_INFO_FLAGS_LTK_VALID
)

1316 
Pîsi°ítD©a
->
RemŸeDevi˚s
[
Index
].
Fœgs
 |
PERSISTENT_REMOTE_DEVICE_DATA_FLAG_LTK_VALID
;

1317 
Pîsi°ítD©a
->
RemŸeDevi˚s
[
Index
].
En¸y±i⁄KeySize
 = 
Devi˚Info
->EncryptionKeySize;

1318 
Pîsi°ítD©a
->
RemŸeDevi˚s
[
Index
].
LTK
 = 
Devi˚Info
->LTK;

1321 if(
Devi˚Info
->
Fœgs
 & 
DEVICE_INFO_FLAGS_IRK_VALID
)

1323 
Pîsi°ítD©a
->
RemŸeDevi˚s
[
Index
].
Fœgs
 |
PERSISTENT_REMOTE_DEVICE_DATA_FLAG_IDENTITY_VALID
;

1324 
Pîsi°ítD©a
->
RemŸeDevi˚s
[
Index
].
IdítôyAddªss
 = 
Devi˚Info
->
IdítôyAddªssBD_ADDR
;

1325 
Pîsi°ítD©a
->
RemŸeDevi˚s
[
Index
].
IdítôyAddªssTy≥
 = 
Devi˚Info
->IdentityAddressType;

1326 
Pîsi°ítD©a
->
RemŸeDevi˚s
[
Index
].
IRK
 = 
Devi˚Info
->IRK;

1329 ++
Index
;

1330 
Devi˚Info
 = Devi˚Info->
NextDevi˚InfoInfoPå
;

1333 
Resu…
 = 
	`q≠i_Pîsi°_Put
(
Pîsi°H™dÀ
, 
	`PERSISTENT_DATA_SIZE
(
NumbîDevi˚s
), (
uöt8_t
 *)
Pîsi°ítD©a
);

1335 if(
Resu…
 =
QAPI_OK
)

1337 
	`QCLI_Prötf
(
bÀ_group
, "qapi_Persist_Put_Data() Success.\n");

1339 
ªt_vÆ
 = 
QCLI_STATUS_SUCCESS_E
;

1343 
	`QCLI_Prötf
(
bÀ_group
, "q≠i_Pîsi°_Put_D©a(ËFaûuª: %d.\n", 
Resu…
);

1345 
ªt_vÆ
 = 
QCLI_STATUS_ERROR_E
;

1348 
	`‰ì
(
Pîsi°ítD©a
);

1352 
	`QCLI_Prötf
(
bÀ_group
, "UnableÅoállocate memory\n");

1354 
ªt_vÆ
 = 
QCLI_STATUS_ERROR_E
;

1357 
	`q≠i_BLE_BSC_UnLockBluëoŸhSèck
(
BluëoŸhSèckID
);

1361 
	`QCLI_Prötf
(
bÀ_group
, "UnableÅoácquire Bluetooth Stack Lock.\n");

1363 
ªt_vÆ
 = 
QCLI_STATUS_ERROR_E
;

1368 
	`QCLI_Prötf
(
bÀ_group
, "Persistent Storage Not Initialized\n");

1370 
ªt_vÆ
 = 
QCLI_STATUS_ERROR_E
;

1374 
ªt_vÆ
 = 
QCLI_STATUS_ERROR_E
;

1376 (
ªt_vÆ
);

1377 
	}
}

1383 
	$FªeDevi˚InfoLi°
(
Devi˚Info_t
 **
Li°Hód
)

1385 
Devi˚Info_t
 *
Devi˚Info
;

1386 
In°™˚ID
;

1388 
Devi˚Info
 = *
Li°Hód
;

1390 
Devi˚Info
)

1393 
In°™˚ID
 = 0; In°™˚ID < 
MAX_SUPPORTED_HID_INSTANCES
; InstanceID++)

1396 if(
Devi˚Info
->
HIDSClõ¡Info
[
In°™˚ID
].
Rï‹tM≠
)

1397 
	`‰ì
(
Devi˚Info
->
HIDSClõ¡Info
[
In°™˚ID
].
Rï‹tM≠
);

1400 
Devi˚Info
 = Devi˚Info->
NextDevi˚InfoInfoPå
;

1403 
	`q≠i_BLE_BSC_FªeGíîicLi°E¡ryLi°
((**)(
Li°Hód
), 
	`QAPI_BLE_BTPS_STRUCTURE_OFFSET
(
Devi˚Info_t
, 
NextDevi˚InfoInfoPå
));

1404 
	}
}

1408 
QCLI_Comm™d_Sètus_t
 
	$LﬂdPîsi°ítD©a
()

1410 
uöt8_t
 
Index
;

1411 
uöt32_t
 
D©aSize
;

1412 
Devi˚Info_t
 *
Devi˚Info
;

1413 
q≠i_Sètus_t
 
Resu…
;

1414 
Pîsi°ítD©a_t
 *
Pîsi°ítD©a
;

1415 
QCLI_Comm™d_Sètus_t
 
ªt_vÆ
;

1418 if(
BluëoŸhSèckID
)

1421 if(
Pîsi°H™dÀ
)

1423 if(!
	`q≠i_BLE_BSC_LockBluëoŸhSèck
(
BluëoŸhSèckID
))

1430 
Resu…
 = 
	`q≠i_Pîsi°_Gë
(
Pîsi°H™dÀ
, &
D©aSize
, (
uöt8_t
 **)&
Pîsi°ítD©a
);

1432 if(
Resu…
 =
QAPI_OK
)

1434 
	`QCLI_Prötf
(
bÀ_group
, "q≠i_Pîsi°_Gë(ËSuc˚ss. Numbî devi˚s: %u\n", 
Pîsi°ítD©a
->
NumbîRemŸeDevi˚s
);

1436 if((
Pîsi°ítD©a
Ë&& (
D©aSize
 >
	`PERSISTENT_DATA_SIZE
(0)Ë&& (D©aSizê>PERSISTENT_DATA_SIZE(Pîsi°ítD©a->
NumbîRemŸeDevi˚s
)))

1439 if(
	`QAPI_BLE_COMPARE_BD_ADDR
(
LoˇlBD_ADDR
, 
Pîsi°ítD©a
->
LoˇlAddªss
))

1443 if(
Devi˚InfoLi°
)

1445 
	`QCLI_Prötf
(
bÀ_group
, "Warning: Device List isÇotÉmpty. It will be cleared.\n");

1446 
	`FªeDevi˚InfoLi°
(&
Devi˚InfoLi°
);

1447 
Devi˚InfoLi°
 = 
NULL
;

1452 
Index
=0;Index<
Pîsi°ítD©a
->
NumbîRemŸeDevi˚s
;Index++)

1456 if((
Devi˚Info
 = 
	`Cª©eNewDevi˚InfoE¡ry
(&
Devi˚InfoLi°
, 
Pîsi°ítD©a
->
RemŸeDevi˚s
[
Index
].
La°Addªss
)Ë!
NULL
)

1460 
Devi˚Info
->
RemŸeAddªssTy≥
 = 
Pîsi°ítD©a
->
RemŸeDevi˚s
[
Index
].
La°AddªssTy≥
;

1464 if(
Pîsi°ítD©a
->
RemŸeDevi˚s
[
Index
].
Fœgs
 & 
PERSISTENT_REMOTE_DEVICE_DATA_FLAG_LTK_VALID
)

1466 
Devi˚Info
->
Fœgs
 |
DEVICE_INFO_FLAGS_LTK_VALID
;

1467 
Devi˚Info
->
En¸y±i⁄KeySize
 = 
Pîsi°ítD©a
->
RemŸeDevi˚s
[
Index
].EncryptionKeySize;

1468 
Devi˚Info
->
LTK
 = 
Pîsi°ítD©a
->
RemŸeDevi˚s
[
Index
].LTK;

1472 if(
Pîsi°ítD©a
->
RemŸeDevi˚s
[
Index
].
Fœgs
 & 
PERSISTENT_REMOTE_DEVICE_DATA_FLAG_IDENTITY_VALID
)

1474 
Devi˚Info
->
Fœgs
 |
DEVICE_INFO_FLAGS_IRK_VALID
;

1475 
Devi˚Info
->
IdítôyAddªssBD_ADDR
 = 
Pîsi°ítD©a
->
RemŸeDevi˚s
[
Index
].
IdítôyAddªss
;

1476 
Devi˚Info
->
IdítôyAddªssTy≥
 = 
Pîsi°ítD©a
->
RemŸeDevi˚s
[
Index
].IdentityAddressType;

1477 
Devi˚Info
->
IRK
 = 
Pîsi°ítD©a
->
RemŸeDevi˚s
[
Index
].IRK;

1482 
Devi˚Info
->
ResﬁvögLi°E¡ry
.
Pìr_Idítôy_Addªss
 = Devi˚Info->
IdítôyAddªssBD_ADDR
;

1483 
Devi˚Info
->
ResﬁvögLi°E¡ry
.
Pìr_Idítôy_Addªss_Ty≥
 = Devi˚Info->
IdítôyAddªssTy≥
;

1484 
Devi˚Info
->
ResﬁvögLi°E¡ry
.
Pìr_IRK
 = Devi˚Info->
IRK
;

1485 
Devi˚Info
->
ResﬁvögLi°E¡ry
.
Loˇl_IRK
 = 
IRK
;

1490 
	`QCLI_Prötf
(
bÀ_group
, "FailedÅo create deviceÉntry\n");

1494 
	`QCLI_Prötf
(
bÀ_group
, "Persistent dataÜoaded\n");

1496 
ªt_vÆ
 = 
QCLI_STATUS_SUCCESS_E
;

1500 
	`QCLI_Prötf
(
bÀ_group
, "Local BD_ADDR doesÇot matchÖersistent data. TheÖersistent data is invalid.\n");

1502 
ªt_vÆ
 = 
QCLI_STATUS_ERROR_E
;

1507 
	`QCLI_Prötf
(
bÀ_group
, "Persistent data is invalid\n");

1509 
ªt_vÆ
 = 
QCLI_STATUS_ERROR_E
;

1512 
	`q≠i_Pîsi°_Fªe
(
Pîsi°H™dÀ
, (
uöt8_t
 *)
Pîsi°ítD©a
);

1516 
	`QCLI_Prötf
(
bÀ_group
, "q≠i_Pîsi°_Gë(ËFaûuª: %d\n", 
Resu…
);

1518 
ªt_vÆ
 = 
QCLI_STATUS_ERROR_E
;

1528 
	`q≠i_BLE_BSC_UnLockBluëoŸhSèck
(
BluëoŸhSèckID
);

1532 
	`QCLI_Prötf
(
bÀ_group
, "UnableÅoácquire Bluetooth Stack Lock.\n");

1534 
ªt_vÆ
 = 
QCLI_STATUS_ERROR_E
;

1539 
	`QCLI_Prötf
(
bÀ_group
, "Persistent Storage Not Initialized\n");

1541 
ªt_vÆ
 = 
QCLI_STATUS_ERROR_E
;

1545 
ªt_vÆ
 = 
QCLI_STATUS_ERROR_E
;

1547 (
ªt_vÆ
);

1548 
	}
}

1564 
Devi˚Info_t
 *
	$SórchDevi˚InfoE¡ryByBD_ADDR
(
Devi˚Info_t
 **
Li°Hód
, 
q≠i_BLE_BD_ADDR_t
 
RemŸeAddªss
)

1566 
BﬂrdSå_t
 
BﬂrdSå
;

1567 
Devi˚Info_t
 *
ªt_vÆ
 = 
NULL
;

1568 
Devi˚Info_t
 *
Devi˚Info
;

1570 i‡(
Li°Hód
)

1572 
Devi˚Info
 = *
Li°Hód
;

1573 
Devi˚Info
)

1575 i‡(
	`QAPI_BLE_COMPARE_BD_ADDR
(
Devi˚Info
->
RemŸeAddªss
, RemoteAddress))

1577 
ªt_vÆ
 = 
Devi˚Info
;

1582 if(
	`QAPI_BLE_GAP_LE_TEST_RESOLVABLE_ADDRESS_BITS
(
RemŸeAddªss
))

1584 if(
Devi˚Info
->
Fœgs
 & 
DEVICE_INFO_FLAGS_IRK_VALID
)

1586 if(
	`q≠i_BLE_GAP_LE_Resﬁve_Addªss
(
BluëoŸhSèckID
, &(
Devi˚Info
->
IRK
), 
RemŸeAddªss
))

1588 
Devi˚Info
->
RemŸeAddªss
 = RemoteAddress;

1589 
Devi˚Info
->
RemŸeAddªssTy≥
 = 
QAPI_BLE_LAT_RANDOM_E
;

1591 
	`LOG_VERBOSE
("\n");

1592 
	`LOG_VERBOSE
("Resolved Address (");

1593 
	`BD_ADDRToSå
(
Devi˚Info
->
RemŸeAddªss
, 
BﬂrdSå
);

1594 
	`LOG_VERBOSE
("%s", 
BﬂrdSå
);

1595 
	`LOG_VERBOSE
(")\n");

1596 
	`LOG_VERBOSE
(" Identity Address: ");

1597 
	`BD_ADDRToSå
(
Devi˚Info
->
IdítôyAddªssBD_ADDR
, 
BﬂrdSå
);

1598 
	`LOG_VERBOSE
("%s\n", 
BﬂrdSå
);

1599 
	`LOG_VERBOSE
(" Idítôy Addªs†Ty≥: %s\n", ((
Devi˚Info
->
IdítôyAddªssTy≥
 =
QAPI_BLE_LAT_PUBLIC_IDENTITY_E
) ? "Public Identity" : "Random Identity"));

1601 
ªt_vÆ
 = 
Devi˚Info
;

1607 
Devi˚Info
 = Devi˚Info->
NextDevi˚InfoInfoPå
;

1611  (
ªt_vÆ
);

1612 
	}
}

1619 
Devi˚Info_t
 *
	$GëCuºítPìrDevi˚Info
()

1621  
	`SórchDevi˚InfoE¡ryByBD_ADDR
(&
Devi˚InfoLi°
, 
Sñe˘edRemŸeBD_ADDR
);

1622 
	}
}

1628 
	$GëC⁄√˘i⁄Cou¡
()

1630  
C⁄√˘i⁄Cou¡
;

1631 
	}
}

1638 
Devi˚Info_t
 *
	$DñëeDevi˚InfoE¡ry
(
Devi˚Info_t
 **
Li°Hód
, 
q≠i_BLE_BD_ADDR_t
 
RemŸeAddªss
)

1640 (
	`q≠i_BLE_BSC_DñëeGíîicLi°E¡ry
(
QAPI_BLE_EK_BD_ADDR_T_E
, (*)(&
RemŸeAddªss
), 
	`QAPI_BLE_BTPS_STRUCTURE_OFFSET
(
Devi˚Info_t
, RemŸeAddªss), QAPI_BLE_BTPS_STRUCTURE_OFFSET(Devi˚Info_t, 
NextDevi˚InfoInfoPå
), (**)(
Li°Hód
)));

1641 
	}
}

1648 
Devi˚Info_t
 *
	$Cª©eNewDevi˚InfoE¡ry
(
Devi˚Info_t
 **
Li°Hód
, 
q≠i_BLE_BD_ADDR_t
 
RemŸeAddªss
)

1650 
Devi˚Info_t
 *
ªt_vÆ
 = 
NULL
;

1651 
boﬁón_t
 
Resu…
;

1653 i‡((
Li°Hód
Ë&& (!
	`QAPI_BLE_COMPARE_NULL_BD_ADDR
(
RemŸeAddªss
)))

1655 i‡((
ªt_vÆ
 = 
	`mÆloc
((
Devi˚Info_t
))Ë!
NULL
)

1657 
	`mem£t
(
ªt_vÆ
, 0, (
Devi˚Info_t
));

1659 
ªt_vÆ
->
RemŸeAddªss
 = RemoteAddress;

1661 
Resu…
 = 
	`q≠i_BLE_BSC_AddGíîicLi°E¡ry_A˘uÆ
(
QAPI_BLE_EK_BD_ADDR_T_E
, 
	`QAPI_BLE_BTPS_STRUCTURE_OFFSET
(
Devi˚Info_t
, 
RemŸeAddªss
), QAPI_BLE_BTPS_STRUCTURE_OFFSET(Devi˚Info_t, 
NextDevi˚InfoInfoPå
), (**)(
Li°Hód
), (*)(
ªt_vÆ
));

1662 i‡(!
Resu…
)

1664 
	`‰ì
(
ªt_vÆ
);

1669  (
ªt_vÆ
);

1670 
	}
}

1677 
boﬁón_t
 
	$Aµóøn˚ToSåög
(
uöt16_t
 
Aµóøn˚
, **
Såög
)

1679 
boﬁón_t
 
ªt_vÆ
;

1680 
Index
;

1682 i‡(
Såög
)

1684 
Index
=0,
ªt_vÆ
=
FALSE
;Index<
NUMBER_OF_APPEARANCE_MAPPINGS
;++Index)

1686 i‡(
Aµóøn˚M≠pögs
[
Index
].
Aµóøn˚
 == Appearance)

1688 *
Såög
 = 
Aµóøn˚M≠pögs
[
Index
].String;

1689 
ªt_vÆ
 = 
TRUE
;

1695 
ªt_vÆ
 = 
FALSE
;

1696  (
ªt_vÆ
);

1697 
	}
}

1705 
QAPI_BLE_BTPSAPI
 
	$GATT_Clõ¡EvítCÆlback_GAPS
(
uöt32_t
 
BluëoŸhSèckID
, 
q≠i_BLE_GATT_Clõ¡_Evít_D©a_t
 *
GATT_Clõ¡_Evít_D©a
, uöt32_à
CÆlbackP¨amëî
)

1707 
boﬁón_t
 
Di•œyProm±
;

1708 *
NameBuf„r
;

1709 
uöt16_t
 
Aµóøn˚
;

1710 
BﬂrdSå_t
 
BﬂrdSå
;

1711 
Devi˚Info_t
 *
Devi˚Info
;

1713 i‡((
BluëoŸhSèckID
Ë&& (
GATT_Clõ¡_Evít_D©a
))

1715 
Di•œyProm±
 = 
åue
;

1717 
GATT_Clõ¡_Evít_D©a
->
Evít_D©a_Ty≥
)

1719 
QAPI_BLE_ET_GATT_CLIENT_ERROR_RESPONSE_E
:

1720 i‡(
GATT_Clõ¡_Evít_D©a
->
Evít_D©a
.
GATT_Reque°_Eº‹_D©a
)

1722 
	`LOG_ERROR
("Error Response.\n");

1723 
	`BD_ADDRToSå
(
GATT_Clõ¡_Evít_D©a
->
Evít_D©a
.
GATT_Reque°_Eº‹_D©a
->
RemŸeDevi˚
, 
BﬂrdSå
);

1724 
	`LOG_ERROR
("C⁄√˘i⁄ ID: %u.\n", 
GATT_Clõ¡_Evít_D©a
->
Evít_D©a
.
GATT_Reque°_Eº‹_D©a
->
C⁄√˘i⁄ID
);

1725 
	`LOG_ERROR
("Tønß˘i⁄ ID: %u.\n", 
GATT_Clõ¡_Evít_D©a
->
Evít_D©a
.
GATT_Reque°_Eº‹_D©a
->
Tønß˘i⁄ID
);

1726 
	`LOG_ERROR
("C⁄√˘i⁄ Ty≥: %s.\n", (
GATT_Clõ¡_Evít_D©a
->
Evít_D©a
.
GATT_Reque°_Eº‹_D©a
->
C⁄√˘i⁄Ty≥
 =
QAPI_BLE_GCT_LE_E
)?"LE":"BR/EDR");

1727 
	`LOG_ERROR
("BD_ADDR: %s.\n", 
BﬂrdSå
);

1728 
	`LOG_ERROR
("Eº‹ Ty≥: %s.\n", (
GATT_Clõ¡_Evít_D©a
->
Evít_D©a
.
GATT_Reque°_Eº‹_D©a
->
Eº‹Ty≥
 =
QAPI_BLE_RET_ERROR_RESPONSE_E
)?"Response Error":"Response Timeout");

1730 i‡(
GATT_Clõ¡_Evít_D©a
->
Evít_D©a
.
GATT_Reque°_Eº‹_D©a
->
Eº‹Ty≥
 =
QAPI_BLE_RET_ERROR_RESPONSE_E
)

1732 
	`LOG_ERROR
("Reque° Opcode: 0x%02X.\n", 
GATT_Clõ¡_Evít_D©a
->
Evít_D©a
.
GATT_Reque°_Eº‹_D©a
->
Reque°OpCode
);

1733 
	`LOG_ERROR
("Reque° H™dÀ: 0x%04X.\n", 
GATT_Clõ¡_Evít_D©a
->
Evít_D©a
.
GATT_Reque°_Eº‹_D©a
->
Reque°H™dÀ
);

1734 
	`LOG_ERROR
("Eº‹ Code: 0x%02X.\n", 
GATT_Clõ¡_Evít_D©a
->
Evít_D©a
.
GATT_Reque°_Eº‹_D©a
->
Eº‹Code
);

1735 
	`LOG_ERROR
("Eº‹ Mesg: %s.\n", 
Eº‹CodeSå
[
GATT_Clõ¡_Evít_D©a
->
Evít_D©a
.
GATT_Reque°_Eº‹_D©a
->
Eº‹Code
]);

1739 
	`LOG_ERROR
("Error - Null Error Response Data.\n");

1741 
QAPI_BLE_ET_GATT_CLIENT_EXCHANGE_MTU_RESPONSE_E
:

1742 if(
GATT_Clõ¡_Evít_D©a
->
Evít_D©a
.
GATT_Exch™ge_MTU_Re•⁄£_D©a
)

1744 
	`LOG_VERBOSE
("Exchange MTU Response.\n");

1745 
	`BD_ADDRToSå
(
GATT_Clõ¡_Evít_D©a
->
Evít_D©a
.
GATT_Exch™ge_MTU_Re•⁄£_D©a
->
RemŸeDevi˚
, 
BﬂrdSå
);

1746 
	`LOG_VERBOSE
("C⁄√˘i⁄ ID: %u.\n", 
GATT_Clõ¡_Evít_D©a
->
Evít_D©a
.
GATT_Exch™ge_MTU_Re•⁄£_D©a
->
C⁄√˘i⁄ID
);

1747 
	`LOG_VERBOSE
("Tønß˘i⁄ ID: %u.\n", 
GATT_Clõ¡_Evít_D©a
->
Evít_D©a
.
GATT_Exch™ge_MTU_Re•⁄£_D©a
->
Tønß˘i⁄ID
);

1748 
	`LOG_VERBOSE
("C⁄√˘i⁄ Ty≥: %s.\n", (
GATT_Clõ¡_Evít_D©a
->
Evít_D©a
.
GATT_Exch™ge_MTU_Re•⁄£_D©a
->
C⁄√˘i⁄Ty≥
 =
QAPI_BLE_GCT_LE_E
)?"LE":"BR/EDR");

1749 
	`LOG_VERBOSE
("BD_ADDR: %s.\n", 
BﬂrdSå
);

1750 
	`LOG_VERBOSE
("MTU: %u.\n", 
GATT_Clõ¡_Evít_D©a
->
Evít_D©a
.
GATT_Exch™ge_MTU_Re•⁄£_D©a
->
SîvîMTU
);

1754 
	`LOG_ERROR
("Error - Null Write Response Data.\n");

1757 
QAPI_BLE_ET_GATT_CLIENT_READ_RESPONSE_E
:

1758 i‡(
GATT_Clõ¡_Evít_D©a
->
Evít_D©a
.
GATT_Ród_Re•⁄£_D©a
)

1760 
Di•œyProm±
 = 
Ál£
;

1761 i‡((
Devi˚Info
 = 
	`SórchDevi˚InfoE¡ryByBD_ADDR
(&
Devi˚InfoLi°
, 
GATT_Clõ¡_Evít_D©a
->
Evít_D©a
.
GATT_Ród_Re•⁄£_D©a
->
RemŸeDevi˚
)Ë!
NULL
)

1763 i‡((
uöt16_t
)
CÆlbackP¨amëî
 =
Devi˚Info
->
GAPSClõ¡Info
.
Devi˚NameH™dÀ
)

1765 i‡((
NameBuf„r
 = (*)
	`mÆloc
(
GATT_Clõ¡_Evít_D©a
->
Evít_D©a
.
GATT_Ród_Re•⁄£_D©a
->
AâribuãVÆueLígth
+1)Ë!
NULL
)

1767 
	`mem£t
 (
NameBuf„r
, 0, 
GATT_Clõ¡_Evít_D©a
->
Evít_D©a
.
GATT_Ród_Re•⁄£_D©a
->
AâribuãVÆueLígth
+1);

1768 
	`mem˝y
 (
NameBuf„r
, 
GATT_Clõ¡_Evít_D©a
->
Evít_D©a
.
GATT_Ród_Re•⁄£_D©a
->
AâribuãVÆue
, GATT_Clõ¡_Evít_D©a->Evít_D©a.GATT_Ród_Re•⁄£_D©a->
AâribuãVÆueLígth
);

1769 
	`LOG_VERBOSE
("RemŸêDevi˚ Name: %s.\n", 
NameBuf„r
);

1770 
Di•œyProm±
 = 
åue
;

1772 
	`‰ì
(
NameBuf„r
);

1777 i‡((
uöt16_t
)
CÆlbackP¨amëî
 =
Devi˚Info
->
GAPSClõ¡Info
.
Devi˚Aµóøn˚H™dÀ
)

1779 i‡(
GATT_Clõ¡_Evít_D©a
->
Evít_D©a
.
GATT_Ród_Re•⁄£_D©a
->
AâribuãVÆueLígth
 =
QAPI_BLE_GAP_DEVICE_APPEARANCE_VALUE_LENGTH
)

1781 
Aµóøn˚
 = 
	`READ_UNALIGNED_WORD_LITTLE_ENDIAN
(
GATT_Clõ¡_Evít_D©a
->
Evít_D©a
.
GATT_Ród_Re•⁄£_D©a
->
AâribuãVÆue
);

1782 i‡(
	`Aµóøn˚ToSåög
(
Aµóøn˚
, &
NameBuf„r
))

1783 
	`LOG_VERBOSE
("RemŸêDevi˚ Aµóøn˚: %s(%u).\n", 
NameBuf„r
, 
Aµóøn˚
);

1785 
	`LOG_VERBOSE
("RemŸêDevi˚ Aµóøn˚: Unknown(%u).\n", 
Aµóøn˚
);

1788 
	`LOG_VERBOSE
("InvÆid RemŸêAµóøn˚ VÆuêLígth %u.\n", 
GATT_Clõ¡_Evít_D©a
->
Evít_D©a
.
GATT_Ród_Re•⁄£_D©a
->
AâribuãVÆueLígth
);

1790 
Di•œyProm±
 = 
åue
;

1797 
	`LOG_ERROR
("Error - Null Read Response Data.\n");

1804 i‡(
Di•œyProm±
)

1805 
	`QCLI_Di•œy_Prom±
();

1807 
	}
}

1816 
QAPI_BLE_BTPSAPI
 
	$GATT_C⁄√˘i⁄_Evít_CÆlback
(
uöt32_t
 
BluëoŸhSèckID
, 
q≠i_BLE_GATT_C⁄√˘i⁄_Evít_D©a_t
 *
GATT_C⁄√˘i⁄_Evít_D©a
, uöt32_à
CÆlbackP¨amëî
)

1818 
boﬁón_t
 
Di•œyProm±
;

1819 
Resu…
;

1820 
uöt16_t
 
MTU
;

1821 
BﬂrdSå_t
 
BﬂrdSå
;

1822 
Devi˚Info_t
 *
Devi˚Info
 = 
NULL
;

1823 
uöt32_t
 
C⁄√˘i⁄ID
;

1824 
boﬁón_t
 
FoundM©ch
 = 
FALSE
;

1826 i‡((
BluëoŸhSèckID
Ë&& (
GATT_C⁄√˘i⁄_Evít_D©a
))

1828 
Di•œyProm±
 = 
åue
;

1830 
GATT_C⁄√˘i⁄_Evít_D©a
->
Evít_D©a_Ty≥
)

1832 
QAPI_BLE_ET_GATT_CONNECTION_DEVICE_CONNECTION_E
:

1833 i‡(
GATT_C⁄√˘i⁄_Evít_D©a
->
Evít_D©a
.
GATT_Devi˚_C⁄√˘i⁄_D©a
)

1835 
C⁄√˘i⁄ID
 = 
GATT_C⁄√˘i⁄_Evít_D©a
->
Evít_D©a
.
GATT_Devi˚_C⁄√˘i⁄_D©a
->ConnectionID;

1836 
	`LOG_INFO
("ëGATT_C⁄√˘i⁄_Devi˚_C⁄√˘i⁄ wôh sizê%u: \n", 
GATT_C⁄√˘i⁄_Evít_D©a
->
Evít_D©a_Size
);

1837 
	`BD_ADDRToSå
(
GATT_C⁄√˘i⁄_Evít_D©a
->
Evít_D©a
.
GATT_Devi˚_C⁄√˘i⁄_D©a
->
RemŸeDevi˚
, 
BﬂrdSå
);

1838 
	`LOG_INFO
(" C⁄√˘i⁄ ID: %u.\n", 
GATT_C⁄√˘i⁄_Evít_D©a
->
Evít_D©a
.
GATT_Devi˚_C⁄√˘i⁄_D©a
->
C⁄√˘i⁄ID
);

1839 
	`LOG_INFO
(" C⁄√˘i⁄ Ty≥: %s.\n", ((
GATT_C⁄√˘i⁄_Evít_D©a
->
Evít_D©a
.
GATT_Devi˚_C⁄√˘i⁄_D©a
->
C⁄√˘i⁄Ty≥
 =
QAPI_BLE_GCT_LE_E
)?"LE":"BR/EDR"));

1840 
	`LOG_INFO
(" RemŸêDevi˚: %s.\n", 
BﬂrdSå
);

1841 
	`LOG_INFO
(" C⁄√˘i⁄ MTU: %u.\n", 
GATT_C⁄√˘i⁄_Evít_D©a
->
Evít_D©a
.
GATT_Devi˚_C⁄√˘i⁄_D©a
->
MTU
);

1842 i‡((
Devi˚Info
 = 
	`SórchDevi˚InfoE¡ryByBD_ADDR
(&
Devi˚InfoLi°
, 
GATT_C⁄√˘i⁄_Evít_D©a
->
Evít_D©a
.
GATT_Devi˚_C⁄√˘i⁄_D©a
->
RemŸeDevi˚
)Ë=
NULL
)

1844 i‡((
Devi˚Info
 = 
	`Cª©eNewDevi˚InfoE¡ry
(&
Devi˚InfoLi°
, 
GATT_C⁄√˘i⁄_Evít_D©a
->
Evít_D©a
.
GATT_Devi˚_C⁄√˘i⁄_D©a
->
RemŸeDevi˚
)Ë=
NULL
)

1845 
	`LOG_ERROR
("FailedÅo createÑemote device information.\n");

1848 i‡(
Devi˚Info
)

1850 
C⁄√˘i⁄Cou¡
++;

1851 
Sñe˘edRemŸeBD_ADDR
 = 
GATT_C⁄√˘i⁄_Evít_D©a
->
Evít_D©a
.
GATT_Devi˚_C⁄√˘i⁄_D©a
->
RemŸeDevi˚
;

1852 
	`LOG_VERBOSE
("\nSelected Remote Device:\n");

1853 
	`LOG_VERBOSE
(" Addªss: %s\n", 
BﬂrdSå
);

1854 
	`LOG_VERBOSE
(" ID: %u\n", 
C⁄√˘i⁄ID
);

1855 
Devi˚Info
->
RemŸeDevi˚IsMa°î
 = (
LoˇlDevi˚IsMa°î
Ë? 
FALSE
 : 
TRUE
;

1856 
Devi˚Info
->
RemŸeAddªssTy≥
 = RemoteAddressType;

1857 
Devi˚Info
->
C⁄√˘i⁄ID
 = ConnectionID;

1859 
Devi˚Info
->
TønsmôCªdôs
 = 0;

1861 i‡(!
	`q≠i_BLE_GATT_Quîy_Maximum_Suµ‹ãd_MTU
(
BluëoŸhSèckID
, &
MTU
))

1862 
	`q≠i_BLE_GATT_Exch™ge_MTU_Reque°
(
BluëoŸhSèckID
, 
Devi˚Info
->
C⁄√˘i⁄ID
, 
MTU
, 
GATT_Clõ¡EvítCÆlback_GAPS
, 0);

1866 i‡((
Resu…
 = 
	`q≠i_BLE_GAP_LE_Disc⁄√˘
(
BluëoŸhSèckID
, 
GATT_C⁄√˘i⁄_Evít_D©a
->
Evít_D©a
.
GATT_Devi˚_C⁄√˘i⁄_D©a
->
RemŸeDevi˚
)) != 0)

1867 
	`LOG_ERROR
("q≠i_BLE_GAP_LE_Disc⁄√˘Ñëu∫ed %d.\n", 
Resu…
);

1871 
	`LOG_ERROR
("Error - Null Connection Data.\n");

1873 
QAPI_BLE_ET_GATT_CONNECTION_DEVICE_DISCONNECTION_E
:

1874 i‡(
GATT_C⁄√˘i⁄_Evít_D©a
->
Evít_D©a
.
GATT_Devi˚_Disc⁄√˘i⁄_D©a
)

1876 
	`LOG_INFO
("ëGATT_C⁄√˘i⁄_Devi˚_Disc⁄√˘i⁄ wôh sizê%u: \n", 
GATT_C⁄√˘i⁄_Evít_D©a
->
Evít_D©a_Size
);

1877 
	`BD_ADDRToSå
(
GATT_C⁄√˘i⁄_Evít_D©a
->
Evít_D©a
.
GATT_Devi˚_Disc⁄√˘i⁄_D©a
->
RemŸeDevi˚
, 
BﬂrdSå
);

1878 
	`LOG_INFO
(" C⁄√˘i⁄ ID: %u.\n", 
GATT_C⁄√˘i⁄_Evít_D©a
->
Evít_D©a
.
GATT_Devi˚_Disc⁄√˘i⁄_D©a
->
C⁄√˘i⁄ID
);

1879 
	`LOG_INFO
(" C⁄√˘i⁄ Ty≥: %s.\n", ((
GATT_C⁄√˘i⁄_Evít_D©a
->
Evít_D©a
.
GATT_Devi˚_Disc⁄√˘i⁄_D©a
->
C⁄√˘i⁄Ty≥
 =
QAPI_BLE_GCT_LE_E
)?"LE":"BR/EDR"));

1880 
	`LOG_INFO
(" RemŸêDevi˚: %s.\n", 
BﬂrdSå
);

1881 i‡((
C⁄√˘i⁄Cou¡
Ë&& (
Devi˚Info
 = 
	`SórchDevi˚InfoE¡ryByBD_ADDR
(&
Devi˚InfoLi°
, 
GATT_C⁄√˘i⁄_Evít_D©a
->
Evít_D©a
.
GATT_Devi˚_Disc⁄√˘i⁄_D©a
->
RemŸeDevi˚
)Ë!
NULL
)

1883 
C⁄√˘i⁄Cou¡
--;

1885 i‡(
Devi˚Info
->
Fœgs
 & 
DEVICE_INFO_FLAGS_LTK_VALID
)

1887 
Devi˚Info
->
Fœgs
 &~
DEVICE_INFO_FLAGS_SERVICE_DISCOVERY_OUTSTANDING
;

1888 
Devi˚Info
->
C⁄√˘i⁄ID
 = 0;

1892 i‡((
Devi˚Info
 = 
	`DñëeDevi˚InfoE¡ry
(&
Devi˚InfoLi°
, 
Sñe˘edRemŸeBD_ADDR
)Ë!
NULL
)

1894 
	`LOG_VERBOSE
("\nThêªmŸêdevi˚ inf‹m©i⁄ ha†bì¿dñëed.\n", 
BﬂrdSå
);

1895 
Devi˚Info
 = 
NULL
;

1900 i‡(
C⁄√˘i⁄Cou¡
)

1902 
Devi˚Info
 = 
Devi˚InfoLi°
;

1903 
Devi˚Info
)

1905 i‡(
Devi˚Info
->
C⁄√˘i⁄ID
)

1907 
Sñe˘edRemŸeBD_ADDR
 = 
Devi˚Info
->
RemŸeAddªss
;

1908 
	`LOG_INFO
("\nSelected Remote Device:\n");

1909 
	`BD_ADDRToSå
(
Devi˚Info
->
RemŸeAddªss
, 
BﬂrdSå
);

1910 
	`LOG_INFO
(" Addªss: %s\n", 
BﬂrdSå
);

1911 
	`LOG_INFO
(" ID: %u\n", 
Devi˚Info
->
C⁄√˘i⁄ID
);

1915 
Devi˚Info
 = Devi˚Info->
NextDevi˚InfoInfoPå
;

1920 
	`LOG_ERROR
("Error - Null Disconnection Data.\n");

1922 
QAPI_BLE_ET_GATT_CONNECTION_SERVER_NOTIFICATION_E
:

1923 i‡(
GATT_C⁄√˘i⁄_Evít_D©a
->
Evít_D©a
.
GATT_Sîvî_NŸifiˇti⁄_D©a
)

1925 
Di•œyProm±
 = 
Ál£
;

1926 i‡((
Devi˚Info
 = 
	`SórchDevi˚InfoE¡ryByBD_ADDR
(&
Devi˚InfoLi°
, 
GATT_C⁄√˘i⁄_Evít_D©a
->
Evít_D©a
.
GATT_Sîvî_NŸifiˇti⁄_D©a
->
RemŸeDevi˚
)Ë!
NULL
)

1928 i‡(
FoundM©ch
 =
TRUE
)

1932 i‡(
FoundM©ch
 =
TRUE
)

1936 i‡(
FoundM©ch
 =
TRUE
)

1941 
	`LOG_ERROR
("Error - Unknownáttribute handle forÇotification.\n");

1942 
Di•œyProm±
 = 
åue
;

1946 
	`LOG_ERROR
("Error - Null Server Notification Data.\n");

1949 
Di•œyProm±
 = 
Ál£
;

1953 i‡(
Di•œyProm±
)

1954 
	`QCLI_Di•œy_Prom±
();

1956 
	}
}

1966 
	$O≥nSèck
(
q≠i_BLE_HCI_DrivîInf‹m©i⁄_t
 *
HCI_DrivîInf‹m©i⁄
)

1968 
Resu…
;

1969 
ªt_vÆ
 = 0;

1970 
BluëoŸhAddªss
[16];

1971 
uöt32_t
 
Sîvi˚ID
;

1972 
uöt8_t
 
HC_SCO_D©a_Packë_Lígth
;

1973 
uöt16_t
 
HC_TŸÆ_Num_SCO_D©a_Packës
;

1974 
uöt16_t
 
HC_TŸÆ_Num_LE_D©a_Packës
;

1975 
uöt16_t
 
HC_LE_D©a_Packë_Lígth
;

1976 
uöt8_t
 
TempD©a
;

1977 
uöt8_t
 
Sètus
;

1978 
uöt32_t
 
∑sskey
 = 123456;

1979 
BLE_NAME
[20] = "Q4020_GES";

1981 i‡(!
BluëoŸhSèckID
)

1983 if(
HCI_DrivîInf‹m©i⁄
)

1985 
	`LOG_INFO
("OpenStack().\n");

1987 
Resu…
 = 
	`q≠i_BLE_BSC_Inôülize
(
HCI_DrivîInf‹m©i⁄
, 0);

1988 i‡–
Resu…
 > 0 )

1990 
BluëoŸhSèckID
 = 
Resu…
;

1991 
	`LOG_INFO
("BluëoŸh Sèck ID: %d.\n", 
BluëoŸhSèckID
);

1993 
LE_P¨amëîs
.
IOC≠abûôy
 = 
QAPI_BLE_LIC_DISPLAY_ONLY_E
;

1994 
LE_P¨amëîs
.
OOBD©aPª£¡
 = 
FALSE
;

1995 
LE_P¨amëîs
.
MITMPrŸe˘i⁄
 = (LE_P¨amëîs.
IOC≠abûôy
 !
QAPI_BLE_LIC_NO_INPUT_NO_OUTPUT_E
Ë? 
DEFAULT_MITM_PROTECTION
 : 
FALSE
;

1996 
LE_P¨amëîs
.
SecuªC⁄√˘i⁄s
 = 
DEFAULT_SECURE_CONNECTIONS
;

1998 
	`q≠i_BLE_GAP_LE_Së_Fixed_Passkey
(
BluëoŸhSèckID
,&
∑sskey
);

2000 
Resu…
 = 
	`q≠i_BLE_HCI_LE_Ród_Buf„r_Size
(
BluëoŸhSèckID
, &
Sètus
, &
HC_LE_D©a_Packë_Lígth
, &
TempD©a
);

2002 i‡((
Resu…
Ë|| (
Sètus
 !0Ë|| (!
HC_LE_D©a_Packë_Lígth
Ë|| (!
TempD©a
))

2004 i‡((!
	`q≠i_BLE_HCI_Ród_Buf„r_Size
(
BluëoŸhSèckID
, &
Sètus
, &
HC_LE_D©a_Packë_Lígth
, &
HC_SCO_D©a_Packë_Lígth
, &
HC_TŸÆ_Num_LE_D©a_Packës
, &
HC_TŸÆ_Num_SCO_D©a_Packës
)) && (!Status))

2005 
Resu…
 = 0;

2007 
Resu…
 = -1;

2011 
HC_TŸÆ_Num_LE_D©a_Packës
 = (
uöt16_t
)
TempD©a
;

2012 
Resu…
 = 0;

2015 
NumbîACLPackës
 = 
HC_TŸÆ_Num_LE_D©a_Packës
;

2016 
NumbîOut°™dögACLPackës
 = 0;

2017 
MaxACLPackëSize
 = 
HC_LE_D©a_Packë_Lígth
;

2019 i‡(!
Resu…
)

2020 
	`LOG_VERBOSE
("Numbî ACL Buf„rs: %d, ACL Buf„∏Size: %d\n", 
NumbîACLPackës
, 
MaxACLPackëSize
);

2022 
	`LOG_ERROR
("UnableÅo determine ACL Buffer Size.\n");

2024 i‡(!
	`q≠i_BLE_GAP_Quîy_Loˇl_BD_ADDR
(
BluëoŸhSèckID
, &
LoˇlBD_ADDR
))

2026 
	`BD_ADDRToSå
(
LoˇlBD_ADDR
, 
BluëoŸhAddªss
);

2028 
	`LOG_INFO
("BD_ADDR: %s\n", 
BluëoŸhAddªss
);

2033 
	`QAPI_BLE_ASSIGN_BD_ADDR
(
Sñe˘edRemŸeBD_ADDR
, 0, 0, 0, 0, 0, 0);

2034 
	`QAPI_BLE_ASSIGN_BD_ADDR
(
SecurôyRemŸeBD_ADDR
, 0, 0, 0, 0, 0, 0);

2035 
	`QAPI_BLE_ASSIGN_BD_ADDR
(
BLBD_SecurôyRemŸeBD_ADDR
, 0, 0, 0, 0, 0, 0);

2037 
	`q≠i_BLE_GAP_LE_Divîsify_Fun˘i⁄
(
BluëoŸhSèckID
, (
q≠i_BLE_En¸y±i⁄_Key_t
 *)(&
IR
), 1,0, &
IRK
);

2038 
	`q≠i_BLE_GAP_LE_Divîsify_Fun˘i⁄
(
BluëoŸhSèckID
, (
q≠i_BLE_En¸y±i⁄_Key_t
 *)(&
IR
), 3, 0, &
DHK
);

2040 
Devi˚InfoLi°
 = 
NULL
;

2042 
Resu…
 = 
	`q≠i_Pîsi°_Inôülize
(&
Pîsi°H™dÀ
, "/•ö‹/bÀ", "bÀ_d©a", ".bö", 
NULL
, 0);

2043 i‡(
Resu…
 < 0)

2044 
	`LOG_ERROR
("Pîsi°íàSt‹agêInôüliz©i⁄ Faûed: %d\n", 
Resu…
);

2047 i‡((
Resu…
 = 
	`q≠i_BLE_GATT_Inôülize
(
BluëoŸhSèckID
, (
QAPI_BLE_GATT_INITIALIZATION_FLAGS_SUPPORT_LE
 | 
QAPI_BLE_GATT_INITIALIZATION_FLAGS_DISABLE_SERVICE_CHANGED_CHARACTERISTIC
), 
GATT_C⁄√˘i⁄_Evít_CÆlback
, 0)) == 0)

2050 
Resu…
 = 
	`q≠i_BLE_GAPS_Inôülize_Sîvi˚
(
BluëoŸhSèckID
, &
Sîvi˚ID
);

2051 i‡(
Resu…
 > 0)

2053 
GAPSIn°™˚ID
 = ()
Resu…
;

2055 
	`q≠i_BLE_GAPS_Së_Devi˚_Name
(
BluëoŸhSèckID
, 
GAPSIn°™˚ID
, 
BLE_NAME
);

2056 
	`q≠i_BLE_GAPS_Së_Devi˚_Aµóøn˚
(
BluëoŸhSèckID
, 
GAPSIn°™˚ID
, 
QAPI_BLE_GAP_DEVICE_APPEARANCE_VALUE_GENERIC_COMPUTER
);

2058 
Resu…
 = 
	`q≠i_BLE_GAP_LE_Së_Addªss_Resﬁuti⁄_E«bÀ
(
BluëoŸhSèckID
, 
TRUE
);

2059 i‡(!
Resu…
)

2061 
	`q≠i_BLE_GAPS_Së_CíåÆ_Addªss_Resﬁuti⁄
(
BluëoŸhSèckID
, 
GAPSIn°™˚ID
, 
QAPI_BLE_GAR_ENABLED_E
);

2062 
Resu…
 = 
	`q≠i_BLE_GAP_LE_Së_ResﬁvabÀ_Priv©e_Addªss_Timeout
(
BluëoŸhSèckID
, 60);

2063 i‡(
Resu…
)

2064 
	`LOG_ERROR
("Eº‹ - q≠i_BLE_GAP_LE_Së_ResﬁvabÀ_Priv©e_Addªss_Timeout(Ëªtu∫ed %d.\n", 
Resu…
);

2067 
	`LOG_ERROR
("Eº‹ - q≠i_BLE_GAP_LE_Së_Addªss_Resﬁuti⁄_E«bÀ(Ëªtu∫ed %d.\n", 
Resu…
);

2070 
	`Di•œyFun˘i⁄Eº‹
("q≠i_BLE_GAPS_Inôülize_Sîvi˚()", 
Resu…
);

2074 
ªt_vÆ
 = 0;

2078 
	`Di•œyFun˘i⁄Eº‹
("q≠i_BLE_GATT_Inôülize()", 
Resu…
);

2080 
	`q≠i_BLE_BSC_Shutdown
(
BluëoŸhSèckID
);

2081 
BluëoŸhSèckID
 = 0;

2082 
ªt_vÆ
 = -1;

2087 
	`Di•œyFun˘i⁄Eº‹
("q≠i_BLE_BSC_Inôülize()", 
Resu…
);

2088 
BluëoŸhSèckID
 = 0;

2089 
ªt_vÆ
 = -1;

2094 
ªt_vÆ
 = -1;

2099 
ªt_vÆ
 = 0;

2102  (
ªt_vÆ
);

2103 
	}
}

2110 
	$SëPaúabÀ
()

2112 
Resu…
;

2113 
ªt_vÆ
 = 0;

2116 if(
BluëoŸhSèckID
)

2119 
Resu…
 = 
	`q≠i_BLE_GAP_LE_Së_Paúabûôy_Mode
(
BluëoŸhSèckID
, 
QAPI_BLE_LPM_PAIRABLE_MODE_ENABLE_EXTENDED_EVENTS_E
);

2123 if(!
Resu…
)

2128 
Resu…
 = 
	`q≠i_BLE_GAP_LE_Regi°î_RemŸe_Authítiˇti⁄
(
BluëoŸhSèckID
, 
GAP_LE_Evít_CÆlback
, ()0);

2132 if(
Resu…
)

2135 
	`Di•œyFun˘i⁄Eº‹
("GAP_LE_Regi°î_RemŸe_Authítiˇti⁄", 
Resu…
);

2137 
ªt_vÆ
 = 
Resu…
;

2143 
	`Di•œyFun˘i⁄Eº‹
("GAP_LE_Së_Paúabûôy_Mode", 
Resu…
);

2145 
ªt_vÆ
 = 
Resu…
;

2151 
ªt_vÆ
 = 
QCLI_STATUS_ERROR_E
;

2154 (
ªt_vÆ
);

2155 
	}
}

2165 
	$SëDisc
()

2167 
ªt_vÆ
 = 0;

2170 if(
BluëoŸhSèckID
)

2175 
LE_P¨amëîs
.
DiscovîabûôyMode
 = 
QAPI_BLE_DM_GENERAL_DISCOVERABLE_MODE_E
;

2180 
ªt_vÆ
 = 
QCLI_STATUS_ERROR_E
;

2183 (
ªt_vÆ
);

2184 
	}
}

2192 
	$SëC⁄√˘
()

2194 
ªt_vÆ
 = 0;

2197 if(
BluëoŸhSèckID
)

2202 
LE_P¨amëîs
.
C⁄√˘abÀMode
 = 
QAPI_BLE_LCM_CONNECTABLE_E
;

2207 
ªt_vÆ
 = 
QCLI_STATUS_ERROR_E
;

2210 (
ªt_vÆ
);

2211 
	}
}

2213 
Clo£Sèck
();

2214 
	$˛o£_°ack
()

2216  
	`Clo£Sèck
();

2217 
	}
}

2225 
	$Clo£Sèck
()

2227 
ªt_vÆ
 = 0;

2228 
Devi˚Info_t
 *
Devi˚Info
;

2230 i‡(
BluëoŸhSèckID
)

2233 if(
C⁄√˘i⁄Cou¡
)

2237 
C⁄√˘i⁄Cou¡
 = 0;

2240 if(!
	`q≠i_BLE_BSC_LockBluëoŸhSèck
(
BluëoŸhSèckID
))

2245 
Devi˚Info
 = 
Devi˚InfoLi°
;

2246 
Devi˚Info
)

2250 if(
Devi˚Info
->
C⁄√˘i⁄ID
)

2253 
Devi˚Info
->
C⁄√˘i⁄ID
 = 0;

2256 
	`q≠i_BLE_GAP_LE_Disc⁄√˘
(
BluëoŸhSèckID
, 
Devi˚Info
->
RemŸeAddªss
);

2259 
Devi˚Info
 = Devi˚Info->
NextDevi˚InfoInfoPå
;

2263 
	`q≠i_BLE_BSC_UnLockBluëoŸhSèck
(
BluëoŸhSèckID
);

2267 i‡(
DISIn°™˚ID
)

2269 
	`q≠i_BLE_DIS_CÀ™up_Sîvi˚
(
BluëoŸhSèckID
, 
DISIn°™˚ID
);

2271 
DISIn°™˚ID
 = 0;

2274 i‡(
GAPSIn°™˚ID
)

2276 
	`q≠i_BLE_GAPS_CÀ™up_Sîvi˚
(
BluëoŸhSèckID
, 
GAPSIn°™˚ID
);

2278 
GAPSIn°™˚ID
 = 0;

2283 
	`q≠i_Pîsi°_CÀ™up
(
Pîsi°H™dÀ
);

2284 
Pîsi°H™dÀ
 = 
NULL
;

2287 
	`q≠i_BLE_GATT_CÀ™up
(
BluëoŸhSèckID
);

2290 
	`q≠i_BLE_BSC_Shutdown
(
BluëoŸhSèckID
);

2293 
	`LOG_INFO
("Stack Shutdown.\n");

2297 
Devi˚InfoLi°
 = 
NULL
;

2300 
BluëoŸhSèckID
 = 0;

2301 
RemŸeOOBVÆid
 = 
FALSE
;

2302 
LoˇlOOBVÆid
 = 
FALSE
;

2305 
ªt_vÆ
 = 0;

2309 
ªt_vÆ
 = -1;

2312  (
ªt_vÆ
);

2313 
	}
}

2319 
	$InôülizeBluëoŸh
()

2321 
Resu…
;

2322 
ªt_vÆ
;

2324 
	`QAPI_BLE_HCI_DRIVER_SET_COMM_INFORMATION
(&
HCI_DrivîInf‹m©i⁄
, 1, 115200, 
QAPI_BLE_COMM_PROTOCOL_UART_E
);

2327 if(!
BluëoŸhSèckID
)

2330 
Resu…
 = 
	`O≥nSèck
(&
HCI_DrivîInf‹m©i⁄
);

2331 if(!
Resu…
)

2334 
Resu…
 = 
	`SëPaúabÀ
();

2335 if(!
Resu…
)

2338 
Resu…
 = 
	`SëDisc
();

2339 if(!
Resu…
)

2342 
Resu…
 = 
	`SëC⁄√˘
();

2343 i‡(!
	`BLE_IOSîvi˚
())

2345 
	`LOG_ERROR
("BLE: Error Registering Services()\n");

2346  
QCLI_STATUS_ERROR_E
;

2348 
	`LOG_ERROR
("BLE: Services Registered successfully\n");

2355 if(
Resu…
)

2356 
	`Clo£Sèck
();

2360 if(!
Resu…
)

2361 
ªt_vÆ
 = 
QCLI_STATUS_SUCCESS_E
;

2363 
ªt_vÆ
 = 
QCLI_STATUS_ERROR_E
;

2368 
	`LOG_WARN
("Bluetooth stack isálready initialized.");

2370 
ªt_vÆ
 = 
QCLI_STATUS_SUCCESS_E
;

2373 (
ªt_vÆ
);

2374 
	}
}

2383 
Devi˚Info_t
 *
	$SórchDevi˚InfoE¡ryTy≥Addªss
(
Devi˚Info_t
 **
Li°Hód
, 
q≠i_BLE_GAP_LE_Addªss_Ty≥_t
 
AddªssTy≥
, 
q≠i_BLE_BD_ADDR_t
 
RemŸeAddªss
)

2385 
BﬂrdSå_t
 
BﬂrdSå
;

2386 
Devi˚Info_t
 *
ªt_vÆ
 = 
NULL
;

2387 
Devi˚Info_t
 *
Devi˚Info
;

2388 
q≠i_BLE_GAP_LE_Addªss_Ty≥_t
 
TempTy≥
;

2390 i‡(
Li°Hód
)

2392 
Devi˚Info
 = *
Li°Hód
;

2393 
Devi˚Info
)

2395 i‡((
Devi˚Info
->
RemŸeAddªssTy≥
 =
AddªssTy≥
Ë&& (
	`QAPI_BLE_COMPARE_BD_ADDR
(Devi˚Info->
RemŸeAddªss
, RemoteAddress)))

2397 
ªt_vÆ
 = 
Devi˚Info
;

2402 i‡((
AddªssTy≥
 =
QAPI_BLE_LAT_PUBLIC_IDENTITY_E
Ë|| (AddªssTy≥ =
QAPI_BLE_LAT_RANDOM_IDENTITY_E
))

2404 i‡(
AddªssTy≥
 =
QAPI_BLE_LAT_PUBLIC_IDENTITY_E
)

2405 
TempTy≥
 = 
QAPI_BLE_LAT_PUBLIC_E
;

2407 
TempTy≥
 = 
QAPI_BLE_LAT_RANDOM_E
;

2408 i‡(
Devi˚Info
->
Fœgs
 & 
DEVICE_INFO_FLAGS_IRK_VALID
)

2410 i‡((
Devi˚Info
->
IdítôyAddªssTy≥
 =
TempTy≥
Ë&& (
	`QAPI_BLE_COMPARE_BD_ADDR
(Devi˚Info->
IdítôyAddªssBD_ADDR
, 
RemŸeAddªss
)))

2412 
Devi˚Info
->
RemŸeAddªssTy≥
 = 
AddªssTy≥
;

2413 
Devi˚Info
->
RemŸeAddªss
 = Devi˚Info->
IdítôyAddªssBD_ADDR
;

2415 
ªt_vÆ
 = 
Devi˚Info
;

2422 i‡((
AddªssTy≥
 =
QAPI_BLE_LAT_RANDOM_E
Ë&& (
	`QAPI_BLE_GAP_LE_TEST_RESOLVABLE_ADDRESS_BITS
(
RemŸeAddªss
)))

2424 i‡(
Devi˚Info
->
Fœgs
 & 
DEVICE_INFO_FLAGS_IRK_VALID
)

2426 i‡(
	`q≠i_BLE_GAP_LE_Resﬁve_Addªss
(
BluëoŸhSèckID
, &(
Devi˚Info
->
IRK
), 
RemŸeAddªss
))

2428 
Devi˚Info
->
RemŸeAddªss
 = RemoteAddress;

2429 
Devi˚Info
->
RemŸeAddªssTy≥
 = 
QAPI_BLE_LAT_RANDOM_E
;

2431 
	`LOG_VERBOSE
("\n");

2432 
	`LOG_VERBOSE
("Resolved Address (");

2433 
	`BD_ADDRToSå
(
Devi˚Info
->
RemŸeAddªss
, 
BﬂrdSå
);

2434 
	`LOG_VERBOSE
("%s", 
BﬂrdSå
);

2435 
	`LOG_VERBOSE
(")\n");

2436 
	`LOG_VERBOSE
(" Identity Address: ");

2437 
	`BD_ADDRToSå
(
Devi˚Info
->
IdítôyAddªssBD_ADDR
, 
BﬂrdSå
);

2438 
	`LOG_VERBOSE
("%s\n", 
BﬂrdSå
);

2439 
	`LOG_VERBOSE
(" Idítôy Addªs†Ty≥: %s\n", ((
Devi˚Info
->
IdítôyAddªssTy≥
 =
QAPI_BLE_LAT_PUBLIC_IDENTITY_E
) ? "Public Identity" : "Random Identity"));

2441 
ªt_vÆ
 = 
Devi˚Info
;

2449 
Devi˚Info
 = Devi˚Info->
NextDevi˚InfoInfoPå
;

2453  (
ªt_vÆ
);

2454 
	}
}

2460 
	$C⁄figuªC≠abûôõs
(
q≠i_BLE_GAP_LE_Exãnded_Paúög_C≠abûôõs_t
 *
C≠abûôõs
)

2463 if(
C≠abûôõs
)

2466 
	`mem£t
(
C≠abûôõs
, 0, 
QAPI_BLE_GAP_LE_EXTENDED_PAIRING_CAPABILITIES_SIZE
);

2469 
C≠abûôõs
->
B⁄dög_Ty≥
 = 
QAPI_BLE_LBT_NO_BONDING_E
;

2470 
C≠abûôõs
->
IO_C≠abûôy
 = 
LE_P¨amëîs
.
IOC≠abûôy
;

2471 
C≠abûôõs
->
Fœgs
 = 0;

2473 if(
LE_P¨amëîs
.
MITMPrŸe˘i⁄
)

2474 
C≠abûôõs
->
Fœgs
 |
QAPI_BLE_GAP_LE_EXTENDED_PAIRING_CAPABILITIES_FLAGS_MITM_REQUESTED
;

2476 if(
LE_P¨amëîs
.
SecuªC⁄√˘i⁄s
)

2477 
C≠abûôõs
->
Fœgs
 |
QAPI_BLE_GAP_LE_EXTENDED_PAIRING_CAPABILITIES_FLAGS_SECURE_CONNECTIONS
;

2479 if(
RemŸeOOBVÆid
)

2480 
C≠abûôõs
->
Fœgs
 |
QAPI_BLE_GAP_LE_EXTENDED_PAIRING_CAPABILITIES_FLAGS_OOB_DATA_PRESENT
;

2482 if(
LoˇlOOBVÆid
)

2484 
C≠abûôõs
->
Fœgs
 |
QAPI_BLE_GAP_LE_EXTENDED_PAIRING_CAPABILITIES_FLAGS_LOCAL_OOB_DATA_VALID
;

2485 
C≠abûôõs
->
LoˇlOOBD©a
.
Fœgs
 = 0;

2486 
C≠abûôõs
->
LoˇlOOBD©a
.
C⁄fúm©i⁄
 = 
LoˇlOOBC⁄fúm©i⁄
;

2487 
C≠abûôõs
->
LoˇlOOBD©a
.
R™domizî
 = 
LoˇlOOBR™domizî
;

2505 
C≠abûôõs
->
Maximum_En¸y±i⁄_Key_Size
 = 
QAPI_BLE_GAP_LE_MAXIMUM_ENCRYPTION_KEY_SIZE
;

2512 
C≠abûôõs
->
Re˚ivög_Keys
.
En¸y±i⁄_Key
 = 
TRUE
;

2513 
C≠abûôõs
->
Re˚ivög_Keys
.
Idítifiˇti⁄_Key
 = 
TRUE
;

2514 
C≠abûôõs
->
Re˚ivög_Keys
.
Signög_Key
 = 
FALSE
;

2515 
C≠abûôõs
->
Re˚ivög_Keys
.
Lök_Key
 = 
FALSE
;

2517 
C≠abûôõs
->
Sídög_Keys
.
En¸y±i⁄_Key
 = 
TRUE
;

2518 
C≠abûôõs
->
Sídög_Keys
.
Idítifiˇti⁄_Key
 = 
TRUE
;

2519 
C≠abûôõs
->
Sídög_Keys
.
Signög_Key
 = 
FALSE
;

2520 
C≠abûôõs
->
Sídög_Keys
.
Lök_Key
 = 
FALSE
;

2522 
	}
}

2528 
	$SœvePaúögReque°Re•⁄£
(
q≠i_BLE_BD_ADDR_t
 
BD_ADDR
)

2530 
ªt_vÆ
;

2531 
BﬂrdSå_t
 
BﬂrdSå
;

2532 
q≠i_BLE_GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄_t
 
Authítiˇti⁄Re•⁄£D©a
;

2534 i‡(
BluëoŸhSèckID
)

2537 
	`LOG_INFO
("Sending slaveÖairingÑesponse\n");

2538 
	`BD_ADDRToSå
(
BD_ADDR
, 
BﬂrdSå
);

2539 
	`LOG_INFO
("Sídög Paúög Re•⁄£Åÿ%s.\n", 
BﬂrdSå
);

2541 
Authítiˇti⁄Re•⁄£D©a
.
GAP_LE_Authítiˇti⁄_Ty≥
 = 
QAPI_BLE_LAR_PAIRING_CAPABILITIES_E
;

2542 
Authítiˇti⁄Re•⁄£D©a
.
Authítiˇti⁄_D©a_Lígth
 = 
QAPI_BLE_GAP_LE_EXTENDED_PAIRING_CAPABILITIES_SIZE
;

2545 
	`C⁄figuªC≠abûôõs
(&(
Authítiˇti⁄Re•⁄£D©a
.
Authítiˇti⁄_D©a
.
Exãnded_Paúög_C≠abûôõs
));

2547 i‡((
ªt_vÆ
 = 
	`q≠i_BLE_GAP_LE_Authítiˇti⁄_Re•⁄£
(
BluëoŸhSèckID
, 
BD_ADDR
, &
Authítiˇti⁄Re•⁄£D©a
)Ë=
QAPI_BLE_BTPS_ERROR_SECURE_CONNECTIONS_NOT_SUPPORTED
)

2549 
	`LOG_WARN
("Secure ConnectionsÇot supported, disabling Secure Connections.\n");

2551 
Authítiˇti⁄Re•⁄£D©a
.
Authítiˇti⁄_D©a
.
Exãnded_Paúög_C≠abûôõs
.
Fœgs
 &~
QAPI_BLE_GAP_LE_EXTENDED_PAIRING_CAPABILITIES_FLAGS_SECURE_CONNECTIONS
;

2553 
ªt_vÆ
 = 
	`q≠i_BLE_GAP_LE_Authítiˇti⁄_Re•⁄£
(
BluëoŸhSèckID
, 
BD_ADDR
, &
Authítiˇti⁄Re•⁄£D©a
);

2555 
	`LOG_INFO
("GAP_LE_Authítiˇti⁄_Re•⁄£Ñëu∫ed %d.\n", 
ªt_vÆ
);

2559 
	`LOG_ERROR
("Stack ID Invalid.\n");

2560 
ªt_vÆ
 = -1;

2563  (
ªt_vÆ
);

2564 
	}
}

2571 
	$Di•œyLegacyPaúögInf‹m©i⁄
(
q≠i_BLE_GAP_LE_Paúög_C≠abûôõs_t
 *
Paúög_C≠abûôõs
)

2573 
Paúög_C≠abûôõs
->
IO_C≠abûôy
)

2575 
QAPI_BLE_LIC_DISPLAY_ONLY_E
:

2576 
	`LOG_VERBOSE
(" IO Capability: Display Only.\n");

2578 
QAPI_BLE_LIC_DISPLAY_YES_NO_E
:

2579 
	`LOG_VERBOSE
(" IO Capability: Display Yes/No.\n");

2581 
QAPI_BLE_LIC_KEYBOARD_ONLY_E
:

2582 
	`LOG_VERBOSE
(" IO Capability: Keyboard Only.\n");

2584 
QAPI_BLE_LIC_NO_INPUT_NO_OUTPUT_E
:

2585 
	`LOG_VERBOSE
(" IO Capability: No Input No Output.\n");

2587 
QAPI_BLE_LIC_KEYBOARD_DISPLAY_E
:

2588 
	`LOG_VERBOSE
(" IO Capability: Keyboard/Display.\n");

2592 
	`LOG_VERBOSE
(" MITM: %s.\n", (
Paúög_C≠abûôõs
->
MITM
)?"TRUE":"FALSE");

2593 
	`LOG_VERBOSE
(" B⁄dög Ty≥: %s.\n", (
Paúög_C≠abûôõs
->
B⁄dög_Ty≥
 =
QAPI_BLE_LBT_BONDING_E
)?"Bonding":"No Bonding");

2594 
	`LOG_VERBOSE
(" OOB: %s.\n", (
Paúög_C≠abûôõs
->
OOB_Pª£¡
)?"OOB":"OOB Not Present");

2595 
	`LOG_VERBOSE
(" En¸y±i⁄ Key Size: %d.\n", 
Paúög_C≠abûôõs
->
Maximum_En¸y±i⁄_Key_Size
);

2596 
	`LOG_VERBOSE
(" Sending Keys: \n");

2597 
	`LOG_VERBOSE
(" LTK: %s.\n", ((
Paúög_C≠abûôõs
->
Sídög_Keys
.
En¸y±i⁄_Key
)?"YES":"NO"));

2598 
	`LOG_VERBOSE
(" IRK: %s.\n", ((
Paúög_C≠abûôõs
->
Sídög_Keys
.
Idítifiˇti⁄_Key
)?"YES":"NO"));

2599 
	`LOG_VERBOSE
(" CSRK: %s.\n", ((
Paúög_C≠abûôõs
->
Sídög_Keys
.
Signög_Key
)?"YES":"NO"));

2600 
	`LOG_VERBOSE
(" Receiving Keys: \n");

2601 
	`LOG_VERBOSE
(" LTK: %s.\n", ((
Paúög_C≠abûôõs
->
Re˚ivög_Keys
.
En¸y±i⁄_Key
)?"YES":"NO"));

2602 
	`LOG_VERBOSE
(" IRK: %s.\n", ((
Paúög_C≠abûôõs
->
Re˚ivög_Keys
.
Idítifiˇti⁄_Key
)?"YES":"NO"));

2603 
	`LOG_VERBOSE
(" CSRK: %s.\n", ((
Paúög_C≠abûôõs
->
Re˚ivög_Keys
.
Signög_Key
)?"YES":"NO"));

2604 
	}
}

2611 
	$Di•œyPaúögInf‹m©i⁄
(
q≠i_BLE_GAP_LE_Exãnded_Paúög_C≠abûôõs_t
 *
Paúög_C≠abûôõs
)

2613 
Paúög_C≠abûôõs
->
IO_C≠abûôy
)

2615 
QAPI_BLE_LIC_DISPLAY_ONLY_E
:

2616 
	`LOG_VERBOSE
(" IO Capability: Display Only.\n");

2618 
QAPI_BLE_LIC_DISPLAY_YES_NO_E
:

2619 
	`LOG_VERBOSE
(" IO Capability: Display Yes/No.\n");

2621 
QAPI_BLE_LIC_KEYBOARD_ONLY_E
:

2622 
	`LOG_VERBOSE
(" IO Capability: Keyboard Only.\n");

2624 
QAPI_BLE_LIC_NO_INPUT_NO_OUTPUT_E
:

2625 
	`LOG_VERBOSE
(" IO Capability: No Input No Output.\n");

2627 
QAPI_BLE_LIC_KEYBOARD_DISPLAY_E
:

2628 
	`LOG_VERBOSE
(" IO Capability: Keyboard/Display.\n");

2632 
	`LOG_INFO
(" B⁄dög Ty≥: %s.\n", (
Paúög_C≠abûôõs
->
B⁄dög_Ty≥
 =
QAPI_BLE_LBT_BONDING_E
)?"Bonding":"No Bonding");

2633 
	`LOG_INFO
(" MITM: %s.\n", (
Paúög_C≠abûôõs
->
Fœgs
 & 
QAPI_BLE_GAP_LE_EXTENDED_PAIRING_CAPABILITIES_FLAGS_MITM_REQUESTED
)?"TRUE":"FALSE");

2634 
	`LOG_INFO
(" Secuª C⁄√˘i⁄s: %s.\n", (
Paúög_C≠abûôõs
->
Fœgs
 & 
QAPI_BLE_GAP_LE_EXTENDED_PAIRING_CAPABILITIES_FLAGS_SECURE_CONNECTIONS
)?"TRUE":"FALSE");

2635 
	`LOG_INFO
(" OOB: %s.\n", (
Paúög_C≠abûôõs
->
Fœgs
 & 
QAPI_BLE_GAP_LE_EXTENDED_PAIRING_CAPABILITIES_FLAGS_OOB_DATA_PRESENT
)?"OOB":"OOB Not Present");

2636 
	`LOG_INFO
(" En¸y±i⁄ Key Size: %d.\n", 
Paúög_C≠abûôõs
->
Maximum_En¸y±i⁄_Key_Size
);

2637 
	`LOG_VERBOSE
(" Sending Keys: \n");

2638 
	`LOG_VERBOSE
(" LTK: %s.\n", ((
Paúög_C≠abûôõs
->
Sídög_Keys
.
En¸y±i⁄_Key
)?"YES":"NO"));

2639 
	`LOG_VERBOSE
(" IRK: %s.\n", ((
Paúög_C≠abûôõs
->
Sídög_Keys
.
Idítifiˇti⁄_Key
)?"YES":"NO"));

2640 
	`LOG_VERBOSE
(" CSRK: %s.\n", ((
Paúög_C≠abûôõs
->
Sídög_Keys
.
Signög_Key
)?"YES":"NO"));

2641 
	`LOG_VERBOSE
(" Lök Key: %s.\n", ((
Paúög_C≠abûôõs
->
Sídög_Keys
.
Lök_Key
)?"YES":"NO"));

2642 
	`LOG_VERBOSE
(" Receiving Keys: \n");

2643 
	`LOG_VERBOSE
(" LTK: %s.\n", ((
Paúög_C≠abûôõs
->
Re˚ivög_Keys
.
En¸y±i⁄_Key
)?"YES":"NO"));

2644 
	`LOG_VERBOSE
(" IRK: %s.\n", ((
Paúög_C≠abûôõs
->
Re˚ivög_Keys
.
Idítifiˇti⁄_Key
)?"YES":"NO"));

2645 
	`LOG_VERBOSE
(" CSRK: %s.\n", ((
Paúög_C≠abûôõs
->
Re˚ivög_Keys
.
Signög_Key
)?"YES":"NO"));

2646 
	`LOG_VERBOSE
(" Lök Key: %s.\n", ((
Paúög_C≠abûôõs
->
Re˚ivög_Keys
.
Lök_Key
)?"YES":"NO"));

2647 
	}
}

2656 
QAPI_BLE_BTPSAPI
 
	$GAP_LE_Evít_CÆlback
(
uöt32_t
 
BluëoŸhSèckID
, 
q≠i_BLE_GAP_LE_Evít_D©a_t
 *
GAP_LE_Evít_D©a
, uöt32_à
CÆlbackP¨amëî
)

2658 
boﬁón_t
 
Di•œyProm±
;

2659 
Resu…
;

2660 
uöt16_t
 
EDIV
;

2661 
BﬂrdSå_t
 
BﬂrdSå
;

2662 
Index
;

2663 
Devi˚Info_t
 *
Devi˚Info
;

2664 
q≠i_BLE_R™dom_Numbî_t
 
R™domNumbî
;

2665 
q≠i_BLE_L⁄g_Tîm_Key_t
 
Gíî©edLTK
;

2666 
q≠i_BLE_GAP_LE_Securôy_Inf‹m©i⁄_t
 
GAP_LE_Securôy_Inf‹m©i⁄
;

2667 
q≠i_BLE_GAP_LE_C⁄√˘i⁄_P¨amëîs_t
 
C⁄√˘i⁄P¨ams
;

2668 
q≠i_BLE_GAP_LE_Advîtisög_Rï‹t_D©a_t
 *
Devi˚E¡ryPå
;

2669 
q≠i_BLE_GAP_LE_Authítiˇti⁄_Evít_D©a_t
 *
Authítiˇti⁄_Evít_D©a
;

2670 
q≠i_BLE_GAP_LE_Dúe˘_Advîtisög_Rï‹t_D©a_t
 *
Dúe˘Devi˚E¡ryPå
;

2671 #ifde‡
V2


2672 
q≠i_BLE_GAP_LE_Exãnded_Advîtisög_Rï‹t_D©a_t
 *
ExtDevi˚E¡ryPå
;

2674 
q≠i_BLE_GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄_t
 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
;

2676 if((
BluëoŸhSèckID
Ë&& (
GAP_LE_Evít_D©a
))

2678 
Di•œyProm±
 = 
åue
;

2680 
GAP_LE_Evít_D©a
->
Evít_D©a_Ty≥
)

2682 #ifde‡
V2


2683 
QAPI_BLE_ET_LE_SCAN_TIMEOUT_E
:

2684 
	`LOG_WARN
("ëLE_Sˇn_Timeouàwôh sizê%d.\n",()
GAP_LE_Evít_D©a
->
Evít_D©a_Size
);

2686 
QAPI_BLE_ET_LE_PHY_UPDATE_COMPLETE_E
:

2687 
	`LOG_INFO
("ëLE_PHY_Upd©e_Com∂ëêwôh sizê%d.\n",()
GAP_LE_Evít_D©a
->
Evít_D©a_Size
);

2689 
	`LOG_VERBOSE
(" Sètus: %d.\n", ()(
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_Phy_Upd©e_Com∂ëe_Evít_D©a
->
Sètus
));

2690 
	`LOG_VERBOSE
(" Addªss: 0x%02X%02X%02X%02X%02X%02X.\n", 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_Phy_Upd©e_Com∂ëe_Evít_D©a
->
BD_ADDR
.
BD_ADDR5
,

2691 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_Phy_Upd©e_Com∂ëe_Evít_D©a
->
BD_ADDR
.
BD_ADDR4
,

2692 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_Phy_Upd©e_Com∂ëe_Evít_D©a
->
BD_ADDR
.
BD_ADDR3
,

2693 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_Phy_Upd©e_Com∂ëe_Evít_D©a
->
BD_ADDR
.
BD_ADDR2
,

2694 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_Phy_Upd©e_Com∂ëe_Evít_D©a
->
BD_ADDR
.
BD_ADDR1
,

2695 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_Phy_Upd©e_Com∂ëe_Evít_D©a
->
BD_ADDR
.
BD_ADDR0
);

2700 
QAPI_BLE_ET_LE_ADVERTISING_SET_TERMINATED_E
:

2701 
	`LOG_INFO
("ëLE_Advîtisög_Së_Tîmö©ed wôh sizê%d.\n",()
GAP_LE_Evít_D©a
->
Evít_D©a_Size
);

2703 
	`LOG_VERBOSE
(" Sètus: %d.\n", ()(
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_Advîtisög_Së_Tîmö©ed_Evít_D©a
->
Sètus
));

2704 
	`LOG_VERBOSE
(" Advîtisög H™dÀ: %u.\n", ()(
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_Advîtisög_Së_Tîmö©ed_Evít_D©a
->
Advîtisög_H™dÀ
));

2705 
	`LOG_VERBOSE
(" Numbî o‡Com∂ëed Advîtisög Evíts: %u.\n", ()(
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_Advîtisög_Së_Tîmö©ed_Evít_D©a
->
Num_Com∂ëed_Ext_Advîtisög_Evíts
));

2707 if(
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_Advîtisög_Së_Tîmö©ed_Evít_D©a
->
Sètus
 =
QAPI_BLE_HCI_ERROR_CODE_SUCCESS
)

2709 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_Advîtisög_Së_Tîmö©ed_Evít_D©a
->
C⁄√˘i⁄_Addªss_Ty≥
)

2711 
QAPI_BLE_LAT_PUBLIC_E
:

2712 
	`LOG_VERBOSE
(" Connection Address Type: %s.\n", "QAPI_BLE_LAT_PUBLIC_E");

2714 
QAPI_BLE_LAT_RANDOM_E
:

2715 
	`LOG_VERBOSE
(" Connection Address Type: %s.\n", "QAPI_BLE_LAT_RANDOM_E");

2717 
QAPI_BLE_LAT_PUBLIC_IDENTITY_E
:

2718 
	`LOG_VERBOSE
(" Connection Address Type: %s.\n", "QAPI_BLE_LAT_PUBLIC_IDENTITY_E");

2720 
QAPI_BLE_LAT_RANDOM_IDENTITY_E
:

2721 
	`LOG_VERBOSE
(" Connection Address Type: %s.\n", "QAPI_BLE_LAT_RANDOM_IDENTITY_E");

2724 
	`LOG_VERBOSE
(" Connection Address Type: Invalid.\n");

2728 
	`BD_ADDRToSå
(
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_Advîtisög_Së_Tîmö©ed_Evít_D©a
->
C⁄√˘i⁄_Addªss
, 
BﬂrdSå
);

2729 
	`LOG_VERBOSE
(" C⁄√˘i⁄ Addªss: %s.\n", 
BﬂrdSå
);

2732 
QAPI_BLE_ET_LE_SCAN_REQUEST_RECEIVED_E
:

2733 
	`LOG_INFO
("ëLE_Sˇn_Reque°_Re˚ived wôh sizê%d.\n",()
GAP_LE_Evít_D©a
->
Evít_D©a_Size
);

2735 
	`LOG_INFO
(" Advîtisög H™dÀ: %d.\n", 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_Sˇn_Reque°_Re˚ived_Evít_D©a
->
Advîtisög_H™dÀ
);

2737 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_Sˇn_Reque°_Re˚ived_Evít_D©a
->
Sˇ¬î_Addªss_Ty≥
)

2739 
QAPI_BLE_LAT_PUBLIC_E
:

2740 
	`LOG_VERBOSE
(" Scanner Address Type: %s.\n", "QAPI_BLE_LAT_PUBLIC_E");

2742 
QAPI_BLE_LAT_RANDOM_E
:

2743 
	`LOG_VERBOSE
(" Scanner Address Type: %s.\n", "QAPI_BLE_LAT_RANDOM_E");

2745 
QAPI_BLE_LAT_PUBLIC_IDENTITY_E
:

2746 
	`LOG_VERBOSE
(" Scanner Address Type: %s.\n", "QAPI_BLE_LAT_PUBLIC_IDENTITY_E");

2748 
QAPI_BLE_LAT_RANDOM_IDENTITY_E
:

2749 
	`LOG_VERBOSE
(" Scanner Address Type: %s.\n", "QAPI_BLE_LAT_RANDOM_IDENTITY_E");

2752 
	`LOG_VERBOSE
(" Scanner Address Type: Invalid.\n");

2756 
	`BD_ADDRToSå
(
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_Sˇn_Reque°_Re˚ived_Evít_D©a
->
Sˇ¬î_Addªss
, 
BﬂrdSå
);

2757 
	`LOG_VERBOSE
(" Sˇ¬î Addªss: %s.\n", 
BﬂrdSå
);

2759 
QAPI_BLE_ET_LE_CHANNEL_SELECTION_ALGORITHM_UPDATE_E
:

2760 
	`LOG_VERBOSE
("ëLE_Ch™√l_Sñe˘i⁄_Alg‹ôhm_Upd©êwôh sizê%d.\n", ()
GAP_LE_Evít_D©a
->
Evít_D©a_Size
);

2762 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_Ch™√l_Sñe˘i⁄_Alg‹ôhm_Upd©e_Evít_D©a
->
Ch™√l_Sñe˘i⁄_Alg‹ôhm
)

2764 
QAPI_BLE_SA_ALGORITHM_NUM1_E
:

2765 
	`LOG_VERBOSE
(" Channel Selection Algorithm: %s.\n", "CSA #1");

2767 
QAPI_BLE_SA_ALGORITHM_NUM2_E
:

2768 
	`LOG_VERBOSE
(" Channel Selection Algorithm: %s.\n", "CSA #2");

2771 
	`LOG_VERBOSE
(" Channel Selection Algorithm: %s.\n", "CSA Unkown");

2775 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_Ch™√l_Sñe˘i⁄_Alg‹ôhm_Upd©e_Evít_D©a
->
C⁄√˘i⁄_Addªss_Ty≥
)

2777 
QAPI_BLE_LAT_PUBLIC_E
:

2778 
	`LOG_VERBOSE
(" Connection Address Type: %s.\n", "QAPI_BLE_LAT_PUBLIC_E");

2780 
QAPI_BLE_LAT_RANDOM_E
:

2781 
	`LOG_VERBOSE
(" Connection Address Type: %s.\n", "QAPI_BLE_LAT_RANDOM_E");

2783 
QAPI_BLE_LAT_PUBLIC_IDENTITY_E
:

2784 
	`LOG_VERBOSE
(" Connection Address Type: %s.\n", "QAPI_BLE_LAT_PUBLIC_IDENTITY_E");

2786 
QAPI_BLE_LAT_RANDOM_IDENTITY_E
:

2787 
	`LOG_VERBOSE
(" Connection Address Type: %s.\n", "QAPI_BLE_LAT_RANDOM_IDENTITY_E");

2790 
	`LOG_VERBOSE
(" Connection Address Type: Invalid.\n");

2794 
	`BD_ADDRToSå
(
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_Ch™√l_Sñe˘i⁄_Alg‹ôhm_Upd©e_Evít_D©a
->
C⁄√˘i⁄_Addªss
, 
BﬂrdSå
);

2795 
	`LOG_VERBOSE
(" C⁄√˘i⁄ Addªss: %s.\n", 
BﬂrdSå
);

2797 
QAPI_BLE_ET_LE_EXTENDED_ADVERTISING_REPORT_E
:

2798 
	`LOG_VERBOSE
("ëLE_Exãnded_Advîtisög_Rï‹àwôh sizê%d.\n",()
GAP_LE_Evít_D©a
->
Evít_D©a_Size
);

2799 
	`LOG_VERBOSE
(" %d Re•⁄£s.\n", 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_Exãnded_Advîtisög_Rï‹t_Evít_D©a
->
Numbî_Devi˚_E¡rõs
);

2801 
Index
 = 0; Index < 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_Exãnded_Advîtisög_Rï‹t_Evít_D©a
->
Numbî_Devi˚_E¡rõs
; Index++)

2803 
ExtDevi˚E¡ryPå
 = &(
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_Exãnded_Advîtisög_Rï‹t_Evít_D©a
->
Exãnded_Advîtisög_D©a
[
Index
]);

2805 
ExtDevi˚E¡ryPå
->
Addªss_Ty≥
)

2807 
QAPI_BLE_LAT_PUBLIC_E
:

2808 
	`LOG_VERBOSE
(" Address Type: %s.\n", "QAPI_BLE_LAT_PUBLIC_E");

2810 
QAPI_BLE_LAT_RANDOM_E
:

2811 
	`LOG_VERBOSE
(" Address Type: %s.\n", "QAPI_BLE_LAT_RANDOM_E");

2813 
QAPI_BLE_LAT_PUBLIC_IDENTITY_E
:

2814 
	`LOG_VERBOSE
(" Address Type: %s.\n", "QAPI_BLE_LAT_PUBLIC_IDENTITY_E");

2816 
QAPI_BLE_LAT_RANDOM_IDENTITY_E
:

2817 
	`LOG_VERBOSE
(" Address Type: %s.\n", "QAPI_BLE_LAT_RANDOM_IDENTITY_E");

2819 
QAPI_BLE_LAT_ANONYMOUS_E
:

2820 
	`LOG_VERBOSE
(" Address Type: %s.\n", "Anonymous");

2823 
	`LOG_VERBOSE
(" Address Type: Invalid.\n");

2827 
	`LOG_VERBOSE
(" Addªss: 0x%02X%02X%02X%02X%02X%02X.\n", 
ExtDevi˚E¡ryPå
->
BD_ADDR
.
BD_ADDR5
, ExtDevi˚E¡ryPå->BD_ADDR.
BD_ADDR4
, ExtDevi˚E¡ryPå->BD_ADDR.
BD_ADDR3
, ExtDevi˚E¡ryPå->BD_ADDR.
BD_ADDR2
, ExtDevi˚E¡ryPå->BD_ADDR.
BD_ADDR1
, ExtDevi˚E¡ryPå->BD_ADDR.
BD_ADDR0
);

2829 if(
Di•œyAdvîtisögEvítD©a
)

2831 
	`LOG_VERBOSE
(" EvíàTy≥ Fœgs: 0x%08X.\n", 
ExtDevi˚E¡ryPå
->
Evít_Ty≥_Fœgs
);

2832 
	`LOG_VERBOSE
(" Tx Powî: %d.\n", ()
ExtDevi˚E¡ryPå
->
Tx_Powî
);

2833 
	`LOG_VERBOSE
(" RSSI: %d.\n", ()
ExtDevi˚E¡ryPå
->
RSSI
);

2834 
	`LOG_VERBOSE
(" Advîtisög SID: %d.\n", ()
ExtDevi˚E¡ryPå
->
Advîtisög_SID
);

2837 
ExtDevi˚E¡ryPå
->
D©a_Sètus
)

2839 
QAPI_BLE_DS_COMPLETE_E
:

2840 
	`LOG_VERBOSE
(" Data Status: %s.\n", "Complete");

2842 
QAPI_BLE_DS_INCOMPLETE_DATA_PENDING_E
:

2843 
	`LOG_VERBOSE
(" Data Status: %s.\n", "Incomplete - More dataÖending");

2846 
QAPI_BLE_DS_INCOMPLETE_DATA_TRUNCATED_E
:

2847 
	`LOG_VERBOSE
(" Data Status: %s.\n", "Incomplete - dataÅruncated");

2851 if(
ExtDevi˚E¡ryPå
->
Evít_Ty≥_Fœgs
 & 
GAP_LE_EXTENDED_ADVERTISING_EVENT_TYPE_SECONDARY_PHY_VALID
)

2854 
	`LOG_VERBOSE
(" D©®Lígth: %u.\n", ()
ExtDevi˚E¡ryPå
->
Raw_Rï‹t_Lígth
);

2860 
QAPI_BLE_ET_LE_DATA_LENGTH_CHANGE_E
:

2861 
	`LOG_VERBOSE
("ëLE_D©a_Lígth_Ch™gêwôh sizê%d.\n", ()
GAP_LE_Evít_D©a
->
Evít_D©a_Size
);

2863 
	`BD_ADDRToSå
(
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_D©a_Lígth_Ch™ge_Evít_D©a
->
BD_ADDR
, 
BﬂrdSå
);

2864 
	`LOG_VERBOSE
(" C⁄√˘i⁄ Addªss: %s.\n", 
BﬂrdSå
);

2865 
	`LOG_VERBOSE
(" Max Tx O˘ës: %u.\n", 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_D©a_Lígth_Ch™ge_Evít_D©a
->
MaxTxO˘ës
);

2866 
	`LOG_VERBOSE
(" Max Tx Time: %u.\n", 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_D©a_Lígth_Ch™ge_Evít_D©a
->
MaxTxTime
);

2867 
	`LOG_VERBOSE
(" Max Rx O˘ës: %u.\n", 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_D©a_Lígth_Ch™ge_Evít_D©a
->
MaxRxO˘ës
);

2868 
	`LOG_VERBOSE
(" Max Rx Time: %u.\n", 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_D©a_Lígth_Ch™ge_Evít_D©a
->
MaxRxTime
);

2870 
QAPI_BLE_ET_LE_ADVERTISING_REPORT_E
:

2871 
	`LOG_VERBOSE
("ëLE_Advîtisög_Rï‹àwôh sizê%d.\n",()
GAP_LE_Evít_D©a
->
Evít_D©a_Size
);

2872 
	`LOG_VERBOSE
(" %d Re•⁄£s.\n",
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_Advîtisög_Rï‹t_Evít_D©a
->
Numbî_Devi˚_E¡rõs
);

2874 
Index
 = 0; Index < 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_Advîtisög_Rï‹t_Evít_D©a
->
Numbî_Devi˚_E¡rõs
; Index++)

2876 
Devi˚E¡ryPå
 = &(
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_Advîtisög_Rï‹t_Evít_D©a
->
Advîtisög_D©a
[
Index
]);

2878 
Devi˚E¡ryPå
->
Addªss_Ty≥
)

2880 
QAPI_BLE_LAT_PUBLIC_E
:

2881 
	`LOG_VERBOSE
(" Address Type: %s.\n", "QAPI_BLE_LAT_PUBLIC_E");

2883 
QAPI_BLE_LAT_RANDOM_E
:

2884 
	`LOG_VERBOSE
(" Address Type: %s.\n", "QAPI_BLE_LAT_RANDOM_E");

2886 
QAPI_BLE_LAT_PUBLIC_IDENTITY_E
:

2887 
	`LOG_VERBOSE
(" Address Type: %s.\n", "QAPI_BLE_LAT_PUBLIC_IDENTITY_E");

2889 
QAPI_BLE_LAT_RANDOM_IDENTITY_E
:

2890 
	`LOG_VERBOSE
(" Address Type: %s.\n", "QAPI_BLE_LAT_RANDOM_IDENTITY_E");

2893 
	`LOG_VERBOSE
(" Address Type: Invalid.\n");

2897 
	`LOG_VERBOSE
(" Addªss: 0x%02X%02X%02X%02X%02X%02X.\n", 
Devi˚E¡ryPå
->
BD_ADDR
.
BD_ADDR5
, Devi˚E¡ryPå->BD_ADDR.
BD_ADDR4
, Devi˚E¡ryPå->BD_ADDR.
BD_ADDR3
, Devi˚E¡ryPå->BD_ADDR.
BD_ADDR2
, Devi˚E¡ryPå->BD_ADDR.
BD_ADDR1
, Devi˚E¡ryPå->BD_ADDR.
BD_ADDR0
);

2899 if(
Di•œyAdvîtisögEvítD©a
)

2901 
Devi˚E¡ryPå
->
Advîtisög_Rï‹t_Ty≥
)

2903 
QAPI_BLE_RT_CONNECTABLE_UNDIRECTED_E
:

2904 
	`LOG_VERBOSE
(" Advertising Type: %s.\n", "QAPI_BLE_RT_CONNECTABLE_UNDIRECTED_E");

2906 
QAPI_BLE_RT_CONNECTABLE_DIRECTED_E
:

2907 
	`LOG_VERBOSE
(" Advertising Type: %s.\n", "QAPI_BLE_RT_CONNECTABLE_DIRECTED_E");

2909 
QAPI_BLE_RT_SCANNABLE_UNDIRECTED_E
:

2910 
	`LOG_VERBOSE
(" Advertising Type: %s.\n", "QAPI_BLE_RT_SCANNABLE_UNDIRECTED_E");

2912 
QAPI_BLE_RT_NON_CONNECTABLE_UNDIRECTED_E
:

2913 
	`LOG_VERBOSE
(" Advertising Type: %s.\n", "QAPI_BLE_RT_NON_CONNECTABLE_UNDIRECTED_E");

2915 
QAPI_BLE_RT_SCAN_RESPONSE_E
:

2916 
	`LOG_VERBOSE
(" Advertising Type: %s.\n", "QAPI_BLE_RT_SCAN_RESPONSE_E");

2920 
	`LOG_VERBOSE
(" RSSI: %d.\n", ()(
Devi˚E¡ryPå
->
RSSI
));

2921 
	`LOG_VERBOSE
(" D©®Lígth: %d.\n", 
Devi˚E¡ryPå
->
Raw_Rï‹t_Lígth
);

2925 
QAPI_BLE_ET_LE_CONNECTION_COMPLETE_E
:

2926 
	`LOG_INFO
("ëLE_C⁄√˘i⁄_Com∂ëêwôh sizê%d.\n",()
GAP_LE_Evít_D©a
->
Evít_D©a_Size
);

2928 if(
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_C⁄√˘i⁄_Com∂ëe_Evít_D©a
)

2930 
	`BD_ADDRToSå
(
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_C⁄√˘i⁄_Com∂ëe_Evít_D©a
->
Pìr_Addªss
, 
BﬂrdSå
);

2932 
	`LOG_VERBOSE
(" Sètus: 0x%02X.\n", 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_C⁄√˘i⁄_Com∂ëe_Evít_D©a
->
Sètus
);

2933 
	`LOG_VERBOSE
(" Rﬁe: %s.\n", (
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_C⁄√˘i⁄_Com∂ëe_Evít_D©a
->
Ma°î
)?"Master":"Slave");

2934 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_C⁄√˘i⁄_Com∂ëe_Evít_D©a
->
Pìr_Addªss_Ty≥
)

2936 
QAPI_BLE_LAT_PUBLIC_E
:

2937 
	`LOG_VERBOSE
(" Address Type: %s.\n", "QAPI_BLE_LAT_PUBLIC_E");

2939 
QAPI_BLE_LAT_RANDOM_E
:

2940 
	`LOG_VERBOSE
(" Address Type: %s.\n", "QAPI_BLE_LAT_RANDOM_E");

2942 
QAPI_BLE_LAT_PUBLIC_IDENTITY_E
:

2943 
	`LOG_VERBOSE
(" Address Type: %s.\n", "QAPI_BLE_LAT_PUBLIC_IDENTITY_E");

2945 
QAPI_BLE_LAT_RANDOM_IDENTITY_E
:

2946 
	`LOG_VERBOSE
(" Address Type: %s.\n", "QAPI_BLE_LAT_RANDOM_IDENTITY_E");

2949 
	`LOG_VERBOSE
(" Address Type: Invalid.\n");

2952 
	`LOG_VERBOSE
(" BD_ADDR: %s.\n", 
BﬂrdSå
);

2954 if(
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_C⁄√˘i⁄_Com∂ëe_Evít_D©a
->
Sètus
 =
QAPI_BLE_HCI_ERROR_CODE_NO_ERROR
)

2956 
	`LOG_VERBOSE
(" C⁄√˘i⁄ I¡îvÆ: %u.\n", ()
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_C⁄√˘i⁄_Com∂ëe_Evít_D©a
->
Cuºít_C⁄√˘i⁄_P¨amëîs
.
C⁄√˘i⁄_I¡îvÆ
);

2957 
	`LOG_VERBOSE
(" SœvêL©ícy: %u.\n", ()
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_C⁄√˘i⁄_Com∂ëe_Evít_D©a
->
Cuºít_C⁄√˘i⁄_P¨amëîs
.
Sœve_L©ícy
);

2959 
LoˇlDevi˚IsMa°î
 = 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_C⁄√˘i⁄_Com∂ëe_Evít_D©a
->
Ma°î
;

2960 
RemŸeAddªssTy≥
 = 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_C⁄√˘i⁄_Com∂ëe_Evít_D©a
->
Pìr_Addªss_Ty≥
;

2962 if((
Devi˚Info
 = 
	`SórchDevi˚InfoE¡ryTy≥Addªss
(&
Devi˚InfoLi°
, 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_C⁄√˘i⁄_Com∂ëe_Evít_D©a
->
Pìr_Addªss_Ty≥
, GAP_LE_Evít_D©a->Evít_D©a.GAP_LE_C⁄√˘i⁄_Com∂ëe_Evít_D©a->
Pìr_Addªss
)Ë!
NULL
)

2964 
uöt8_t
 
Pìr_Idítôy_Addªss_Ty≥
;

2965 
uöt8_t
 
SètusResu…
;

2966 
q≠i_BLE_BD_ADDR_t
 
Pìr_Idítôy_Addªss
;

2967 
q≠i_BLE_BD_ADDR_t
 
Loˇl_ResﬁvabÀ_Addªss
;

2969 if(
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_C⁄√˘i⁄_Com∂ëe_Evít_D©a
->
Pìr_Addªss_Ty≥
 =
QAPI_BLE_LAT_PUBLIC_IDENTITY_E
)

2970 
Pìr_Idítôy_Addªss_Ty≥
 = 0x00;

2971 if(
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_C⁄√˘i⁄_Com∂ëe_Evít_D©a
->
Pìr_Addªss_Ty≥
 =
QAPI_BLE_LAT_RANDOM_IDENTITY_E
)

2972 
Pìr_Idítôy_Addªss_Ty≥
 = 0x01;

2974 
Pìr_Idítôy_Addªss_Ty≥
 = 0x02;

2976 if(
Pìr_Idítôy_Addªss_Ty≥
 != 0x02)

2978 
Pìr_Idítôy_Addªss
 = 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_C⁄√˘i⁄_Com∂ëe_Evít_D©a
->
Pìr_Addªss
;

2980 if(!
	`q≠i_BLE_HCI_LE_Ród_Loˇl_ResﬁvabÀ_Addªss
(
BluëoŸhSèckID
, 
Pìr_Idítôy_Addªss_Ty≥
, 
Pìr_Idítôy_Addªss
, &
SètusResu…
, &
Loˇl_ResﬁvabÀ_Addªss
))

2982 
	`LOG_VERBOSE
(" q≠i_BLE_HCI_LE_Ród_Loˇl_ResﬁvabÀ_Addªss(): 0x%02X.\n", 
SètusResu…
);

2983 if(!
SètusResu…
)

2985 
	`BD_ADDRToSå
(
Loˇl_ResﬁvabÀ_Addªss
, 
BﬂrdSå
);

2986 
	`LOG_VERBOSE
(" Loˇ»RPA: %s.\n", 
BﬂrdSå
);

2991 if(
LoˇlDevi˚IsMa°î
)

2993 if(
Devi˚Info
->
Fœgs
 & 
DEVICE_INFO_FLAGS_LTK_VALID
)

2995 
	`LOG_INFO
("AttemptingÅo Re-Establish Security.\n");

2997 
GAP_LE_Securôy_Inf‹m©i⁄
.
Loˇl_Devi˚_Is_Ma°î
 = 
TRUE
;

2998 
	`mem˝y
(&(
GAP_LE_Securôy_Inf‹m©i⁄
.
Securôy_Inf‹m©i⁄
.
Ma°î_Inf‹m©i⁄
.
LTK
), &(
Devi˚Info
->LTK), (DeviceInfo->LTK));

2999 
GAP_LE_Securôy_Inf‹m©i⁄
.
Securôy_Inf‹m©i⁄
.
Ma°î_Inf‹m©i⁄
.
EDIV
 = 
Devi˚Info
->EDIV;

3000 
	`mem˝y
(&(
GAP_LE_Securôy_Inf‹m©i⁄
.
Securôy_Inf‹m©i⁄
.
Ma°î_Inf‹m©i⁄
.
R™d
), &(
Devi˚Info
->Rand), (DeviceInfo->Rand));

3001 
GAP_LE_Securôy_Inf‹m©i⁄
.
Securôy_Inf‹m©i⁄
.
Ma°î_Inf‹m©i⁄
.
En¸y±i⁄_Key_Size
 = 
Devi˚Info
->
En¸y±i⁄KeySize
;

3003 
Resu…
 = 
	`q≠i_BLE_GAP_LE_Rì°ablish_Securôy
(
BluëoŸhSèckID
, 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_C⁄√˘i⁄_Com∂ëe_Evít_D©a
->
Pìr_Addªss
, &
GAP_LE_Securôy_Inf‹m©i⁄
, 
GAP_LE_Evít_CÆlback
, 0);

3004 if(
Resu…
)

3005 
	`LOG_INFO
("GAP_LE_Rì°ablish_SecurôyÑëu∫ed %d.\n", 
Resu…
);

3009 
	`LOG_ERROR
("Can'tÑe-establish security: LTK is missing.\n");

3016 
QAPI_BLE_ET_LE_DISCONNECTION_COMPLETE_E
:

3017 
	`LOG_INFO
("ëLE_Disc⁄√˘i⁄_Com∂ëêwôh sizê%d.\n", ()
GAP_LE_Evít_D©a
->
Evít_D©a_Size
);

3019 if(
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_Disc⁄√˘i⁄_Com∂ëe_Evít_D©a
)

3021 
	`LOG_VERBOSE
(" Sètus: 0x%02X.\n", 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_Disc⁄√˘i⁄_Com∂ëe_Evít_D©a
->
Sètus
);

3022 
	`LOG_VERBOSE
(" Rós⁄: 0x%02X.\n", 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_Disc⁄√˘i⁄_Com∂ëe_Evít_D©a
->
Rós⁄
);

3024 
	`BD_ADDRToSå
(
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_Disc⁄√˘i⁄_Com∂ëe_Evít_D©a
->
Pìr_Addªss
, 
BﬂrdSå
);

3025 
	`LOG_VERBOSE
(" BD_ADDR: %s.\n", 
BﬂrdSå
);

3027 
SídInfo
.
ByãsToSíd
 = 0;

3028 
SídInfo
.
ByãsSít
 = 0;

3033 
QCLI_Comm™d_Sètus_t
 
°©us_≥rsi°ít
;

3034 
°©us_≥rsi°ít
 = 
	`St‹ePîsi°ítD©a
();

3035 
	`LOG_VERBOSE
(" Sètu†o‡thê≥rsi°íà°‹agê: 0x%02X.\n", 
°©us_≥rsi°ít
);

3037 
	`Advîti£LE
(1);

3040 
QAPI_BLE_ET_LE_CONNECTION_PARAMETER_UPDATE_REQUEST_E
:

3041 
	`LOG_VERBOSE
("ëLE_C⁄√˘i⁄_P¨amëî_Upd©e_Reque° wôh sizê%d.\n",()
GAP_LE_Evít_D©a
->
Evít_D©a_Size
);

3043 if(
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_C⁄√˘i⁄_P¨amëî_Upd©e_Reque°_Evít_D©a
)

3045 
	`BD_ADDRToSå
(
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_C⁄√˘i⁄_P¨amëî_Upd©e_Reque°_Evít_D©a
->
BD_ADDR
, 
BﬂrdSå
);

3046 
	`LOG_VERBOSE
(" BD_ADDR: %s\n", 
BﬂrdSå
);

3047 
	`LOG_VERBOSE
(" C⁄√˘i⁄ I¡îvÆ Möimum: %d\n", 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_C⁄√˘i⁄_P¨amëî_Upd©e_Reque°_Evít_D©a
->
C⁄n_I¡îvÆ_Mö
);

3048 
	`LOG_VERBOSE
(" C⁄√˘i⁄ I¡îvÆ Maximum: %d\n", 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_C⁄√˘i⁄_P¨amëî_Upd©e_Reque°_Evít_D©a
->
C⁄n_I¡îvÆ_Max
);

3049 
	`LOG_VERBOSE
(" SœvêL©ícy: %d\n", 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_C⁄√˘i⁄_P¨amëî_Upd©e_Reque°_Evít_D©a
->
Sœve_L©ícy
);

3050 
	`LOG_VERBOSE
(" Su≥rvisi⁄ Timeout: %d\n", 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_C⁄√˘i⁄_P¨amëî_Upd©e_Reque°_Evít_D©a
->
C⁄n_Su≥rvisi⁄_Timeout
);

3052 
C⁄√˘i⁄P¨ams
.
C⁄√˘i⁄_I¡îvÆ_Mö
 = 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_C⁄√˘i⁄_P¨amëî_Upd©e_Reque°_Evít_D©a
->
C⁄n_I¡îvÆ_Mö
;

3053 
C⁄√˘i⁄P¨ams
.
C⁄√˘i⁄_I¡îvÆ_Max
 = 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_C⁄√˘i⁄_P¨amëî_Upd©e_Reque°_Evít_D©a
->
C⁄n_I¡îvÆ_Max
;

3054 
C⁄√˘i⁄P¨ams
.
Sœve_L©ícy
 = 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_C⁄√˘i⁄_P¨amëî_Upd©e_Reque°_Evít_D©a
->Slave_Latency;

3055 
C⁄√˘i⁄P¨ams
.
Su≥rvisi⁄_Timeout
 = 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_C⁄√˘i⁄_P¨amëî_Upd©e_Reque°_Evít_D©a
->
C⁄n_Su≥rvisi⁄_Timeout
;

3056 
C⁄√˘i⁄P¨ams
.
Möimum_C⁄√˘i⁄_Lígth
 = 0;

3057 
C⁄√˘i⁄P¨ams
.
Maximum_C⁄√˘i⁄_Lígth
 = 10000;

3059 
	`q≠i_BLE_GAP_LE_C⁄√˘i⁄_P¨amëî_Upd©e_Re•⁄£
(
BluëoŸhSèckID
, 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_C⁄√˘i⁄_P¨amëî_Upd©e_Reque°_Evít_D©a
->
BD_ADDR
, 
TRUE
, &
C⁄√˘i⁄P¨ams
);

3062 
QAPI_BLE_ET_LE_CONNECTION_PARAMETER_UPDATED_E
:

3063 
	`LOG_VERBOSE
("ëLE_C⁄√˘i⁄_P¨amëî_Upd©ed wôh sizê%d.\n",()
GAP_LE_Evít_D©a
->
Evít_D©a_Size
);

3065 if(
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_C⁄√˘i⁄_P¨amëî_Upd©ed_Evít_D©a
)

3067 
	`BD_ADDRToSå
(
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_C⁄√˘i⁄_P¨amëî_Upd©ed_Evít_D©a
->
BD_ADDR
, 
BﬂrdSå
);

3068 
	`LOG_VERBOSE
(" BD_ADDR: %s\n", 
BﬂrdSå
);

3069 
	`LOG_VERBOSE
(" Sètus: %d\n", 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_C⁄√˘i⁄_P¨amëî_Upd©ed_Evít_D©a
->
Sètus
);

3070 
	`LOG_VERBOSE
(" C⁄√˘i⁄ I¡îvÆ: %d\n", 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_C⁄√˘i⁄_P¨amëî_Upd©ed_Evít_D©a
->
Cuºít_C⁄√˘i⁄_P¨amëîs
.
C⁄√˘i⁄_I¡îvÆ
);

3071 
	`LOG_VERBOSE
(" SœvêL©ícy: %d\n", 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_C⁄√˘i⁄_P¨amëî_Upd©ed_Evít_D©a
->
Cuºít_C⁄√˘i⁄_P¨amëîs
.
Sœve_L©ícy
);

3072 
	`LOG_VERBOSE
(" Su≥rvisi⁄ Timeout: %d\n", 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_C⁄√˘i⁄_P¨amëî_Upd©ed_Evít_D©a
->
Cuºít_C⁄√˘i⁄_P¨amëîs
.
Su≥rvisi⁄_Timeout
);

3075 
QAPI_BLE_ET_LE_ENCRYPTION_CHANGE_E
:

3076 
	`LOG_VERBOSE
("ëLE_En¸y±i⁄_Ch™gêwôh sizê%d.\n",()
GAP_LE_Evít_D©a
->
Evít_D©a_Size
);

3078 
QAPI_BLE_ET_LE_ENCRYPTION_REFRESH_COMPLETE_E
:

3079 
	`LOG_VERBOSE
("ëLE_En¸y±i⁄_Re‰esh_Com∂ëêwôh sizê%d.\n", ()
GAP_LE_Evít_D©a
->
Evít_D©a_Size
);

3081 
QAPI_BLE_ET_LE_AUTHENTICATION_E
:

3082 
	`LOG_VERBOSE
("ëLE_Authítiˇti⁄ wôh sizê%d.\n", ()
GAP_LE_Evít_D©a
->
Evít_D©a_Size
);

3084 if((
Authítiˇti⁄_Evít_D©a
 = 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_Authítiˇti⁄_Evít_D©a
Ë!
NULL
)

3086 
	`BD_ADDRToSå
(
Authítiˇti⁄_Evít_D©a
->
BD_ADDR
, 
BﬂrdSå
);

3088 
Authítiˇti⁄_Evít_D©a
->
GAP_LE_Authítiˇti⁄_Evít_Ty≥
)

3090 
QAPI_BLE_LAT_LONG_TERM_KEY_REQUEST_E
:

3091 
	`LOG_VERBOSE
("ÜatKeyRequest: \n");

3092 
	`LOG_VERBOSE
(" BD_ADDR: %s.\n", 
BﬂrdSå
);

3094 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
GAP_LE_Authítiˇti⁄_Ty≥
 = 
QAPI_BLE_LAR_LONG_TERM_KEY_E
;

3095 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
Authítiˇti⁄_D©a_Lígth
 = 0;

3097 
	`mem£t
(&
R™domNumbî
, 0, (RandomNumber));

3098 
EDIV
 = 0;

3100 if((
Authítiˇti⁄_Evít_D©a
->Authítiˇti⁄_Evít_D©a.
L⁄g_Tîm_Key_Reque°
.
EDIV
 =EDIVË&& (
	`QAPI_BLE_COMPARE_RANDOM_NUMBER
(Authítiˇti⁄_Evít_D©a->Authítiˇti⁄_Evít_D©a.L⁄g_Tîm_Key_Reque°.
R™d
, 
R™domNumbî
)))

3102 if((
Devi˚Info
 = 
	`SórchDevi˚InfoE¡ryByBD_ADDR
(&
Devi˚InfoLi°
, 
Authítiˇti⁄_Evít_D©a
->
BD_ADDR
)Ë!
NULL
)

3104 if(
Devi˚Info
->
Fœgs
 & 
DEVICE_INFO_FLAGS_LTK_VALID
)

3106 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
Authítiˇti⁄_D©a_Lígth
 = 
QAPI_BLE_GAP_LE_LONG_TERM_KEY_INFORMATION_DATA_SIZE
;

3107 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
Authítiˇti⁄_D©a
.
L⁄g_Tîm_Key_Inf‹m©i⁄
.
En¸y±i⁄_Key_Size
 = 
Devi˚Info
->
En¸y±i⁄KeySize
;

3109 
	`mem˝y
(&(
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
Authítiˇti⁄_D©a
.
L⁄g_Tîm_Key_Inf‹m©i⁄
.
L⁄g_Tîm_Key
), &(
Devi˚Info
->
LTK
), 
QAPI_BLE_LONG_TERM_KEY_SIZE
);

3115 
Resu…
 = 
	`q≠i_BLE_GAP_LE_Regíî©e_L⁄g_Tîm_Key
(
BluëoŸhSèckID
, (
q≠i_BLE_En¸y±i⁄_Key_t
 *)(&
DHK
), (q≠i_BLE_En¸y±i⁄_Key_à*)(&
ER
), 
Authítiˇti⁄_Evít_D©a
->Authítiˇti⁄_Evít_D©a.
L⁄g_Tîm_Key_Reque°
.
EDIV
, &(Authítiˇti⁄_Evít_D©a->Authítiˇti⁄_Evít_D©a.L⁄g_Tîm_Key_Reque°.
R™d
), &
Gíî©edLTK
);

3116 if(!
Resu…
)

3118 
	`LOG_VERBOSE
(" GAP_LE_Regenerate_Long_Term_Key Success.\n");

3120 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
GAP_LE_Authítiˇti⁄_Ty≥
 = 
QAPI_BLE_LAR_LONG_TERM_KEY_E
;

3121 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
Authítiˇti⁄_D©a_Lígth
 = 
QAPI_BLE_GAP_LE_LONG_TERM_KEY_INFORMATION_DATA_SIZE
;

3122 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
Authítiˇti⁄_D©a
.
L⁄g_Tîm_Key_Inf‹m©i⁄
.
En¸y±i⁄_Key_Size
 = 
QAPI_BLE_GAP_LE_MAXIMUM_ENCRYPTION_KEY_SIZE
;

3123 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
Authítiˇti⁄_D©a
.
L⁄g_Tîm_Key_Inf‹m©i⁄
.
L⁄g_Tîm_Key
 = 
Gíî©edLTK
;

3127 
	`LOG_VERBOSE
(" GAP_LE_Regíî©e_L⁄g_Tîm_KeyÑëu∫ed %d.\n",
Resu…
);

3131 
Resu…
 = 
	`q≠i_BLE_GAP_LE_Authítiˇti⁄_Re•⁄£
(
BluëoŸhSèckID
, 
Authítiˇti⁄_Evít_D©a
->
BD_ADDR
, &
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
);

3132 if(
Resu…
)

3134 
	`LOG_VERBOSE
(" GAP_LE_Authítiˇti⁄_Re•⁄£Ñëu∫ed %d.\n",
Resu…
);

3137 
QAPI_BLE_LAT_SECURITY_REQUEST_E
:

3138 
	`LOG_VERBOSE
("ÜatSecurityRequest:.\n");

3139 
	`LOG_VERBOSE
(" BD_ADDR: %s.\n", 
BﬂrdSå
);

3140 
	`LOG_VERBOSE
(" B⁄dög Ty≥: %s.\n", ((
Authítiˇti⁄_Evít_D©a
->Authítiˇti⁄_Evít_D©a.
Securôy_Reque°
.
B⁄dög_Ty≥
 =
QAPI_BLE_LBT_BONDING_E
)?"Bonding":"No Bonding"));

3141 
	`LOG_VERBOSE
(" MITM: %s.\n", ((
Authítiˇti⁄_Evít_D©a
->Authítiˇti⁄_Evít_D©a.
Securôy_Reque°
.
MITM
)?"YES":"NO"));

3143 if(
	`QAPI_BLE_COMPARE_NULL_BD_ADDR
(
SecurôyRemŸeBD_ADDR
))

3145 
SecurôyRemŸeBD_ADDR
 = 
Authítiˇti⁄_Evít_D©a
->
BD_ADDR
;

3147 if((
Devi˚Info
 = 
	`SórchDevi˚InfoE¡ryByBD_ADDR
(&
Devi˚InfoLi°
, 
Authítiˇti⁄_Evít_D©a
->
BD_ADDR
)Ë!
NULL
)

3149 if(
Devi˚Info
->
Fœgs
 & 
DEVICE_INFO_FLAGS_LTK_VALID
)

3151 
	`LOG_VERBOSE
("AttemptingÅo Re-Establish Security.\n");

3153 
GAP_LE_Securôy_Inf‹m©i⁄
.
Loˇl_Devi˚_Is_Ma°î
 = 
TRUE
;

3154 
	`mem˝y
(&(
GAP_LE_Securôy_Inf‹m©i⁄
.
Securôy_Inf‹m©i⁄
.
Ma°î_Inf‹m©i⁄
.
LTK
), &(
Devi˚Info
->LTK), (DeviceInfo->LTK));

3155 
GAP_LE_Securôy_Inf‹m©i⁄
.
Securôy_Inf‹m©i⁄
.
Ma°î_Inf‹m©i⁄
.
EDIV
 = 
Devi˚Info
->EDIV;

3156 
	`mem˝y
(&(
GAP_LE_Securôy_Inf‹m©i⁄
.
Securôy_Inf‹m©i⁄
.
Ma°î_Inf‹m©i⁄
.
R™d
), &(
Devi˚Info
->Rand), (DeviceInfo->Rand));

3157 
GAP_LE_Securôy_Inf‹m©i⁄
.
Securôy_Inf‹m©i⁄
.
Ma°î_Inf‹m©i⁄
.
En¸y±i⁄_Key_Size
 = 
Devi˚Info
->
En¸y±i⁄KeySize
;

3159 
Resu…
 = 
	`q≠i_BLE_GAP_LE_Rì°ablish_Securôy
(
BluëoŸhSèckID
, 
SecurôyRemŸeBD_ADDR
, &
GAP_LE_Securôy_Inf‹m©i⁄
, 
GAP_LE_Evít_CÆlback
, 0);

3160 if(
Resu…
)

3162 
	`LOG_VERBOSE
("GAP_LE_Rì°ablish_SecurôyÑëu∫ed %d.\n", 
Resu…
);

3169 
	`LOG_WARN
("\nSecurity isálready inÖrogress withánotherÑemote device.\n");

3171 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
GAP_LE_Authítiˇti⁄_Ty≥
 = 
QAPI_BLE_LAR_ERROR_E
;

3172 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
Authítiˇti⁄_D©a_Lígth
 = 0;

3174 if((
Resu…
 = 
	`q≠i_BLE_GAP_LE_Authítiˇti⁄_Re•⁄£
(
BluëoŸhSèckID
, 
Authítiˇti⁄_Evít_D©a
->
BD_ADDR
, &
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
)) != 0)

3175 
	`Di•œyFun˘i⁄Eº‹
("q≠i_BLE_GAP_LE_Authítiˇti⁄_Re•⁄£", 
Resu…
);

3178 
QAPI_BLE_LAT_PAIRING_REQUEST_E
:

3179 
	`LOG_INFO
("Paúög Reque°: %s.\n", 
BﬂrdSå
);

3180 
	`Di•œyLegacyPaúögInf‹m©i⁄
(&
Authítiˇti⁄_Evít_D©a
->Authítiˇti⁄_Evít_D©a.
Paúög_Reque°
);

3181 if(
	`QAPI_BLE_COMPARE_NULL_BD_ADDR
(
SecurôyRemŸeBD_ADDR
))

3183 
SecurôyRemŸeBD_ADDR
 = 
Authítiˇti⁄_Evít_D©a
->
BD_ADDR
;

3184 
	`SœvePaúögReque°Re•⁄£
(
SecurôyRemŸeBD_ADDR
);

3188 
	`LOG_WARN
("\nSecurity isálready inÖrogress withánotherÑemote device.\n");

3190 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
GAP_LE_Authítiˇti⁄_Ty≥
 = 
QAPI_BLE_LAR_ERROR_E
;

3191 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
Authítiˇti⁄_D©a_Lígth
 = 0;

3193 if((
Resu…
 = 
	`q≠i_BLE_GAP_LE_Authítiˇti⁄_Re•⁄£
(
BluëoŸhSèckID
, 
Authítiˇti⁄_Evít_D©a
->
BD_ADDR
, &
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
)) != 0)

3194 
	`Di•œyFun˘i⁄Eº‹
("q≠i_BLE_GAP_LE_Authítiˇti⁄_Re•⁄£", 
Resu…
);

3197 
QAPI_BLE_LAT_EXTENDED_PAIRING_REQUEST_E
:

3198 
	`LOG_INFO
("Exãnded Paúög Reque°: %s.\n", 
BﬂrdSå
);

3199 
	`Di•œyPaúögInf‹m©i⁄
(&(
Authítiˇti⁄_Evít_D©a
->Authítiˇti⁄_Evít_D©a.
Exãnded_Paúög_Reque°
));

3201 if(
	`QAPI_BLE_COMPARE_NULL_BD_ADDR
(
SecurôyRemŸeBD_ADDR
))

3203 
SecurôyRemŸeBD_ADDR
 = 
Authítiˇti⁄_Evít_D©a
->
BD_ADDR
;

3204 
	`SœvePaúögReque°Re•⁄£
(
Authítiˇti⁄_Evít_D©a
->
BD_ADDR
);

3208 
	`LOG_WARN
("\nSecurity isálready inÖrogress withánotherÑemote device.\n");

3210 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
GAP_LE_Authítiˇti⁄_Ty≥
 = 
QAPI_BLE_LAR_ERROR_E
;

3211 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
Authítiˇti⁄_D©a_Lígth
 = 0;

3213 if((
Resu…
 = 
	`q≠i_BLE_GAP_LE_Authítiˇti⁄_Re•⁄£
(
BluëoŸhSèckID
, 
Authítiˇti⁄_Evít_D©a
->
BD_ADDR
, &
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
)) != 0)

3214 
	`Di•œyFun˘i⁄Eº‹
("q≠i_BLE_GAP_LE_Authítiˇti⁄_Re•⁄£", 
Resu…
);

3217 
QAPI_BLE_LAT_CONFIRMATION_REQUEST_E
:

3218 
	`LOG_VERBOSE
("latConfirmationRequest.\n");

3220 
Authítiˇti⁄_Evít_D©a
->Authítiˇti⁄_Evít_D©a.
C⁄fúm©i⁄_Reque°
.
Reque°_Ty≥
)

3222 
QAPI_BLE_CRT_NONE_E
:

3223 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
GAP_LE_Authítiˇti⁄_Ty≥
 = 
QAPI_BLE_LAR_CONFIRMATION_E
;

3225 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
Authítiˇti⁄_D©a_Lígth
 = (
uöt32_t
);

3227 
LE_P¨amëîs
.
IOC≠abûôy
)

3229 
QAPI_BLE_LIC_NO_INPUT_NO_OUTPUT_E
:

3230 
	`LOG_VERBOSE
("Invoking Just Works.\n");

3232 
Resu…
 = 
	`q≠i_BLE_GAP_LE_Authítiˇti⁄_Re•⁄£
(
BluëoŸhSèckID
, 
Authítiˇti⁄_Evít_D©a
->
BD_ADDR
, &
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
);

3233 if(
Resu…
)

3235 
	`LOG_VERBOSE
("q≠i_BLE_GAP_LE_Authítiˇti⁄_Re•⁄£Ñëu∫ed %d.\n", 
Resu…
);

3238 
QAPI_BLE_LIC_DISPLAY_ONLY_E
:

3239 
	`LOG_VERBOSE
("Confirmation of Pairing.\n");

3241 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
Authítiˇti⁄_D©a
.
Passkey
 = 
Authítiˇti⁄_Evít_D©a
->Authítiˇti⁄_Evít_D©a.
C⁄fúm©i⁄_Reque°
.
Di•œy_Passkey
;

3243 if((
Resu…
 = 
	`q≠i_BLE_GAP_LE_Authítiˇti⁄_Re•⁄£
(
BluëoŸhSèckID
, 
Authítiˇti⁄_Evít_D©a
->
BD_ADDR
, &
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
)) != 0)

3244 
	`Di•œyFun˘i⁄Eº‹
("q≠i_BLE_GAP_LE_Authítiˇti⁄_Re•⁄£", 
Resu…
);

3247 
	`LOG_INFO
("Confirmation of Pairing.\n");

3249 if((
Resu…
 = 
	`q≠i_BLE_GAP_LE_Authítiˇti⁄_Re•⁄£
(
BluëoŸhSèckID
, 
Authítiˇti⁄_Evít_D©a
->
BD_ADDR
, &
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
)) != 0)

3250 
	`Di•œyFun˘i⁄Eº‹
("q≠i_BLE_GAP_LE_Authítiˇti⁄_Re•⁄£", 
Resu…
);

3254 
QAPI_BLE_CRT_PASSKEY_E
:

3255 
	`LOG_VERBOSE
("Call LEPasskeyResponse [PASSCODE].\n");

3257 
QAPI_BLE_CRT_DISPLAY_E
:

3258 
	`LOG_INFO
("Passkey: %06u.\n", ()(
Authítiˇti⁄_Evít_D©a
->Authítiˇti⁄_Evít_D©a.
C⁄fúm©i⁄_Reque°
.
Di•œy_Passkey
));

3261 
	`LOG_VERBOSE
("Authentication methodÇot supported.\n");

3265 
QAPI_BLE_LAT_EXTENDED_CONFIRMATION_REQUEST_E
:

3266 
	`LOG_VERBOSE
("latExtendedConfirmationRequest.\n");

3268 
	`LOG_VERBOSE
(" Secuª C⁄√˘i⁄s: %s.\n", (
Authítiˇti⁄_Evít_D©a
->Authítiˇti⁄_Evít_D©a.
Exãnded_C⁄fúm©i⁄_Reque°
.
Fœgs
 & 
QAPI_BLE_GAP_LE_EXTENDED_CONFIRMATION_REQUEST_FLAGS_SECURE_CONNECTIONS
)?"YES":"NO");

3269 
	`LOG_VERBOSE
(" Ju° W‹k†Paúög: %s.\n", (
Authítiˇti⁄_Evít_D©a
->Authítiˇti⁄_Evít_D©a.
Exãnded_C⁄fúm©i⁄_Reque°
.
Fœgs
 & 
QAPI_BLE_GAP_LE_EXTENDED_CONFIRMATION_REQUEST_FLAGS_JUST_WORKS_PAIRING
)?"YES":"NO");

3270 
	`LOG_VERBOSE
(" Key¥es†NŸifiˇti⁄s: %s.\n", (
Authítiˇti⁄_Evít_D©a
->Authítiˇti⁄_Evít_D©a.
Exãnded_C⁄fúm©i⁄_Reque°
.
Fœgs
 & 
QAPI_BLE_GAP_LE_EXTENDED_CONFIRMATION_REQUEST_FLAGS_KEYPRESS_NOTIFICATIONS_REQUESTED
)?"YES":"NO");

3272 
Authítiˇti⁄_Evít_D©a
->Authítiˇti⁄_Evít_D©a.
Exãnded_C⁄fúm©i⁄_Reque°
.
Reque°_Ty≥
)

3274 
QAPI_BLE_CRT_NONE_E
:

3275 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
GAP_LE_Authítiˇti⁄_Ty≥
 = 
QAPI_BLE_LAR_CONFIRMATION_E
;

3277 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
Authítiˇti⁄_D©a_Lígth
 = (
uöt32_t
);

3279 
LE_P¨amëîs
.
IOC≠abûôy
)

3281 
QAPI_BLE_LIC_NO_INPUT_NO_OUTPUT_E
:

3282 
	`LOG_VERBOSE
("Invoking Just Works.\n");

3284 
Resu…
 = 
	`q≠i_BLE_GAP_LE_Authítiˇti⁄_Re•⁄£
(
BluëoŸhSèckID
, 
Authítiˇti⁄_Evít_D©a
->
BD_ADDR
, &
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
);

3285 if(
Resu…
)

3287 
	`LOG_VERBOSE
("q≠i_BLE_GAP_LE_Authítiˇti⁄_Re•⁄£Ñëu∫ed %d.\n", 
Resu…
);

3290 
QAPI_BLE_LIC_DISPLAY_ONLY_E
:

3291 
	`LOG_VERBOSE
("Confirmation of Pairing.\n");

3293 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
Authítiˇti⁄_D©a
.
Passkey
 = 
Authítiˇti⁄_Evít_D©a
->Authítiˇti⁄_Evít_D©a.
C⁄fúm©i⁄_Reque°
.
Di•œy_Passkey
;

3295 if((
Resu…
 = 
	`q≠i_BLE_GAP_LE_Authítiˇti⁄_Re•⁄£
(
BluëoŸhSèckID
, 
Authítiˇti⁄_Evít_D©a
->
BD_ADDR
, &
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
)) != 0)

3296 
	`Di•œyFun˘i⁄Eº‹
("q≠i_BLE_GAP_LE_Authítiˇti⁄_Re•⁄£", 
Resu…
);

3299 
	`LOG_VERBOSE
("Confirmation of Pairing.\n");

3301 if((
Resu…
 = 
	`q≠i_BLE_GAP_LE_Authítiˇti⁄_Re•⁄£
(
BluëoŸhSèckID
, 
Authítiˇti⁄_Evít_D©a
->
BD_ADDR
, &
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
)) != 0)

3302 
	`Di•œyFun˘i⁄Eº‹
("q≠i_BLE_GAP_LE_Authítiˇti⁄_Re•⁄£", 
Resu…
);

3306 
QAPI_BLE_CRT_PASSKEY_E
:

3307 
	`LOG_VERBOSE
("Call LEPasskeyResponse [PASSKEY].\n");

3309 
QAPI_BLE_CRT_DISPLAY_E
:

3310 
	`LOG_INFO
("Passkey: %06u.\n", 
Authítiˇti⁄_Evít_D©a
->Authítiˇti⁄_Evít_D©a.
Exãnded_C⁄fúm©i⁄_Reque°
.
Di•œy_Passkey
);

3312 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
GAP_LE_Authítiˇti⁄_Ty≥
 = 
QAPI_BLE_LAR_PASSKEY_E
;

3313 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
Authítiˇti⁄_D©a_Lígth
 = (
uöt8_t
)((
uöt32_t
));

3314 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
Authítiˇti⁄_D©a
.
Passkey
 = 
Authítiˇti⁄_Evít_D©a
->Authítiˇti⁄_Evít_D©a.
Exãnded_C⁄fúm©i⁄_Reque°
.
Di•œy_Passkey
;

3316 if((
Resu…
 = 
	`q≠i_BLE_GAP_LE_Authítiˇti⁄_Re•⁄£
(
BluëoŸhSèckID
, 
Authítiˇti⁄_Evít_D©a
->
BD_ADDR
, &
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
)) != 0)

3317 
	`Di•œyFun˘i⁄Eº‹
("q≠i_BLE_GAP_LE_Authítiˇti⁄_Re•⁄£", 
Resu…
);

3319 
QAPI_BLE_CRT_DISPLAY_YES_NO_E
:

3320 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
GAP_LE_Authítiˇti⁄_Ty≥
 = 
QAPI_BLE_LAR_CONFIRMATION_E
;

3322 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
Authítiˇti⁄_D©a_Lígth
 = (
uöt32_t
);

3324 if(
Authítiˇti⁄_Evít_D©a
->Authítiˇti⁄_Evít_D©a.
Exãnded_C⁄fúm©i⁄_Reque°
.
Fœgs
 & 
QAPI_BLE_GAP_LE_EXTENDED_CONFIRMATION_REQUEST_FLAGS_JUST_WORKS_PAIRING
)

3326 
LE_P¨amëîs
.
IOC≠abûôy
)

3328 
QAPI_BLE_LIC_NO_INPUT_NO_OUTPUT_E
:

3329 
	`LOG_VERBOSE
("Invoking Just Works.\n");

3331 
Resu…
 = 
	`q≠i_BLE_GAP_LE_Authítiˇti⁄_Re•⁄£
(
BluëoŸhSèckID
, 
Authítiˇti⁄_Evít_D©a
->
BD_ADDR
, &
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
);

3332 if(
Resu…
)

3334 
	`LOG_VERBOSE
("q≠i_BLE_GAP_LE_Authítiˇti⁄_Re•⁄£Ñëu∫ed %d.\n", 
Resu…
);

3337 
QAPI_BLE_LIC_DISPLAY_ONLY_E
:

3338 
	`LOG_VERBOSE
("Confirmation of Pairing.\n");

3340 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
Authítiˇti⁄_D©a
.
Passkey
 = 
Authítiˇti⁄_Evít_D©a
->Authítiˇti⁄_Evít_D©a.
C⁄fúm©i⁄_Reque°
.
Di•œy_Passkey
;

3342 if((
Resu…
 = 
	`q≠i_BLE_GAP_LE_Authítiˇti⁄_Re•⁄£
(
BluëoŸhSèckID
, 
Authítiˇti⁄_Evít_D©a
->
BD_ADDR
, &
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
)) != 0)

3343 
	`Di•œyFun˘i⁄Eº‹
("q≠i_BLE_GAP_LE_Authítiˇti⁄_Re•⁄£", 
Resu…
);

3346 
	`LOG_VERBOSE
("Confirmation of Pairing.\n");

3348 if((
Resu…
 = 
	`q≠i_BLE_GAP_LE_Authítiˇti⁄_Re•⁄£
(
BluëoŸhSèckID
, 
Authítiˇti⁄_Evít_D©a
->
BD_ADDR
, &
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
)) != 0)

3349 
	`Di•œyFun˘i⁄Eº‹
("q≠i_BLE_GAP_LE_Authítiˇti⁄_Re•⁄£", 
Resu…
);

3355 
	`LOG_INFO
("C⁄fúm©i⁄ VÆue: %ld\n", ()
Authítiˇti⁄_Evít_D©a
->Authítiˇti⁄_Evít_D©a.
Exãnded_C⁄fúm©i⁄_Reque°
.
Di•œy_Passkey
);

3357 if((
Resu…
 = 
	`q≠i_BLE_GAP_LE_Authítiˇti⁄_Re•⁄£
(
BluëoŸhSèckID
, 
Authítiˇti⁄_Evít_D©a
->
BD_ADDR
, &
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
)) != 0)

3358 
	`Di•œyFun˘i⁄Eº‹
("q≠i_BLE_GAP_LE_Authítiˇti⁄_Re•⁄£", 
Resu…
);

3362 
QAPI_BLE_CRT_OOB_SECURE_CONNECTIONS_E
:

3363 
	`LOG_VERBOSE
("OOB Data Request.\n");

3365 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
GAP_LE_Authítiˇti⁄_Ty≥
 = 
QAPI_BLE_LAR_OUT_OF_BAND_DATA_E
;

3366 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
Authítiˇti⁄_D©a_Lígth
 = 
QAPI_BLE_GAP_LE_SECURE_CONNECTIONS_OOB_DATA_SIZE
;

3367 if(
RemŸeOOBVÆid
)

3369 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
Authítiˇti⁄_D©a
.
Secuª_C⁄√˘i⁄s_OOB_D©a
.
Fœgs
 = 0;

3370 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
Authítiˇti⁄_D©a
.
Secuª_C⁄√˘i⁄s_OOB_D©a
.
C⁄fúm©i⁄
 = 
RemŸeOOBC⁄fúm©i⁄
;

3371 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
Authítiˇti⁄_D©a
.
Secuª_C⁄√˘i⁄s_OOB_D©a
.
R™domizî
 = 
RemŸeOOBR™domizî
;

3374 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
Authítiˇti⁄_D©a
.
Secuª_C⁄√˘i⁄s_OOB_D©a
.
Fœgs
 = 
QAPI_BLE_GAP_LE_SECURE_CONNECTIONS_OOB_DATA_FLAGS_OOB_NOT_RECEIVED
;

3376 if((
Resu…
 = 
	`q≠i_BLE_GAP_LE_Authítiˇti⁄_Re•⁄£
(
BluëoŸhSèckID
, 
Authítiˇti⁄_Evít_D©a
->
BD_ADDR
, &
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
)) != 0)

3377 
	`Di•œyFun˘i⁄Eº‹
("q≠i_BLE_GAP_LE_Authítiˇti⁄_Re•⁄£", 
Resu…
);

3380 
	`LOG_ERROR
("Authentication methodÇot supported.\n");

3384 
QAPI_BLE_LAT_SECURITY_ESTABLISHMENT_COMPLETE_E
:

3385 
	`LOG_VERBOSE
("Securôy Re-E°ablishmíàCom∂ëe: %s.\n", 
BﬂrdSå
);

3386 
	`LOG_VERBOSE
(" Sètus: 0x%02X.\n", 
Authítiˇti⁄_Evít_D©a
->Authítiˇti⁄_Evít_D©a.
Securôy_E°ablishmít_Com∂ëe
.
Sètus
);

3388 if(
Authítiˇti⁄_Evít_D©a
->Authítiˇti⁄_Evít_D©a.
Securôy_E°ablishmít_Com∂ëe
.
Sètus
 =
QAPI_BLE_GAP_LE_SECURITY_ESTABLISHMENT_STATUS_CODE_LONG_TERM_KEY_ERROR
)

3390 if((
Devi˚Info
 = 
	`SórchDevi˚InfoE¡ryByBD_ADDR
(&
Devi˚InfoLi°
, 
Authítiˇti⁄_Evít_D©a
->
BD_ADDR
)Ë!
NULL
)

3392 
Devi˚Info
->
Fœgs
 &~
DEVICE_INFO_FLAGS_LTK_VALID
;

3396 
	`QAPI_BLE_ASSIGN_BD_ADDR
(
SecurôyRemŸeBD_ADDR
, 0, 0, 0, 0, 0, 0);

3398 
QAPI_BLE_LAT_PAIRING_STATUS_E
:

3399 
	`LOG_VERBOSE
("Paúög Sètus: %s.\n", 
BﬂrdSå
);

3400 
	`LOG_VERBOSE
(" Sètus: 0x%02X.\n", 
Authítiˇti⁄_Evít_D©a
->Authítiˇti⁄_Evít_D©a.
Paúög_Sètus
.
Sètus
);

3402 if(
Authítiˇti⁄_Evít_D©a
->Authítiˇti⁄_Evít_D©a.
Paúög_Sètus
.
Sètus
 =
QAPI_BLE_GAP_LE_PAIRING_STATUS_NO_ERROR
)

3404 
	`LOG_VERBOSE
(" Key Size: %d.\n", 
Authítiˇti⁄_Evít_D©a
->Authítiˇti⁄_Evít_D©a.
Paúög_Sètus
.
NegŸüãd_En¸y±i⁄_Key_Size
);

3408 
	`q≠i_BLE_GAP_LE_Disc⁄√˘
(
BluëoŸhSèckID
, 
Authítiˇti⁄_Evít_D©a
->
BD_ADDR
);

3411 
	`QAPI_BLE_ASSIGN_BD_ADDR
(
SecurôyRemŸeBD_ADDR
, 0, 0, 0, 0, 0, 0);

3413 
QAPI_BLE_LAT_ENCRYPTION_INFORMATION_REQUEST_E
:

3414 
	`LOG_VERBOSE
("En¸y±i⁄ Inf‹m©i⁄ Reque° %s.\n", 
BﬂrdSå
);

3416 
QAPI_BLE_LAT_IDENTITY_INFORMATION_REQUEST_E
:

3417 
	`LOG_VERBOSE
("Idítôy Inf‹m©i⁄ Reque° %s.\n", 
BﬂrdSå
);

3419 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
GAP_LE_Authítiˇti⁄_Ty≥
 = 
QAPI_BLE_LAR_IDENTITY_INFORMATION_E
;

3420 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
Authítiˇti⁄_D©a_Lígth
 = (
uöt8_t
)
QAPI_BLE_GAP_LE_IDENTITY_INFORMATION_DATA_SIZE
;

3421 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
Authítiˇti⁄_D©a
.
Idítôy_Inf‹m©i⁄
.
Addªss
 = 
LoˇlBD_ADDR
;

3422 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
Authítiˇti⁄_D©a
.
Idítôy_Inf‹m©i⁄
.
Addªss_Ty≥
 = 
QAPI_BLE_LAT_PUBLIC_IDENTITY_E
;

3423 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
Authítiˇti⁄_D©a
.
Idítôy_Inf‹m©i⁄
.
IRK
 = IRK;

3425 
Resu…
 = 
	`q≠i_BLE_GAP_LE_Authítiˇti⁄_Re•⁄£
(
BluëoŸhSèckID
, 
Authítiˇti⁄_Evít_D©a
->
BD_ADDR
, &
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
);

3426 if(!
Resu…
)

3428 
	`LOG_INFO
(" qapi_BLE_GAP_LE_Authentication_Response (larEncryptionInformation) success.\n");

3432 
	`LOG_ERROR
(" Eº‹ - SM_Gíî©e_L⁄g_Tîm_KeyÑëu∫ed %d.\n", 
Resu…
);

3435 
QAPI_BLE_LAT_ENCRYPTION_INFORMATION_E
:

3436 
	`LOG_VERBOSE
(" En¸y±i⁄ Inf‹m©i⁄ from RemŸeDevi˚: %s.\n", 
BﬂrdSå
);

3437 
	`LOG_VERBOSE
(" Key Size: %d.\n", 
Authítiˇti⁄_Evít_D©a
->Authítiˇti⁄_Evít_D©a.
En¸y±i⁄_Inf‹m©i⁄
.
En¸y±i⁄_Key_Size
);

3439 if((
Devi˚Info
 = 
	`SórchDevi˚InfoE¡ryByBD_ADDR
(&
Devi˚InfoLi°
, 
Authítiˇti⁄_Evít_D©a
->
BD_ADDR
)Ë!
NULL
)

3441 
	`mem˝y
(&(
Devi˚Info
->
LTK
), &(
Authítiˇti⁄_Evít_D©a
->Authítiˇti⁄_Evít_D©a.
En¸y±i⁄_Inf‹m©i⁄
.LTK), (DeviceInfo->LTK));

3442 
Devi˚Info
->
EDIV
 = 
Authítiˇti⁄_Evít_D©a
->Authítiˇti⁄_Evít_D©a.
En¸y±i⁄_Inf‹m©i⁄
.EDIV;

3443 
	`mem˝y
(&(
Devi˚Info
->
R™d
), &(
Authítiˇti⁄_Evít_D©a
->Authítiˇti⁄_Evít_D©a.
En¸y±i⁄_Inf‹m©i⁄
.Rand), (DeviceInfo->Rand));

3444 
Devi˚Info
->
En¸y±i⁄KeySize
 = 
Authítiˇti⁄_Evít_D©a
->Authítiˇti⁄_Evít_D©a.
En¸y±i⁄_Inf‹m©i⁄
.
En¸y±i⁄_Key_Size
;

3445 
Devi˚Info
->
Fœgs
 |
DEVICE_INFO_FLAGS_LTK_VALID
;

3449 
	`LOG_ERROR
("No Key Info Entry forÅhis device.\n");

3452 
QAPI_BLE_LAT_IDENTITY_INFORMATION_E
:

3453 
	`LOG_VERBOSE
(" Idítôy Inf‹m©i⁄ from RemŸeDevi˚: %s.\n", 
BﬂrdSå
);

3455 if((
Devi˚Info
 = 
	`SórchDevi˚InfoE¡ryByBD_ADDR
(&
Devi˚InfoLi°
, 
Authítiˇti⁄_Evít_D©a
->
BD_ADDR
)Ë!
NULL
)

3457 
	`mem˝y
(&(
Devi˚Info
->
IRK
), &(
Authítiˇti⁄_Evít_D©a
->Authítiˇti⁄_Evít_D©a.
Idítôy_Inf‹m©i⁄
.IRK), (DeviceInfo->IRK));

3458 
Devi˚Info
->
IdítôyAddªssBD_ADDR
 = 
Authítiˇti⁄_Evít_D©a
->Authítiˇti⁄_Evít_D©a.
Idítôy_Inf‹m©i⁄
.
Addªss
;

3459 
Devi˚Info
->
IdítôyAddªssTy≥
 = 
Authítiˇti⁄_Evít_D©a
->Authítiˇti⁄_Evít_D©a.
Idítôy_Inf‹m©i⁄
.
Addªss_Ty≥
;

3460 
Devi˚Info
->
Fœgs
 |
DEVICE_INFO_FLAGS_IRK_VALID
;

3462 
Devi˚Info
->
ResﬁvögLi°E¡ry
.
Pìr_Idítôy_Addªss
 = Devi˚Info->
IdítôyAddªssBD_ADDR
;

3463 
Devi˚Info
->
ResﬁvögLi°E¡ry
.
Pìr_Idítôy_Addªss_Ty≥
 = Devi˚Info->
IdítôyAddªssTy≥
;

3464 
Devi˚Info
->
ResﬁvögLi°E¡ry
.
Pìr_IRK
 = Devi˚Info->
IRK
;

3465 
Devi˚Info
->
ResﬁvögLi°E¡ry
.
Loˇl_IRK
 = 
IRK
;

3469 
	`LOG_ERROR
("No Key Info Entry forÅhis device.\n");

3473 
	`LOG_VERBOSE
("Unh™dÀdÉvít: %u\n", 
Authítiˇti⁄_Evít_D©a
->
GAP_LE_Authítiˇti⁄_Evít_Ty≥
);

3478 
QAPI_BLE_ET_LE_DIRECT_ADVERTISING_REPORT_E
:

3479 
	`LOG_INFO
("ëLE_Dúe˘_Advîtisög_Rï‹àwôh sizê%d.\n", ()
GAP_LE_Evít_D©a
->
Evít_D©a_Size
);

3480 
	`LOG_VERBOSE
(" %d Re•⁄£s.\n", 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_Dúe˘_Advîtisög_Rï‹t_Evít_D©a
->
Numbî_Devi˚_E¡rõs
);

3482 
Index
 = 0; Index < 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_Dúe˘_Advîtisög_Rï‹t_Evít_D©a
->
Numbî_Devi˚_E¡rõs
; Index++)

3484 
Dúe˘Devi˚E¡ryPå
 = &(
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_Dúe˘_Advîtisög_Rï‹t_Evít_D©a
->
Dúe˘_Advîtisög_D©a
[
Index
]);

3486 
Dúe˘Devi˚E¡ryPå
->
Addªss_Ty≥
)

3488 
QAPI_BLE_LAT_PUBLIC_E
:

3489 
	`LOG_VERBOSE
(" Address Type: %s.\n", "QAPI_BLE_LAT_PUBLIC_E");

3491 
QAPI_BLE_LAT_RANDOM_E
:

3492 
	`LOG_VERBOSE
(" Address Type: %s.\n", "QAPI_BLE_LAT_RANDOM_E");

3494 
QAPI_BLE_LAT_PUBLIC_IDENTITY_E
:

3495 
	`LOG_VERBOSE
(" Address Type: %s.\n", "QAPI_BLE_LAT_PUBLIC_IDENTITY_E");

3497 
QAPI_BLE_LAT_RANDOM_IDENTITY_E
:

3498 
	`LOG_VERBOSE
(" Address Type: %s.\n", "QAPI_BLE_LAT_RANDOM_IDENTITY_E");

3501 
	`LOG_VERBOSE
(" Address Type: Invalid.\n");

3505 
	`LOG_VERBOSE
(" Addªss: 0x%02X%02X%02X%02X%02X%02X.\n", 
Dúe˘Devi˚E¡ryPå
->
BD_ADDR
.
BD_ADDR5
, Dúe˘Devi˚E¡ryPå->BD_ADDR.
BD_ADDR4
, Dúe˘Devi˚E¡ryPå->BD_ADDR.
BD_ADDR3
, Dúe˘Devi˚E¡ryPå->BD_ADDR.
BD_ADDR2
, Dúe˘Devi˚E¡ryPå->BD_ADDR.
BD_ADDR1
, Dúe˘Devi˚E¡ryPå->BD_ADDR.
BD_ADDR0
);

3506 
	`LOG_VERBOSE
(" RSSI: %d.\n", ()(
Dúe˘Devi˚E¡ryPå
->
RSSI
));

3510 
Di•œyProm±
 = 
Ál£
;

3514 if(
Di•œyProm±
)

3515 
	`QCLI_Di•œy_Prom±
();

3517 
	}
}

3524 
	$Advîti£LE
(
uöt32_t
 
íabÀ
)

3526 
Resu…
;

3527 
ªt_vÆ
;

3528 
Lígth
;

3529 
UUIDIndex
;

3530 
Name
[
QAPI_BLE_GAP_MAXIMUM_DEVICE_NAME_LENGTH
+1];

3531 
NameLígth
;

3532 
uöt16_t
 
Devi˚Aµóøn˚
;

3533 
q≠i_BLE_GAP_LE_C⁄√˘abûôy_P¨amëîs_t
 
C⁄√˘abûôyP¨amëîs
;

3536 
q≠i_BLE_Advîtisög_D©a_t
 
AdvîtisögD©a
;

3537 
q≠i_BLE_Sˇn_Re•⁄£_D©a_t
 
SˇnRe•⁄£D©a
;

3538 } 
Advîti£mít_D©a_Buf„r
;

3542 i‡(
BluëoŸhSèckID
)

3546 #i‚de‡
V1


3547 i‡((
íabÀ
 >
AET_DISABLE_E
Ë&& (íabÀ <
AET_ENABLE_CHANNEL_39_E
))

3549 i‡((
íabÀ
 >= 0) && (enable <= 1))

3553 #i‚de‡
V1


3554 i‡(
íabÀ
 == 0)

3556 i‡(
íabÀ
 =
AET_DISABLE_E
)

3560 
Resu…
 = 
	`q≠i_BLE_GAP_LE_Advîtisög_DißbÀ
(
BluëoŸhSèckID
);

3561 if(!
Resu…
)

3563 
	`LOG_INFO
(" GAP_LE_Advertising_Disable success.\n");

3565 
ªt_vÆ
 = 
QCLI_STATUS_SUCCESS_E
;

3569 
	`LOG_ERROR
(" GAP_LE_Advîtisög_DißbÀÑëu∫ed %d.\n", 
Resu…
);

3571 
ªt_vÆ
 = 
QCLI_STATUS_ERROR_E
;

3577 
	`mem£t
(&(
Advîti£mít_D©a_Buf„r
.
AdvîtisögD©a
), 0, (
q≠i_BLE_Advîtisög_D©a_t
));

3580 
Lígth
 = 0;

3583 
Advîti£mít_D©a_Buf„r
.
AdvîtisögD©a
.
Advîtisög_D©a
[
Lígth
] = 2;

3584 
Advîti£mít_D©a_Buf„r
.
AdvîtisögD©a
.
Advîtisög_D©a
[
Lígth
+1] = 
QAPI_BLE_HCI_LE_ADVERTISING_REPORT_DATA_TYPE_FLAGS
;

3585 
Advîti£mít_D©a_Buf„r
.
AdvîtisögD©a
.
Advîtisög_D©a
[
Lígth
+2] = 0;

3589 if(
LE_P¨amëîs
.
DiscovîabûôyMode
 =
QAPI_BLE_DM_GENERAL_DISCOVERABLE_MODE_E
)

3590 
Advîti£mít_D©a_Buf„r
.
AdvîtisögD©a
.
Advîtisög_D©a
[
Lígth
+2] = 
QAPI_BLE_HCI_LE_ADVERTISING_FLAGS_GENERAL_DISCOVERABLE_MODE_FLAGS_BIT_MASK
;

3593 if(
LE_P¨amëîs
.
DiscovîabûôyMode
 =
QAPI_BLE_DM_LIMITED_DISCOVERABLE_MODE_E
)

3594 
Advîti£mít_D©a_Buf„r
.
AdvîtisögD©a
.
Advîtisög_D©a
[
Lígth
+2] = 
QAPI_BLE_HCI_LE_ADVERTISING_FLAGS_LIMITED_DISCOVERABLE_MODE_FLAGS_BIT_MASK
;

3597 
Advîti£mít_D©a_Buf„r
.
AdvîtisögD©a
.
Advîtisög_D©a
[
Lígth
 + 2] |
QAPI_BLE_HCI_LE_ADVERTISING_FLAGS_BR_EDR_NOT_SUPPORTED_FLAGS_BIT_MASK
;

3602 
Lígth
 +(
Advîti£mít_D©a_Buf„r
.
AdvîtisögD©a
.
Advîtisög_D©a
[Length] + 1);

3605 if((
Resu…
 = 
	`q≠i_BLE_GAPS_Quîy_Devi˚_Aµóøn˚
(
BluëoŸhSèckID
, (
uöt32_t
)
GAPSIn°™˚ID
, &
Devi˚Aµóøn˚
)) == 0)

3608 if((
Lígth
 + ()
QAPI_BLE_NON_ALIGNED_WORD_SIZE
 + 2Ë<()
QAPI_BLE_ADVERTISING_DATA_MAXIMUM_SIZE
)

3610 ((
uöt8_t
 *)&
Advîti£mít_D©a_Buf„r
.
AdvîtisögD©a
)[
Lígth
] = 3;

3611 ((
uöt8_t
 *)&
Advîti£mít_D©a_Buf„r
.
AdvîtisögD©a
)[
Lígth
+1] = 
QAPI_BLE_HCI_LE_ADVERTISING_REPORT_DATA_TYPE_APPEARANCE
;

3612 
	`ASSIGN_HOST_WORD_TO_LITTLE_ENDIAN_UNALIGNED_WORD
(&(((
uöt8_t
 *)&
Advîti£mít_D©a_Buf„r
.
AdvîtisögD©a
)[
Lígth
+2]), 
Devi˚Aµóøn˚
);

3617 
Lígth
 +(((
uöt8_t
 *)&
Advîti£mít_D©a_Buf„r
.
AdvîtisögD©a
)[Length] + 1);

3620 
	`LOG_WARN
(" Thêdevi˚áµóøn˚ CANNOT fô i¿thêadvîtisög d©a.\n", 
Resu…
);

3623 
	`LOG_ERROR
(" q≠i_BLE_GAPS_Quîy_Devi˚_Aµóøn˚(dtAdvîtisögËªtu∫ed %d.\n", 
Resu…
);

3632 if((
Lígth
 + ()
QAPI_BLE_UUID_16_SIZE
 + 2Ë<()
QAPI_BLE_ADVERTISING_DATA_MAXIMUM_SIZE
)

3634 ((
uöt8_t
 *)&
Advîti£mít_D©a_Buf„r
.
AdvîtisögD©a
)[
Lígth
] = 1;

3635 ((
uöt8_t
 *)&
Advîti£mít_D©a_Buf„r
.
AdvîtisögD©a
)[
Lígth
+1] = 
QAPI_BLE_HCI_LE_ADVERTISING_REPORT_DATA_TYPE_16_BIT_SERVICE_UUID_COMPLETE
;

3640 
UUIDIndex
 = (
Lígth
 + 2);

3643 if(
DISIn°™˚ID
)

3649 if((
Lígth
 + ((
uöt8_t
 *)&
Advîti£mít_D©a_Buf„r
.
AdvîtisögD©a
)[Lígth] + 1 + 
QAPI_BLE_UUID_16_SIZE
Ë<()
QAPI_BLE_ADVERTISING_DATA_MAXIMUM_SIZE
)

3652 
	`QAPI_BLE_DIS_ASSIGN_DIS_SERVICE_UUID_16
(&(((
uöt8_t
 *)&
Advîti£mít_D©a_Buf„r
.
AdvîtisögD©a
)[
UUIDIndex
]));

3655 
UUIDIndex
 +
QAPI_BLE_UUID_16_SIZE
;

3659 ((
uöt8_t
 *)&
Advîti£mít_D©a_Buf„r
.
AdvîtisögD©a
)[
Lígth
] +
QAPI_BLE_UUID_16_SIZE
;

3660 #ifde‡
OFFLINE


3661 
	#QAPI_BLE_DIS_ASSIGN_OFFLINE_SERVICE_UUID_16
(
_x
Ë
	`QAPI_BLE_ASSIGN_BLUETOOTH_UUID_16
(*((
q≠i_BLE_UUID_16_t
 *)(_x)), 0x18, 0x18)

	)

3663 
	`QAPI_BLE_DIS_ASSIGN_OFFLINE_SERVICE_UUID_16
(&(((
uöt8_t
 *)&
Advîti£mít_D©a_Buf„r
.
AdvîtisögD©a
)[
UUIDIndex
]));

3666 
UUIDIndex
 +
QAPI_BLE_UUID_16_SIZE
;

3670 ((
uöt8_t
 *)&
Advîti£mít_D©a_Buf„r
.
AdvîtisögD©a
)[
Lígth
] +
QAPI_BLE_UUID_16_SIZE
;

3678 ((
uöt8_t
 *)&
Advîti£mít_D©a_Buf„r
.
AdvîtisögD©a
)[
Lígth
 + 1] = 
QAPI_BLE_HCI_LE_ADVERTISING_REPORT_DATA_TYPE_16_BIT_SERVICE_UUID_PARTIAL
;

3685 
Lígth
 +(((
uöt8_t
 *)&
Advîti£mít_D©a_Buf„r
.
AdvîtisögD©a
)[Length] + 1);

3688 
	`LOG_WARN
(" The 16-bit service UUID's CANNOT fit inÅheádvertising data.\n");

3691 
Resu…
 = 
	`q≠i_BLE_GAP_LE_Së_Advîtisög_D©a
(
BluëoŸhSèckID
, 
Lígth
, &(
Advîti£mít_D©a_Buf„r
.
AdvîtisögD©a
));

3692 if(!
Resu…
)

3695 
	`mem£t
(&(
Advîti£mít_D©a_Buf„r
.
SˇnRe•⁄£D©a
), 0, (
q≠i_BLE_Sˇn_Re•⁄£_D©a_t
));

3698 
Lígth
 = 0;

3701 if((
Resu…
 = 
	`q≠i_BLE_GAPS_Quîy_Devi˚_Name
(
BluëoŸhSèckID
, (
uöt32_t
)
GAPSIn°™˚ID
, 
Name
)) == 0)

3704 
NameLígth
 = 
	`°æí
(
Name
);

3707 if(
NameLígth
 < (()
QAPI_BLE_SCAN_RESPONSE_DATA_MAXIMUM_SIZE
 - 2))

3711 ((
uöt8_t
 *)&
Advîti£mít_D©a_Buf„r
.
SˇnRe•⁄£D©a
)[
Lígth
] = (uöt8_t)(1 + 
NameLígth
);

3712 ((
uöt8_t
 *)&
Advîti£mít_D©a_Buf„r
.
SˇnRe•⁄£D©a
)[
Lígth
 + 1] = 
QAPI_BLE_HCI_LE_ADVERTISING_REPORT_DATA_TYPE_LOCAL_NAME_COMPLETE
;

3718 
NameLígth
 = (()
QAPI_BLE_SCAN_RESPONSE_DATA_MAXIMUM_SIZE
 - 2);

3719 ((
uöt8_t
 *)&
Advîti£mít_D©a_Buf„r
.
SˇnRe•⁄£D©a
)[
Lígth
] = (uöt8_t)(1 + 
NameLígth
);

3720 ((
uöt8_t
 *)&
Advîti£mít_D©a_Buf„r
.
SˇnRe•⁄£D©a
)[
Lígth
 + 1] = 
QAPI_BLE_HCI_LE_ADVERTISING_REPORT_DATA_TYPE_LOCAL_NAME_SHORTENED
;

3725 if((
Lígth
 + 
NameLígth
 + 2Ë<()(
QAPI_BLE_SCAN_RESPONSE_DATA_MAXIMUM_SIZE
 - 2))

3729 
	`mem˝y
(&(((
uöt8_t
 *)&
Advîti£mít_D©a_Buf„r
.
SˇnRe•⁄£D©a
)[
Lígth
 + 2]), 
Name
, 
NameLígth
);

3736 
Lígth
 +(((
uöt8_t
 *)&
Advîti£mít_D©a_Buf„r
.
SˇnRe•⁄£D©a
)[Length] + 1);

3739 
	`LOG_WARN
(" Thêdevi˚ÇamêCANNOT fô i¿thêsˇ¿ª•⁄£ d©a.\n", 
Resu…
);

3742 
	`LOG_ERROR
(" q≠i_BLE_GAPS_Quîy_Devi˚_Name(dtAdvîtisögËªtu∫ed %d.\n", 
Resu…
);

3744 
Resu…
 = 
	`q≠i_BLE_GAP_LE_Së_Sˇn_Re•⁄£_D©a
(
BluëoŸhSèckID
, 
Lígth
, &(
Advîti£mít_D©a_Buf„r
.
SˇnRe•⁄£D©a
));

3745 if(!
Resu…
)

3749 #i‚de‡
V1


3750 
BLEP¨amëîs
.
AdvîtisögP¨amëîs
.
Advîtisög_Ch™√l_M≠
 = 
QAPI_BLE_HCI_LE_ADVERTISING_CHANNEL_MAP_DEFAULT
;

3752 
íabÀ
)

3754 
AET_ENABLE_ALL_E
:

3755 
BLEP¨amëîs
.
AdvîtisögP¨amëîs
.
Advîtisög_Ch™√l_M≠
 = (
QAPI_BLE_HCI_LE_ADVERTISING_CHANNEL_MAP_ENABLE_CHANNEL_37
 | 
QAPI_BLE_HCI_LE_ADVERTISING_CHANNEL_MAP_ENABLE_CHANNEL_38
);

3757 
AET_ENABLE_CHANNEL_37_E
:

3758 
BLEP¨amëîs
.
AdvîtisögP¨amëîs
.
Advîtisög_Ch™√l_M≠
 = 
QAPI_BLE_HCI_LE_ADVERTISING_CHANNEL_MAP_ENABLE_CHANNEL_37
;

3760 
AET_ENABLE_CHANNEL_38_E
:

3761 
BLEP¨amëîs
.
AdvîtisögP¨amëîs
.
Advîtisög_Ch™√l_M≠
 = 
QAPI_BLE_HCI_LE_ADVERTISING_CHANNEL_MAP_ENABLE_CHANNEL_38
;

3763 
AET_ENABLE_CHANNEL_39_E
:

3764 
BLEP¨amëîs
.
AdvîtisögP¨amëîs
.
Advîtisög_Ch™√l_M≠
 = 
QAPI_BLE_HCI_LE_ADVERTISING_CHANNEL_MAP_ENABLE_CHANNEL_39
;

3769 
BLEP¨amëîs
.
AdvîtisögP¨amëîs
.
Advîtisög_Ch™√l_M≠
 = (
QAPI_BLE_HCI_LE_ADVERTISING_CHANNEL_MAP_ENABLE_CHANNEL_37
 | 
QAPI_BLE_HCI_LE_ADVERTISING_CHANNEL_MAP_ENABLE_CHANNEL_38
);

3776 if(!(
BLEP¨amëîs
.
Fœgs
 & 
BLE_PARAMETERS_FLAGS_ADVERTISING_PARAMETERS_VALID
))

3780 
BLEP¨amëîs
.
AdvîtisögP¨amëîs
.
Sˇn_Reque°_Fûãr
 = 
QAPI_BLE_FP_NO_FILTER_E
;

3781 
BLEP¨amëîs
.
AdvîtisögP¨amëîs
.
C⁄√˘_Reque°_Fûãr
 = 
QAPI_BLE_FP_NO_FILTER_E
;

3782 
BLEP¨amëîs
.
AdvîtisögP¨amëîs
.
Advîtisög_I¡îvÆ_Mö
 = 100;

3783 
BLEP¨amëîs
.
AdvîtisögP¨amëîs
.
Advîtisög_I¡îvÆ_Max
 = 200;

3787 
BLEP¨amëîs
.
Fœgs
 |
BLE_PARAMETERS_FLAGS_ADVERTISING_PARAMETERS_VALID
;

3792 
C⁄√˘abûôyP¨amëîs
.
C⁄√˘abûôy_Mode
 = 
LE_P¨amëîs
.
C⁄√˘abÀMode
;

3793 
C⁄√˘abûôyP¨amëîs
.
Own_Addªss_Ty≥
 = 
QAPI_BLE_LAT_PUBLIC_E
;

3797 if((
C⁄√˘abûôyP¨amëîs
.
C⁄√˘abûôy_Mode
 =
QAPI_BLE_LCM_LOW_DUTY_CYCLE_DIRECT_CONNECTABLE_E
Ë|| (C⁄√˘abûôyP¨amëîs.C⁄√˘abûôy_Modê=
QAPI_BLE_LCM_DIRECT_CONNECTABLE_E
))

3801 
C⁄√˘abûôyP¨amëîs
.
Own_Addªss_Ty≥
 = 
QAPI_BLE_LAT_RESOLVABLE_FALLBACK_PUBLIC_E
;

3812 
C⁄√˘abûôyP¨amëîs
.
Dúe˘_Addªss_Ty≥
 = 
QAPI_BLE_LAT_PUBLIC_E
;

3813 
	`QAPI_BLE_ASSIGN_BD_ADDR
(
C⁄√˘abûôyP¨amëîs
.
Dúe˘_Addªss
, 0, 0, 0, 0, 0, 0);

3819 if((
C⁄√˘abûôyP¨amëîs
.
C⁄√˘abûôy_Mode
 =
QAPI_BLE_LCM_LOW_DUTY_CYCLE_DIRECT_CONNECTABLE_E
Ë|| (C⁄√˘abûôyP¨amëîs.C⁄√˘abûôy_Modê=
QAPI_BLE_LCM_DIRECT_CONNECTABLE_E
))

3825 
C⁄√˘abûôyP¨amëîs
.
Own_Addªss_Ty≥
 = 
QAPI_BLE_LAT_PUBLIC_E
;

3826 
C⁄√˘abûôyP¨amëîs
.
C⁄√˘abûôy_Mode
 = 
QAPI_BLE_LCM_CONNECTABLE_E
;

3829 
	`LOG_WARN
("Using connectable un-directedádvertising withÖublicáddress.\n");

3833 
Resu…
 = 
	`q≠i_BLE_GAP_LE_Advîtisög_E«bÀ
(
BluëoŸhSèckID
, 
TRUE
, &(
BLEP¨amëîs
.
AdvîtisögP¨amëîs
), &(
C⁄√˘abûôyP¨amëîs
), 
GAP_LE_Evít_CÆlback
, 0);

3834 if(!
Resu…
)

3836 
	`LOG_INFO
(" GAP_LE_Advîtisög_E«bÀ suc˚ss, Advîtisög I¡îvÆ R™ge: %u - %u.\n", ()
BLEP¨amëîs
.
AdvîtisögP¨amëîs
.
Advîtisög_I¡îvÆ_Mö
, ()BLEP¨amëîs.AdvîtisögP¨amëîs.
Advîtisög_I¡îvÆ_Max
);

3838 
ªt_vÆ
 = 
QCLI_STATUS_SUCCESS_E
;

3842 
	`LOG_ERROR
(" GAP_LE_Advîtisög_E«bÀÑëu∫ed %d.\n", 
Resu…
);

3844 
ªt_vÆ
 = 
QCLI_STATUS_ERROR_E
;

3849 
	`LOG_ERROR
(" q≠i_BLE_GAP_LE_Së_Advîtisög_D©a(dtSˇnRe•⁄£Ëªtu∫ed %d.\n", 
Resu…
);

3851 
ªt_vÆ
 = 
QCLI_STATUS_ERROR_E
;

3857 
	`LOG_ERROR
(" q≠i_BLE_GAP_LE_Së_Advîtisög_D©a(dtAdvîtisögËªtu∫ed %d.\n", 
Resu…
);

3859 
ªt_vÆ
 = 
QCLI_STATUS_ERROR_E
;

3865 
ªt_vÆ
 = 
QCLI_STATUS_USAGE_E
;

3869 
ªt_vÆ
 = 
QCLI_STATUS_ERROR_E
;

3871 (
ªt_vÆ
);

3872 
	}
}

3879 
uöt32_t
 
	$GëBluëoŸhSèckID
()

3881  
BluëoŸhSèckID
;

3882 
	}
}

3888 
öt32_t
 
	$bÀ_gë_devi˚_mac_addªss
(
uöt8_t
 *
mac
)

3890 
q≠i_BLE_BD_ADDR_t
 
Bdaddr
;

3891 
uöt32_t
 
i
;

3893 i‡(
	`q≠i_BLE_GAP_Quîy_Loˇl_BD_ADDR
(
BluëoŸhSèckID
, &
Bdaddr
))

3896 
i
 = 0; i < 6; i++)

3897 *(
mac
 + 
i
Ë*((
uöt8_t
 *Ë&
Bdaddr
 + (5 - i));

3898  
QCLI_STATUS_SUCCESS_E
;

3899 
	}
}

3901 c⁄° 
QCLI_Comm™d_t
 
	gbÀ_cmd_li°
[] =

3904 c⁄° 
QCLI_Comm™d_Group_t
 
	gbÀ_cmd_group
 =

3907 ((
bÀ_cmd_li°
) / (ble_cmd_list[0])),

3908 
bÀ_cmd_li°


3912 
	$BT_Stk_Id
()

3914  
BluëoŸhSèckID
;

3915 
	}
}

3921 
	#BLB_NUM_BULBS
 1

	)

3925 
uöt32_t
 
BulbSèã
;

3927 
	#BLBD_THREAD_STACK_SIZE
 (2048)

	)

3928 
	#BLBD_THREAD_PRIORITY
 (12)

	)

3929 
	#BLBD_THREAD_STOP
 (1<<5)

	)

3931 
	#BLBD_SCAN_RESULT_SIGNAL_INTR
 (1)

	)

3932 
	#BLBD_CONNECTION_SUCCESS_SIGNAL_INTR
 (2)

	)

3933 
	#BLBD_SERVICE_DISCOVERY_SIGNAL_INTR
 (3)

	)

3934 
	#BLBD_PERIODIC_TIMER_SIGNAL_INTR
 (4)

	)

3935 
	#BLBD_SCAN_STOPPED_SIGNAL_INTR
 (5)

	)

3937 
	#BLBD_SCAN_RESULT
 (6)

	)

3938 
	#BLBD_CONNECTION_RESULT
 (7)

	)

3939 
	#BLBD_SERVICE_DISCOVERY_RESULT
 (8)

	)

3940 
	#BLBD_DISCONNECTION_RESULT
 (9)

	)

3941 
	#BLBD_CONNECTION_FAILED_SIGNAL_INTR
 (10)

	)

3944 
	#BLBD_CONNECTION_TICKS
 6

	)

3946 
quπ_pùe_©å_t
 
	gblbd_q©å
;

3947 
quπ_pùe_t
 
	gblbd_q
;

3949 
	sBLBD_Q_s


3951 
	mevít_ty≥
;

3952 *
	md©a
;

3953 } 
	tBLBD_Q_t
;

3958 
BLBD_Q_t
 *
	gblbd_qd©a
;

3959 
uöt32_t
 
	gblbd_duøti⁄
 = 3000;

3960 
BLBD_Q_t
 
	gtimî_sig«l
 = {
BLBD_PERIODIC_TIMER_SIGNAL_INTR
, 0};

3961 
q≠i_TIMER_£t_©å_t
 
	gBLBD_Së_Timî_Aâr
;

3962 
q≠i_TIMER_h™dÀ_t
 
	gPîiodicSˇnTimî
;

3963 
q≠i_TIMER_deföe_©å_t
 
	gBLBD_Cª©e_Timî_Aâr
;

3965 
	#BLBD_DEVICE_SIGNATURE
 "HOME-BLB"

	)

3966 
	#BLB_NUM_BULBS
 1

	)

3967 
	#BLB_MAX_CHARS
 3

	)

3968 
	#AD_TYPE_LOCAL_NAME
 0x09

	)

3969 
	#BLBD_SERVICE_UUID
 { 0xFB, 0x34, 0x9B, 0x5F, 0x80, 0x00, 0x00, 0x80, 0x00, 0x10, 0x00, 0x00, 0x01, 0xFF, 0x00, 0x00 }

	)

3970 
	gSñe˘edBLBDDevi˚
;

3971 
MscSèπSˇn
(
uöt32_t
 
BluëoŸhSèckID
, 
q≠i_BLE_GAP_LE_Fûãr_Pﬁicy_t
 
FûãrPﬁicy
, 
SˇnDuøti⁄
);

3972 
	gblb_num_bulbs_found
 = 0;

3974 
	gblbd_sˇn_≥rmôãd
 = 1;

3975 
	#QAPI_BLE_BLBD_COMPARE_SERVICE_UUID_TO_UUID_16
(
_x
Ë
	`QAPI_BLE_COMPARE_BLUETOOTH_UUID_16_TO_CONSTANT
((_x), 0xFF, 0x01)

	)

3976 
	#QAPI_BLE_BLBD_COMPARE_CHAR_UUID_TO_UUID_128
(
_x
Ë
	`QAPI_BLE_COMPARE_BLUETOOTH_UUID_128_TO_CONSTANT
((_x), 0x00, 0x00, 0xFF, 0xFB, 0x00, 0x00, 0x10, 0x00, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB)

	)

3977 
	#QAPI_BLE_BLBD_COMPARE_SERVICE_UUID_TO_UUID_128
(
_x
Ë
	`QAPI_BLE_COMPARE_BLUETOOTH_UUID_128_TO_CONSTANT
((_x), 0x00, 0x00, 0xFF, 0x10, 0x00, 0x00, 0x10, 0x00, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB)

	)

3978 
	#QAPI_BLE_BLBD_COMPARE_CHAR_UUID_TO_UUID_16
(
_x
Ë
	`QAPI_BLE_COMPARE_BLUETOOTH_UUID_16_TO_CONSTANT
((_x), 0xFF, 0xFC)

	)

3980 
	sblbd_devi˚_ch¨s


3982 
uöt8_t
 
	mPr›îtõs
;

3983 
uöt16_t
 
	mCh¨a˘îi°ic_H™dÀ
;

3984 
uöt16_t
 
	mCCCD_H™dÀ
;

3985 }
	tBLBD_DEVICE_CHARS
;

3987 
	sblbd_dev_In°™˚_Info_t


3989 
q≠i_BLE_GAP_LE_Advîtisög_Rï‹t_D©a_t
 * 
	msˇn_d©a
;

3990 
Devi˚Info_t
 *
	mc⁄√˘i⁄_öfo
;

3991 
BLBD_DEVICE_CHARS
 *
	mdev_ch¨s
;

3992 
	mvÆid
;

3994 }
	tBLBD_Devi˚
;

3996 
	sblbd_ãmp_dev_In°™˚_Info_t


3998 
q≠i_BLE_GAP_LE_Advîtisög_Rï‹t_D©a_t
 
	msˇn_d©a
;

3999 
	mvÆid
;

4001 }
	tBLBD_Temp_Devi˚
;

4004 
BLBD_Devi˚
 
	gblbd_devi˚s
[
BLB_NUM_BULBS
];

4006 
BLBD_Temp_Devi˚
 
	gblbd_ãmp_devi˚s
[
BLB_NUM_BULBS
];

4009 
BLBD_Q_t
 
	gsˇn_ªsu…_sig«l
 = {
BLBD_SCAN_RESULT_SIGNAL_INTR
, 0};

4010 
BLBD_Q_t
 
	gsˇn_°›≥d_sig«l
 = {
BLBD_SCAN_STOPPED_SIGNAL_INTR
, 0};

4011 
BLBD_Q_t
 
	g£rvi˚s_discovîed_sig«l
 = {
BLBD_SERVICE_DISCOVERY_SIGNAL_INTR
, 0};

4012 
BLBD_Q_t
 
	gc⁄√˘i⁄_ªsu…_sig«l
 = {
BLBD_CONNECTION_SUCCESS_SIGNAL_INTR
, 0};

4013 
BLBD_Q_t
 
	gdisc⁄√˘i⁄_ªsu…_sig«l
 = {
BLBD_CONNECTION_FAILED_SIGNAL_INTR
, 0};

4015 
q≠i_BLE_BD_ADDR_t
 
	gCuºít_C⁄n_Addr
 = {0};

4017 
uöt16_t
 
	gbulb_ch¨_h™dÀ
 = 0;

4020 
blbd_sˇn_ªsu…_ˇŒback
();

4021 
blbd_c⁄√˘i⁄_ªsu…_ˇŒback
();

4023 
blbd_sˇn_°›≥d_ˇŒback
();

4024 * 
mŸ_øã_func
();

4025 
BLBDAddSˇnE¡ry
(*);

4026 
AssignBLBDC⁄√˘i⁄Info
(* 
d©a
);

4028 
Re£tBLBDDevi˚D©a
(
devIndex
);

4031 
QAPI_BLE_BTPSAPI
 
GATT_Clõ¡EvítCÆlback_BLBD
(
uöt32_t
 
BluëoŸhSèckID
, 
q≠i_BLE_GATT_Clõ¡_Evít_D©a_t
 *
GATT_Clõ¡_Evít_D©a
, uöt32_à
CÆlbackP¨amëî
);

4032 
QAPI_BLE_BTPSAPI
 
GATT_BLBD_Sîvi˚_Discovîy_Evít_CÆlback
(
uöt32_t
 
BluëoŸhSèckID
, 
q≠i_BLE_GATT_Sîvi˚_Discovîy_Evít_D©a_t
 *
GATT_Sîvi˚_Discovîy_Evít_D©a
, uöt32_à
CÆlbackP¨amëî
);

4033 
BLBDP›uœãH™dÀs
(
AIOP_Clõ¡_Inf‹m©i⁄_t
 *
Clõ¡Info
,

4034 
q≠i_BLE_GATT_Sîvi˚_Discovîy_Indiˇti⁄_D©a_t
 *
Sîvi˚DiscovîyD©a
);

4035 
AddBLBDDevi˚
(
q≠i_BLE_GAP_LE_Advîtisög_Rï‹t_D©a_t
 *
dev_±r
);

4036 
QCLI_Comm™d_Sètus_t
 
DiscovîBLBDSîvi˚s
(
q≠i_BLE_BD_ADDR_t
 
BD_ADDR
);

4037 
M©chBLBDDevi˚
(
q≠i_BLE_BD_ADDR_t
 
Bﬂrd_Addªss
);

4038 
Devi˚Info_t
 *
BLBDGëDevi˚Info
(
devi˚Index
);

4039 
blbd_disc⁄√˘i⁄_ªsu…
(*
disc⁄n_d©a
);

4041 
QAPI_BLE_BTPSAPI
 
BLBD_GAP_LE_Evít_CÆlback
(
uöt32_t
 
BluëoŸhSèckID
, 
q≠i_BLE_GAP_LE_Evít_D©a_t
 *
GAP_LE_Evít_D©a
, uöt32_à
CÆlbackP¨amëî
);

4042 
C⁄√˘LEDevi˚
(
uöt32_t
 
BluëoŸhSèckID
, 
boﬁón_t
 
U£WhôeLi°
, 
q≠i_BLE_BD_ADDR_t
 *
BD_ADDR
, 
q≠i_BLE_GAP_LE_Addªss_Ty≥_t
 
AddªssTy≥
);

4044 
	$BLBDWrôeMŸi⁄D©a
(
uöt32_t
 
vÆ
)

4047 
©å_Àn
;

4048 
Resu…
;

4049 
devi˚Index
;

4051 
Devi˚Info_t
 *
Devi˚Info
;

4053 
©å_Àn
 = 4;

4054 
	`QCLI_Prötf
(
bÀ_group
, "VÆuê%u", 
vÆ
);

4055 if(
Devi˚Info
 = 
	`SórchDevi˚InfoE¡ryByBD_ADDR
(&
Devi˚InfoLi°
,
Cuºít_C⁄n_Addr
))

4058 if(
bulb_ch¨_h™dÀ
)

4060 if((
Resu…
 = 
	`q≠i_BLE_GATT_Wrôe_Wôhout_Re•⁄£_Reque°
(
BluëoŸhSèckID
,

4061 
Devi˚Info
->
C⁄√˘i⁄ID
, 
bulb_ch¨_h™dÀ
, 
©å_Àn
,

4062 &
vÆ
)) > 0)

4064 
	`QCLI_Prötf
(
bÀ_group
, "BLBDWrôeMŸi⁄D©®wrôêsuc˚s†%u", 
Resu…
);

4066 i‡(
Resu…
 =
QAPI_BLE_GATT_ERROR_INVALID_CONNECTION_ID
)

4069 
	`Di•œyFun˘i⁄Eº‹
("q≠i_BLE_GATT_Wrôe_Reque°", 
Resu…
);

4074 
	`Di•œyFun˘i⁄Eº‹
("q≠i_BLE_GATT_Wrôe_Reque°", 
Resu…
);

4075 
	`QCLI_Prötf
(
bÀ_group
, "C⁄n_id = %d", 
Devi˚Info
->
C⁄√˘i⁄ID
);

4080 
	}
}

4085 
	$Di•œyUUID
(
q≠i_BLE_GATT_UUID_t
 *
UUID
)

4087 if(
UUID
)

4089 if(
UUID
->
UUID_Ty≥
 =
QAPI_BLE_GU_UUID_16_E
)

4090 
	`QCLI_Prötf
(
bÀ_group
, "%02X%02X\n", 
UUID
->UUID.
UUID_16
.
UUID_Byã1
, UUID->UUID.UUID_16.
UUID_Byã0
);

4093 if(
UUID
->
UUID_Ty≥
 =
QAPI_BLE_GU_UUID_128_E
)

4095 
	`QCLI_Prötf
(
bÀ_group
, "%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X\n", 
UUID
->UUID.
UUID_128
.
UUID_Byã15
, UUID->UUID.UUID_128.
UUID_Byã14
, UUID->UUID.UUID_128.
UUID_Byã13
,

4096 
UUID
->UUID.
UUID_128
.
UUID_Byã12
, UUID->UUID.UUID_128.
UUID_Byã11
, UUID->UUID.UUID_128.
UUID_Byã10
,

4097 
UUID
->UUID.
UUID_128
.
UUID_Byã9
, UUID->UUID.UUID_128.
UUID_Byã8
, UUID->UUID.UUID_128.
UUID_Byã7
,

4098 
UUID
->UUID.
UUID_128
.
UUID_Byã6
, UUID->UUID.UUID_128.
UUID_Byã5
, UUID->UUID.UUID_128.
UUID_Byã4
,

4099 
UUID
->UUID.
UUID_128
.
UUID_Byã3
, UUID->UUID.UUID_128.
UUID_Byã2
, UUID->UUID.UUID_128.
UUID_Byã1
,

4100 
UUID
->UUID.
UUID_128
.
UUID_Byã0
);

4104 
	}
}

4109 
	$C⁄√˘LEDevi˚
(
uöt32_t
 
BluëoŸhSèckID
, 
boﬁón_t
 
U£WhôeLi°
, 
q≠i_BLE_BD_ADDR_t
 *
BD_ADDR
, 
q≠i_BLE_GAP_LE_Addªss_Ty≥_t
 
AddªssTy≥
)

4111 
Resu…
;

4114 if(
BluëoŸhSèckID
)

4118 if(!(
BLEP¨amëîs
.
Fœgs
 & 
BLE_PARAMETERS_FLAGS_SCAN_PARAMETERS_VALID
))

4121 
BLEP¨amëîs
.
SˇnP¨amëîs
.
SˇnWödow
 = 50;

4122 
BLEP¨amëîs
.
SˇnP¨amëîs
.
SˇnI¡îvÆ
 = 100;

4126 
BLEP¨amëîs
.
Fœgs
 |
BLE_PARAMETERS_FLAGS_SCAN_PARAMETERS_VALID
;

4131 if(!(
BLEP¨amëîs
.
Fœgs
 & 
BLE_PARAMETERS_FLAGS_CONNECTION_PARAMETERS_VALID
))

4134 
BLEP¨amëîs
.
C⁄√˘i⁄P¨amëîs
.
C⁄√˘i⁄_I¡îvÆ_Mö
 = 50;

4135 
BLEP¨amëîs
.
C⁄√˘i⁄P¨amëîs
.
C⁄√˘i⁄_I¡îvÆ_Max
 = 200;

4136 
BLEP¨amëîs
.
C⁄√˘i⁄P¨amëîs
.
Möimum_C⁄√˘i⁄_Lígth
 = 0;

4137 
BLEP¨amëîs
.
C⁄√˘i⁄P¨amëîs
.
Maximum_C⁄√˘i⁄_Lígth
 = 10000;

4138 
BLEP¨amëîs
.
C⁄√˘i⁄P¨amëîs
.
Sœve_L©ícy
 = 0;

4139 
BLEP¨amëîs
.
C⁄√˘i⁄P¨amëîs
.
Su≥rvisi⁄_Timeout
 = 6000;

4143 
BLEP¨amëîs
.
Fœgs
 |
BLE_PARAMETERS_FLAGS_CONNECTION_PARAMETERS_VALID
;

4153 
Resu…
 = 
	`q≠i_BLE_GAP_LE_Cª©e_C⁄√˘i⁄
(
BluëoŸhSèckID
, 
BLEP¨amëîs
.
SˇnP¨amëîs
.
SˇnI¡îvÆ
, BLEP¨amëîs.SˇnP¨amëîs.
SˇnWödow
, (
U£WhôeLi°
 ? 
QAPI_BLE_FP_WHITE_LIST_E
 : 
QAPI_BLE_FP_NO_FILTER_E
), 
AddªssTy≥
, 
BD_ADDR
, 
QAPI_BLE_LAT_RESOLVABLE_FALLBACK_PUBLIC_E
, &(BLEP¨amëîs.
C⁄√˘i⁄P¨amëîs
), 
BLBD_GAP_LE_Evít_CÆlback
, 0);

4154 if(!
Resu…
)

4156 
	`QCLI_Prötf
(
bÀ_group
, "Connection Request successful.\n");

4157 
	`QCLI_Prötf
(
bÀ_group
, "Sˇ¿P¨amëîs: Wödow %u, I¡îvÆ %u.\n", ()
BLEP¨amëîs
.
SˇnP¨amëîs
.
SˇnWödow
,

4158 ()
BLEP¨amëîs
.
SˇnP¨amëîs
.
SˇnI¡îvÆ
);

4159 
	`QCLI_Prötf
(
bÀ_group
, "C⁄√˘i⁄ P¨amëîs: I¡îvÆ R™gê%u - %u, SœvêL©ícy %u.\n", ()
BLEP¨amëîs
.
C⁄√˘i⁄P¨amëîs
.
C⁄√˘i⁄_I¡îvÆ_Mö
,

4160 ()
BLEP¨amëîs
.
C⁄√˘i⁄P¨amëîs
.
C⁄√˘i⁄_I¡îvÆ_Max
,

4161 ()
BLEP¨amëîs
.
C⁄√˘i⁄P¨amëîs
.
Sœve_L©ícy
);

4162 
	`QCLI_Prötf
(
bÀ_group
, "Usög WhôêLi°: %s.\n", (
U£WhôeLi°
 ? "Yes" : "No"));

4167 
	`QCLI_Prötf
(
bÀ_group
, "U«bÀÅÿ¸óã c⁄√˘i⁄: %d.\n", 
Resu…
);

4171 
Resu…
 = -1;

4173 (
Resu…
);

4174 
	}
}

4178 
	$BLBDSñe˘Devi˚F‹C⁄√˘i⁄
()

4180 
devi˚Index
 = 0;

4182 
devi˚Index
 = 0; devi˚Index < 
BLB_NUM_BULBS
; deviceIndex++)

4184 if(
blbd_devi˚s
[
devi˚Index
].
vÆid
 &&

4185 (!
	`BLBDGëDevi˚Info
(
devi˚Index
)))

4186  
devi˚Index
;

4190 
	}
}

4193 
Devi˚Info_t
 *
	$BLBDGëDevi˚Info
(
devi˚Index
)

4195 if(
blbd_devi˚s
[
devi˚Index
].
c⁄√˘i⁄_öfo
 &&

4196 
blbd_devi˚s
[
devi˚Index
].
c⁄√˘i⁄_öfo
->
C⁄√˘i⁄ID
)

4197  
blbd_devi˚s
[
devi˚Index
].
c⁄√˘i⁄_öfo
;

4200 
	}
}

4202 
uöt16_t
 
	$BLBDGëWrôeCh¨H™dÀ
(
devi˚Index
)

4204 if(
blbd_devi˚s
[
devi˚Index
].
dev_ch¨s
[0].
Ch¨a˘îi°ic_H™dÀ
){

4205  
blbd_devi˚s
[
devi˚Index
].
dev_ch¨s
[0].
Ch¨a˘îi°ic_H™dÀ
;

4208 
	}
}

4214 
	$Re£tBLBDSñe˘edDevi˚D©a
()

4216 
	`Re£tBLBDDevi˚D©a
(
Sñe˘edBLBDDevi˚
);

4217 
	}
}

4219 
	$Re£tBLBDDevi˚D©a
(
devi˚Index
)

4222 if(
devi˚Index
 < 0 || devi˚Index > 
BLB_NUM_BULBS
)

4226 
blbd_devi˚s
[
devi˚Index
].
vÆid
 = 0;

4227 
blbd_devi˚s
[
devi˚Index
].
c⁄√˘i⁄_öfo
 = 0;

4229 if(
blbd_devi˚s
[
devi˚Index
].
sˇn_d©a
)

4230 
	`‰ì
(
blbd_devi˚s
[
devi˚Index
].
sˇn_d©a
);

4231 
blbd_devi˚s
[
devi˚Index
].
sˇn_d©a
 = 0;

4233 if(
blbd_devi˚s
[
devi˚Index
].
dev_ch¨s
)

4234 
	`‰ì
(
blbd_devi˚s
[
devi˚Index
].
dev_ch¨s
);

4235 
blbd_devi˚s
[
devi˚Index
].
dev_ch¨s
 = 0;

4238 
	}
}

4240 
	$H™dÀBLBDDisc⁄√˘i⁄
(*
d©a
)

4242 
devi˚Index
 = 0;

4243 
q≠i_BLE_BD_ADDR_t
 *
r_adr
 = (q≠i_BLE_BD_ADDR_à*)
d©a
;

4244 
found
 = 0;

4246 if((
devi˚Index
 = 
	`M©chBLBDDevi˚
(*
r_adr
)) >= 0)

4248 
	`QCLI_Prötf
(
bÀ_group
, "H™dÀBLBDDisc⁄√˘i⁄ suc˚s†0x%x\n", *
r_adr
);

4249 
blbd_devi˚s
[
devi˚Index
].
vÆid
 = 0;

4250 
blbd_devi˚s
[
devi˚Index
].
c⁄√˘i⁄_öfo
 = 0;

4252 if(
blbd_devi˚s
[
devi˚Index
].
sˇn_d©a
)

4253 
	`‰ì
(
blbd_devi˚s
[
devi˚Index
].
sˇn_d©a
);

4254 
blbd_devi˚s
[
devi˚Index
].
sˇn_d©a
 = 0;

4256 if(
blbd_devi˚s
[
devi˚Index
].
dev_ch¨s
)

4257 
	`‰ì
(
blbd_devi˚s
[
devi˚Index
].
dev_ch¨s
);

4258 
blbd_devi˚s
[
devi˚Index
].
dev_ch¨s
 = 0;

4260 if(
devi˚Index
 =
Sñe˘edBLBDDevi˚
)

4261 
found
 = 1;

4265 
	`‰ì
(
d©a
);

4268  
found
;

4270 
	}
}

4273 *
	$GëLoˇlNameInAD
(
q≠i_BLE_GAP_LE_Advîtisög_D©a_t
 *
ad_±r
)

4276 
i
;

4277 *
°r
 = 0;

4279 
i
 = 0; i < 
ad_±r
->
Numbî_D©a_E¡rõs
; i++)

4281 if(
ad_±r
->
D©a_E¡rõs
[
i
].
AD_Ty≥
 =
AD_TYPE_LOCAL_NAME
)

4283 
°r
 = 
	`mÆloc
(
ad_±r
->
D©a_E¡rõs
[
i
].
AD_D©a_Lígth
 + 1);

4284 
	`°∫˝y
(
°r
, (*)
ad_±r
->
D©a_E¡rõs
[
i
].
AD_D©a_Buf„r
,

4285 
ad_±r
->
D©a_E¡rõs
[
i
].
AD_D©a_Lígth
);

4286 
°r
[
ad_±r
->
D©a_E¡rõs
[
i
].
AD_D©a_Lígth
] = 0;

4291  
°r
;

4293 
	}
}

4295 
	gBD_Addr_Blb
[16];

4297 
	$BLBDAddSˇnE¡ry
(*
dev_±r
)

4299 
q≠i_BLE_GAP_LE_Advîtisög_Rï‹t_D©a_t
 *
t_dev±r
 = (q≠i_BLE_GAP_LE_Advîtisög_Rï‹t_D©a_à*)
dev_±r
;

4301 if(
	`M©chBLBDDevi˚
(
t_dev±r
->
BD_ADDR
) >= 0)

4303 
	`QCLI_Prötf
(
bÀ_group
, "Duplicate Msc scan data inÑesult ignoring\n");

4307 
	`AddBLBDDevi˚
(
t_dev±r
);

4309 
	}
}

4311 
	$AddBLBDDevi˚
(
q≠i_BLE_GAP_LE_Advîtisög_Rï‹t_D©a_t
 *
dev_±r
)

4313 
i
 = 0;

4315 
i
 = 0; i < 
BLB_NUM_BULBS
; i++)

4318 if(!
blbd_devi˚s
[
i
].
vÆid
)

4321 
blbd_devi˚s
[
i
].
sˇn_d©a
 = 
dev_±r
;

4322 
blbd_devi˚s
[
i
].
vÆid
 = 1;

4323 
	`QCLI_Prötf
(
bÀ_group
, "Ms¯devi˚ádded @ index %d\n", 
i
);

4330 
	}
}

4335 
	$M©chTempBLBDDevi˚
(
q≠i_BLE_BD_ADDR_t
 
Bﬂrd_Addªss
)

4337 
i
 = 0;

4339 
i
 = 0; i < 
BLB_NUM_BULBS
; i++)

4341 if(
blbd_ãmp_devi˚s
[
i
].
vÆid
 && 
	`QAPI_BLE_COMPARE_BD_ADDR
(blbd_ãmp_devi˚s[i].
sˇn_d©a
.
BD_ADDR
,

4342 
Bﬂrd_Addªss
))

4344  
i
;

4349 
	}
}

4351 
	$AddTempBLBDDevi˚
(
q≠i_BLE_GAP_LE_Advîtisög_Rï‹t_D©a_t
 *
dev_±r
)

4353 
i
 = 0;

4355 
i
 = 0; i < 
BLB_NUM_BULBS
; i++)

4358 if(!
blbd_ãmp_devi˚s
[
i
].
vÆid
)

4361 
	`mem£t
(&(
blbd_ãmp_devi˚s
[
i
].
sˇn_d©a
),0,

4362 (
q≠i_BLE_GAP_LE_Advîtisög_Rï‹t_D©a_t
));

4363 
	`mem˝y
(&(
blbd_ãmp_devi˚s
[
i
].
sˇn_d©a
), 
dev_±r
,

4364 (
q≠i_BLE_GAP_LE_Advîtisög_Rï‹t_D©a_t
));

4365 
blbd_ãmp_devi˚s
[
i
].
vÆid
 = 1;

4366 
blb_num_bulbs_found
++;

4367 
	`QCLI_Prötf
(
bÀ_group
, "Ms¯ãm∞devi˚ádded @ index %d\n", 
i
);

4374 
	}
}

4376 
	$BLBDCÀ¨TempSˇnD©a
()

4378 
i
 = 0;

4380 
i
 = 0; i < 
BLB_NUM_BULBS
; i++)

4383 
blbd_ãmp_devi˚s
[
i
].
vÆid
 = 0;

4384 
	`mem£t
(&(
blbd_ãmp_devi˚s
[
i
].
sˇn_d©a
), 0,

4385 (
q≠i_BLE_GAP_LE_Advîtisög_Rï‹t_D©a_t
));

4387 
	`QCLI_Prötf
(
bÀ_group
, "BLBDClearTempScanData called \n");

4392 
	}
}

4394 
	$M©chBLBDDevi˚
(
q≠i_BLE_BD_ADDR_t
 
Bﬂrd_Addªss
)

4396 
i
 = 0;

4398 
i
 = 0; i < 
BLB_NUM_BULBS
; i++)

4400 if(
blbd_devi˚s
[
i
].
vÆid
)

4402 if(
	`QAPI_BLE_COMPARE_BD_ADDR
(
blbd_devi˚s
[
i
].
sˇn_d©a
->
BD_ADDR
,

4403 
Bﬂrd_Addªss
))

4405  
i
;

4411 
	}
}

4414 
	$AssignBLBDC⁄√˘i⁄Info
(*
c_öfo
)

4416 if(
Sñe˘edBLBDDevi˚
 < 0 || Sñe˘edBLBDDevi˚ > 
BLB_NUM_BULBS
)

4419 
blbd_devi˚s
[
Sñe˘edBLBDDevi˚
].
c⁄√˘i⁄_öfo
 = (
Devi˚Info_t
 *)
c_öfo
;

4422 
	}
}

4424 
	$blbd_discovî_£rvi˚s
()

4426 
	`QCLI_Prötf
(
bÀ_group
, "inside blbd_discover_services \n");

4428 
	}
}

4430 
	$blbd_°¨t_c⁄√˘
()

4432 
Sñe˘edBLBDDevi˚
 = 
	`BLBDSñe˘Devi˚F‹C⁄√˘i⁄
();

4433 if(
Sñe˘edBLBDDevi˚
 >= 0)

4435 
	`C⁄√˘LEDevi˚
(
BluëoŸhSèckID
, 
FALSE
,

4436 &(
blbd_devi˚s
[
Sñe˘edBLBDDevi˚
].
sˇn_d©a
->
BD_ADDR
),

4437 
blbd_devi˚s
[
Sñe˘edBLBDDevi˚
].
sˇn_d©a
->
Addªss_Ty≥
);

4442 
	}
}

4446 
	$AnyDevi˚sToBeSˇ¬ed
()

4448 
devi˚Index
 = 0;

4450 
devi˚Index
 = 0; devi˚Index < 
BLB_NUM_BULBS
; deviceIndex++)

4452 if(
blbd_devi˚s
[
devi˚Index
].
vÆid
 == 0)

4457 
	}
}

4460 
	$blbd_°¨t_sˇn
()

4462 
	`QCLI_Prötf
(
bÀ_group
, "inside blbd_start_scan \n");

4464 
	`MscSèπSˇn
(
BluëoŸhSèckID
, 
QAPI_BLE_FP_NO_FILTER_E
, 3);

4467 
	}
}

4471 
	$St›Sˇn
(
uöt32_t
 
BluëoŸhSèckID
)

4473 
Resu…
;

4476 if(
BluëoŸhSèckID
)

4479 if(
SˇnTimîID
)

4482 
	`q≠i_BLE_BSC_St›Timî
(
BluëoŸhSèckID
, 
SˇnTimîID
);

4484 
SˇnTimîID
 = 0;

4488 
Resu…
 = 
	`q≠i_BLE_GAP_LE_C™˚l_Sˇn
(
BluëoŸhSèckID
);

4489 if(!
Resu…
)

4491 
	`QCLI_Prötf
(
bÀ_group
, "Scan stopped successfully.\n");

4494 
SˇnInProgªss
 = 
FALSE
;

4497 
	`QCLI_Prötf
(
bÀ_group
, "U«bÀÅÿ°› sˇn: %d\n", 
Resu…
);

4500 
Resu…
 = -1;

4502 (
Resu…
);

4503 
	}
}

4506 
	$BSC_Timî_CÆlback
(
uöt32_t
 
BluëoŸhSèckID
, uöt32_à
TimîID
, uöt32_à
CÆlbackP¨amëî
)

4509 if(
BluëoŸhSèckID
)

4511 
	`QCLI_Prötf
(
bÀ_group
, "St›pög sˇ¿a·î sˇ¬ög f‹ %u sec⁄ds.\n", 
CÆlbackP¨amëî
);

4514 
SˇnTimîID
 = 0;

4517 
	`St›Sˇn
(
BluëoŸhSèckID
);

4518 #ifde‡
HOME_AUTOMATION


4519 if(
blb_num_bulbs_found
)

4528 
	`BLBDCÀ¨TempSˇnD©a
();

4529 
blb_num_bulbs_found
 = 0;

4534 
	}
}

4539 
	$MscSèπSˇn
(
uöt32_t
 
BluëoŸhSèckID
, 
q≠i_BLE_GAP_LE_Fûãr_Pﬁicy_t
 
FûãrPﬁicy
, 
SˇnDuøti⁄
)

4541 
Resu…
 = 0;

4543 
	`QCLI_Prötf
(
bÀ_group
, "Msc scanÉnter \n");

4546 if(
BluëoŸhSèckID
)

4548 
	`QCLI_Prötf
(
bÀ_group
, "Ms¯vÆid bà°ack id %d\n", 
BluëoŸhSèckID
);

4552 if(!(
BLEP¨amëîs
.
Fœgs
 & 
BLE_PARAMETERS_FLAGS_SCAN_PARAMETERS_VALID
))

4555 
BLEP¨amëîs
.
SˇnP¨amëîs
.
SˇnWödow
 = 50;

4556 
BLEP¨amëîs
.
SˇnP¨amëîs
.
SˇnI¡îvÆ
 = 100;

4560 
BLEP¨amëîs
.
Fœgs
 |
BLE_PARAMETERS_FLAGS_SCAN_PARAMETERS_VALID
;

4563 
	`QCLI_Prötf
(
bÀ_group
, "Msc before scan duration \n");

4566 if(
SˇnDuøti⁄
)

4569 
Resu…
 = 
	`q≠i_BLE_BSC_SèπTimî
(
BluëoŸhSèckID
, (
SˇnDuøti⁄
 * 1000), 
BSC_Timî_CÆlback
, ScanDuration);

4570 if(
Resu…
 > 0)

4573 
SˇnTimîID
 = ()
Resu…
;

4575 
Resu…
 = 0;

4579 
Resu…
 = 0;

4583 if(!
Resu…
)

4587 
Resu…
 = 
	`q≠i_BLE_GAP_LE_Pîf‹m_Sˇn
(
BluëoŸhSèckID
, 
QAPI_BLE_ST_ACTIVE_E
, 
BLEP¨amëîs
.
SˇnP¨amëîs
.
SˇnI¡îvÆ
, BLEP¨amëîs.SˇnP¨amëîs.
SˇnWödow
, 
QAPI_BLE_LAT_PUBLIC_E
, 
FûãrPﬁicy
, 
TRUE
, 
BLBD_GAP_LE_Evít_CÆlback
, 0);

4588 if(!
Resu…
)

4589 
	`QCLI_Prötf
(
bÀ_group
, "Ms¯sˇ¿°¨ãd suc˚ssfuŒy. Sˇ¿Wödow: %u, Sˇ¿I¡îvÆ: %u.\n", ()
BLEP¨amëîs
.
SˇnP¨amëîs
.
SˇnWödow
, ()BLEP¨amëîs.SˇnP¨amëîs.
SˇnI¡îvÆ
);

4591 
	`QCLI_Prötf
(
bÀ_group
, "Ms¯u«bÀÅÿ≥rf‹m sˇn: %d\n", 
Resu…
);

4594 
	`QCLI_Prötf
(
bÀ_group
, "Ms¯u«bÀÅÿ°¨àsˇ¿timî: %d\n", 
Resu…
);

4597 
Resu…
 = -1;

4599 (
Resu…
);

4600 
	}
}

4603 
	$blbd_disc⁄√˘i⁄_ªsu…_ˇŒback
()

4606 
BLBD_Q_t
 *
blbd_sig
 = &
disc⁄√˘i⁄_ªsu…_sig«l
;

4607 
	`quπ_pùe_£nd
 (
blbd_q
, &
blbd_sig
);

4609 
	}
}

4613 
	$blbd_timî_ˇŒback
()

4617 
BLBD_Q_t
 *
blbd_sig
 = &
timî_sig«l
;

4618 
	`quπ_pùe_£nd
 (
blbd_q
, &
blbd_sig
);

4619 
	}
}

4623 
	$blbd2_thªad
(*
∑øm
)

4625 
Resu…
 = 0;

4627 
˙t
 = 0;

4628 
c⁄√˘i⁄_timî_⁄
 = 0;

4629 
c⁄√˘i⁄_ticks
 = 0;

4631 
BLBD_Cª©e_Timî_Aâr
.
de„ºabÀ
 = 
Ál£
;

4632 
BLBD_Cª©e_Timî_Aâr
.
cb_ty≥
 = 
QAPI_TIMER_FUNC1_CB_TYPE
;

4633 
BLBD_Cª©e_Timî_Aâr
.
sigs_func_±r
 = 
blbd_timî_ˇŒback
;

4634 
BLBD_Cª©e_Timî_Aâr
.
sigs_mask_d©a
 = 
BLBD_PERIODIC_TIMER_SIGNAL_INTR
;

4635 
Resu…
 = 
	`q≠i_Timî_Def
(&(
PîiodicSˇnTimî
), &
BLBD_Cª©e_Timî_Aâr
);

4638 
BLBD_Së_Timî_Aâr
.
time
 = 
blbd_duøti⁄
;

4639 
BLBD_Së_Timî_Aâr
.
ªlﬂd
 = 
åue
;

4640 
BLBD_Së_Timî_Aâr
.
max_de„ºabÀ_timeout
 = 0;

4641 
BLBD_Së_Timî_Aâr
.
unô
 = 
QAPI_TIMER_UNIT_MSEC
;

4642 
Resu…
 = 
	`q≠i_Timî_Së
(
PîiodicSˇnTimî
, &
BLBD_Së_Timî_Aâr
);

4644 
	`QCLI_Prötf
(
bÀ_group
, "BLBD Thread started\n");

4652 
	`quπ_pùe_ª˚ive
 (
blbd_q
, &
blbd_qd©a
);

4654 
	`QCLI_Prötf
(
bÀ_group
, "BLBD sig«»ª˚ived %u\n", 
blbd_qd©a
->
evít_ty≥
);

4656 if(
blbd_qd©a
->
evít_ty≥
 =
BLBD_PERIODIC_TIMER_SIGNAL_INTR
)

4659 
	`QCLI_Prötf
(
bÀ_group
, "BLBDÅimî sig«»ª˚ived 0x%d\n", 
blbd_sˇn_≥rmôãd
);

4661 if(
c⁄√˘i⁄_timî_⁄
)

4663 
	`QCLI_Prötf
(
bÀ_group
, "BLBD connectionÅimer on\n");

4664 
c⁄√˘i⁄_ticks
++;

4665 if(
c⁄√˘i⁄_ticks
 =
BLBD_CONNECTION_TICKS
)

4667 
	`Re£tBLBDSñe˘edDevi˚D©a
();

4668 
c⁄√˘i⁄_timî_⁄
 = 0;

4669 
c⁄√˘i⁄_ticks
 = 0;

4670 
	`blbd_disc⁄√˘i⁄_ªsu…_ˇŒback
();

4673 if(
blbd_sˇn_≥rmôãd
)

4676 
˙t
%6)

4679 
˙t
 = 0;

4681 if(
	`blbd_°¨t_sˇn
())

4683 
BulbSèã
 = 
BULB_STATE_DISCONNECTED
;

4684 
	`QCLI_Prötf
(
bÀ_group
, "BLBDÅimer/scanÉventÑeceived\n");

4685 
blbd_sˇn_≥rmôãd
 = 0;

4694 
˙t
++;

4697 if(
blbd_qd©a
->
evít_ty≥
 =
BLBD_SCAN_STOPPED_SIGNAL_INTR
)

4701 
blbd_sˇn_≥rmôãd
 = 1;

4703 if(
blbd_qd©a
->
evít_ty≥
 =
BLBD_SCAN_RESULT_SIGNAL_INTR
 ||

4704 
blbd_qd©a
->
evít_ty≥
 =
BLBD_CONNECTION_FAILED_SIGNAL_INTR
)

4709 
c⁄√˘i⁄_ticks
 = 0;

4710 
	`QCLI_Prötf
(
bÀ_group
, "BLBD scan completedÉventÑeceived\n");

4711 if(
c⁄√˘i⁄_timî_⁄
 = 
	`blbd_°¨t_c⁄√˘
())

4712 
blbd_sˇn_≥rmôãd
 = 0;

4714 
blbd_sˇn_≥rmôãd
 = 1;

4716 if(
blbd_qd©a
->
evít_ty≥
 =
BLBD_CONNECTION_SUCCESS_SIGNAL_INTR
)

4719 
	`QCLI_Prötf
(
bÀ_group
, "BLBD connection completedÉventÑeceived\n");

4724 
c⁄√˘i⁄_timî_⁄
 = 0;

4725 
	`blbd_discovî_£rvi˚s
();

4728 if(
blbd_qd©a
->
evít_ty≥
 =
BLBD_SERVICE_DISCOVERY_SIGNAL_INTR
)

4732 
c⁄√˘i⁄_ticks
 = 0;

4733 
	`QCLI_Prötf
(
bÀ_group
, "BLBD service discovery completedÉventÑeceived\n");

4734 if(
c⁄√˘i⁄_timî_⁄
 = 
	`blbd_°¨t_c⁄√˘
())

4735 
blbd_sˇn_≥rmôãd
 = 0;

4737 
blbd_sˇn_≥rmôãd
 = 1;

4740 if(
blbd_qd©a
->
evít_ty≥
 =
BLBD_SCAN_RESULT
)

4742 
	`BLBDAddSˇnE¡ry
(
blbd_qd©a
->
d©a
);

4743 
	`‰ì
(
blbd_qd©a
);

4745 if(
blbd_qd©a
->
evít_ty≥
 =
BLBD_CONNECTION_RESULT
)

4747 
	`AssignBLBDC⁄√˘i⁄Info
(
blbd_qd©a
->
d©a
);

4748 
	`‰ì
(
blbd_qd©a
);

4750 if(
blbd_qd©a
->
evít_ty≥
 =
BLBD_DISCONNECTION_RESULT
)

4752 if(
	`H™dÀBLBDDisc⁄√˘i⁄
(
blbd_qd©a
->
d©a
))

4753 
	`blbd_disc⁄√˘i⁄_ªsu…_ˇŒback
();

4754 
	`‰ì
(
blbd_qd©a
);

4756 if(
blbd_qd©a
->
evít_ty≥
 =
BLBD_SERVICE_DISCOVERY_RESULT
)

4761 i‡(
blbd_qd©a
->
evít_ty≥
 =
BLBD_THREAD_STOP
)

4770 
	`QCLI_Prötf
(
bÀ_group
, "SignalÑeceivedÅo disable BLBDÅhread\n");

4772 
	`quπ_pùe_dñëe
(
blbd_q
);

4774 
	`q≠i_Timî_Undef
(
PîiodicSˇnTimî
);

4776 
	`quπ_thªad_°›
();

4779 
	}
}

4783 
	$BLBD_C⁄figuªC≠abûôõs
(
q≠i_BLE_GAP_LE_Exãnded_Paúög_C≠abûôõs_t
 *
C≠abûôõs
)

4786 if(
C≠abûôõs
)

4789 
	`mem£t
(
C≠abûôõs
, 0, 
QAPI_BLE_GAP_LE_EXTENDED_PAIRING_CAPABILITIES_SIZE
);

4792 
C≠abûôõs
->
B⁄dög_Ty≥
 = 
QAPI_BLE_LBT_BONDING_E
;

4793 
C≠abûôõs
->
IO_C≠abûôy
 = 
QAPI_BLE_LIC_NO_INPUT_NO_OUTPUT_E
;

4794 
C≠abûôõs
->
Fœgs
 = 0;

4798 
C≠abûôõs
->
Fœgs
 |
QAPI_BLE_GAP_LE_EXTENDED_PAIRING_CAPABILITIES_FLAGS_LOCAL_OOB_DATA_VALID
;

4799 
C≠abûôõs
->
LoˇlOOBD©a
.
Fœgs
 = 0;

4800 
C≠abûôõs
->
LoˇlOOBD©a
.
C⁄fúm©i⁄
 = 
LoˇlOOBC⁄fúm©i⁄
;

4801 
C≠abûôõs
->
LoˇlOOBD©a
.
R™domizî
 = 
LoˇlOOBR™domizî
;

4819 
C≠abûôõs
->
Maximum_En¸y±i⁄_Key_Size
 = 
QAPI_BLE_GAP_LE_MAXIMUM_ENCRYPTION_KEY_SIZE
;

4826 
C≠abûôõs
->
Re˚ivög_Keys
.
En¸y±i⁄_Key
 = 
TRUE
;

4827 
C≠abûôõs
->
Re˚ivög_Keys
.
Idítifiˇti⁄_Key
 = 
TRUE
;

4828 
C≠abûôõs
->
Re˚ivög_Keys
.
Signög_Key
 = 
FALSE
;

4829 
C≠abûôõs
->
Re˚ivög_Keys
.
Lök_Key
 = 
FALSE
;

4831 
C≠abûôõs
->
Sídög_Keys
.
En¸y±i⁄_Key
 = 
TRUE
;

4832 
C≠abûôõs
->
Sídög_Keys
.
Idítifiˇti⁄_Key
 = 
TRUE
;

4833 
C≠abûôõs
->
Sídög_Keys
.
Signög_Key
 = 
FALSE
;

4834 
C≠abûôõs
->
Sídög_Keys
.
Lök_Key
 = 
FALSE
;

4836 
	}
}

4844 
	$SídPaúögReque°
(
q≠i_BLE_BD_ADDR_t
 
BD_ADDR
, 
boﬁón_t
 
C⁄√˘i⁄Ma°î
)

4846 
ªt_vÆ
;

4847 
BﬂrdSå_t
 
BﬂrdSå
;

4848 
q≠i_BLE_GAP_LE_Exãnded_Paúög_C≠abûôõs_t
 
ExãndedC≠abûôõs
;

4851 if(
BluëoŸhSèckID
)

4854 
	`BLBD_C⁄figuªC≠abûôõs
(&
ExãndedC≠abûôõs
);

4857 
	`BD_ADDRToSå
(
BD_ADDR
, 
BﬂrdSå
);

4858 
	`QCLI_Prötf
(
bÀ_group
, "Aâem±ögÅÿPaúÅÿ%s.\n", 
BﬂrdSå
);

4860 
	`Di•œyPaúögInf‹m©i⁄
(&
ExãndedC≠abûôõs
);

4863 if(
C⁄√˘i⁄Ma°î
)

4874 
BLBD_SecurôyRemŸeBD_ADDR
 = 
BD_ADDR
;

4877 if((
ªt_vÆ
 = 
	`q≠i_BLE_GAP_LE_Exãnded_Paú_RemŸe_Devi˚
(
BluëoŸhSèckID
, 
BLBD_SecurôyRemŸeBD_ADDR
, &
ExãndedC≠abûôõs
, 
BLBD_GAP_LE_Evít_CÆlback
, 0)Ë=
QAPI_BLE_BTPS_ERROR_SECURE_CONNECTIONS_NOT_SUPPORTED
)

4882 
	`QCLI_Prötf
(
bÀ_group
, "Secure ConnectionsÇot supported, disabling Secure Connections.\n");

4884 
ExãndedC≠abûôõs
.
Fœgs
 &~
QAPI_BLE_GAP_LE_EXTENDED_PAIRING_CAPABILITIES_FLAGS_SECURE_CONNECTIONS
;

4887 
ªt_vÆ
 = 
	`q≠i_BLE_GAP_LE_Exãnded_Paú_RemŸe_Devi˚
(
BluëoŸhSèckID
, 
BLBD_SecurôyRemŸeBD_ADDR
, &
ExãndedC≠abûôõs
, 
BLBD_GAP_LE_Evít_CÆlback
, 0);

4890 
	`QCLI_Prötf
(
bÀ_group
, " GAP_LE_Exãnded_Paú_RemŸe_Devi˚Ñëu∫ed %d.\n", 
ªt_vÆ
);

4896 
ªt_vÆ
 = 
	`q≠i_BLE_GAP_LE_Exãnded_Reque°_Securôy
(
BluëoŸhSèckID
, 
BD_ADDR
, &
ExãndedC≠abûôõs
, 
BLBD_GAP_LE_Evít_CÆlback
, 0);

4898 
	`QCLI_Prötf
(
bÀ_group
, " GAP_LE_Reque°_SecurôyÑëu∫ed %d.\n", 
ªt_vÆ
);

4903 
	`QCLI_Prötf
(
bÀ_group
, "Stack ID Invalid.\n");

4905 
ªt_vÆ
 = -1;

4908 (
ªt_vÆ
);

4909 
	}
}

4919 
	$BLBDP›uœãH™dÀs
(
AIOP_Clõ¡_Inf‹m©i⁄_t
 *
Clõ¡Info
,

4920 
q≠i_BLE_GATT_Sîvi˚_Discovîy_Indiˇti⁄_D©a_t
 *
Sîvi˚DiscovîyD©a
)

4922 
Index
;

4923 
Index2
;

4924 
q≠i_BLE_GATT_Ch¨a˘îi°ic_Inf‹m©i⁄_t
 *
Ch¨a˘îi°icInfoPå
;

4925 
BLBD_DEVICE_CHARS
 *
In°™˚InfoPå
;

4927 
	`QCLI_Prötf
(
bÀ_group
, "Inside BLBDPopulateHandles\n");

4933 if((
Clõ¡Info
Ë&& (
Sîvi˚DiscovîyD©a
))

4937 
	`QCLI_Prötf
(
bÀ_group
, "Inside BLBDPopulateHandles matched service uuid\n");

4939 
Ch¨a˘îi°icInfoPå
 = 
Sîvi˚DiscovîyD©a
->
Ch¨a˘îi°icInf‹m©i⁄Li°
;

4940 if(
Ch¨a˘îi°icInfoPå
)

4943 
In°™˚InfoPå
 = 
	`mÆloc
((
BLBD_DEVICE_CHARS
) * 1);

4946 
Index
 = 0; Index < 
Sîvi˚DiscovîyD©a
->
NumbîOfCh¨a˘îi°ics
; Index++)

4950 if(
	`QAPI_BLE_BLBD_COMPARE_CHAR_UUID_TO_UUID_16
(
Ch¨a˘îi°icInfoPå
[
Index
].
Ch¨a˘îi°ic_UUID
.
UUID
.
UUID_16
 )){

4951 
In°™˚InfoPå
[0].
Pr›îtõs
 = 
Ch¨a˘îi°icInfoPå
[
Index
].
Ch¨a˘îi°ic_Pr›îtõs
;

4952 
	`QCLI_Prötf
(
bÀ_group
, "Found get/set colour charecteristic\n");

4955 
In°™˚InfoPå
[0].
Ch¨a˘îi°ic_H™dÀ
 = 
Ch¨a˘îi°icInfoPå
[
Index
].Characteristic_Handle;

4956 
bulb_ch¨_h™dÀ
 = 
Ch¨a˘îi°icInfoPå
[
Index
].
Ch¨a˘îi°ic_H™dÀ
;

4957 
	`BLBDWrôeMŸi⁄D©a
(0xFFFFFFFF);

4958 
BulbSèã
 = 
BULB_STATE_ON
;

4970 
	`QCLI_Prötf
(
bÀ_group
, " H™dÀ: 0x%04X\n", 
Ch¨a˘îi°icInfoPå
[
Index
].
Ch¨a˘îi°ic_H™dÀ
);

4971 
	`QCLI_Prötf
(
bÀ_group
, " Pr›îtõs: 0x%02X\n", 
Ch¨a˘îi°icInfoPå
[
Index
].
Ch¨a˘îi°ic_Pr›îtõs
);

4972 
	`QCLI_Prötf
(
bÀ_group
, " UUID: 0x");

4973 
	`Di•œyUUID
(&(
Ch¨a˘îi°icInfoPå
[
Index
].
Ch¨a˘îi°ic_UUID
));

4980 
	}
}

4983 
QAPI_BLE_BTPSAPI
 
	$GATT_BLBD_Sîvi˚_Discovîy_Evít_CÆlback
(
uöt32_t
 
BluëoŸhSèckID
, 
q≠i_BLE_GATT_Sîvi˚_Discovîy_Evít_D©a_t
 *
GATT_Sîvi˚_Discovîy_Evít_D©a
, uöt32_à
CÆlbackP¨amëî
)

4985 
Devi˚Info_t
 *
Devi˚Info
;

4986 
	`QCLI_Prötf
(
bÀ_group
,"Discovred1");

4987 if((
BluëoŸhSèckID
Ë&& (
GATT_Sîvi˚_Discovîy_Evít_D©a
))

4989 
	`QCLI_Prötf
(
bÀ_group
,"Discovred2");

4990 if((
Devi˚Info
 = 
	`SórchDevi˚InfoE¡ryByBD_ADDR
(&
Devi˚InfoLi°
, 
Cuºít_C⁄n_Addr
)Ë!
NULL
)

4992 
	`QCLI_Prötf
(
bÀ_group
,"Discovred3");

4993 
GATT_Sîvi˚_Discovîy_Evít_D©a
->
Evít_D©a_Ty≥
)

4995 
QAPI_BLE_ET_GATT_SERVICE_DISCOVERY_INDICATION_E
:

4997 if(
GATT_Sîvi˚_Discovîy_Evít_D©a
->
Evít_D©a
.
GATT_Sîvi˚_Discovîy_Indiˇti⁄_D©a
)

4999 
	`QCLI_Prötf
(
bÀ_group
, "Service 0x%04X - 0x%04X, UUID: ",

5000 
GATT_Sîvi˚_Discovîy_Evít_D©a
->
Evít_D©a
.
GATT_Sîvi˚_Discovîy_Indiˇti⁄_D©a
->
Sîvi˚Inf‹m©i⁄
.
Sîvi˚_H™dÀ
,

5001 
GATT_Sîvi˚_Discovîy_Evít_D©a
->
Evít_D©a
.
GATT_Sîvi˚_Discovîy_Indiˇti⁄_D©a
->
Sîvi˚Inf‹m©i⁄
.
End_Group_H™dÀ
);

5002 
	`Di•œyUUID
(&(
GATT_Sîvi˚_Discovîy_Evít_D©a
->
Evít_D©a
.
GATT_Sîvi˚_Discovîy_Indiˇti⁄_D©a
->
Sîvi˚Inf‹m©i⁄
.
UUID
));

5003 
	`QCLI_Prötf
(
bÀ_group
, "\n");

5006 
	`BLBDP›uœãH™dÀs
(&(
Devi˚Info
->
AIOPClõ¡Info
), 
GATT_Sîvi˚_Discovîy_Evít_D©a
->
Evít_D©a
.
GATT_Sîvi˚_Discovîy_Indiˇti⁄_D©a
);

5010 
QAPI_BLE_ET_GATT_SERVICE_DISCOVERY_COMPLETE_E
:

5012 if(
GATT_Sîvi˚_Discovîy_Evít_D©a
->
Evít_D©a
.
GATT_Sîvi˚_Discovîy_Com∂ëe_D©a
)

5014 
	`QCLI_Prötf
(
bÀ_group
, "Sîvi˚ Discovîy O≥øti⁄ Com∂ëe, Sètu†0x%02X.\n", 
GATT_Sîvi˚_Discovîy_Evít_D©a
->
Evít_D©a
.
GATT_Sîvi˚_Discovîy_Com∂ëe_D©a
->
Sètus
);

5018 
Devi˚Info
->
Fœgs
 &~
DEVICE_INFO_FLAGS_SERVICE_DISCOVERY_OUTSTANDING
;

5028 
	}
}

5038 
QCLI_Comm™d_Sètus_t
 
	$DiscovîBLBDSîvi˚s
(
q≠i_BLE_BD_ADDR_t
 
BD_ADDR
)

5040 
Resu…
;

5041 
Devi˚Info_t
 *
Devi˚Info
;

5042 
QCLI_Comm™d_Sètus_t
 
ªt_vÆ
;

5043 
q≠i_BLE_GATT_Aâribuã_H™dÀ_Group_t
 
DiscovîyH™dÀR™ge
;

5046 if(!
	`q≠i_BLE_BSC_LockBluëoŸhSèck
(
BluëoŸhSèckID
))

5049 if((
Devi˚Info
 = 
	`SórchDevi˚InfoE¡ryByBD_ADDR
(&
Devi˚InfoLi°
,

5050 
BD_ADDR
)Ë!
NULL
)

5052 
	`QCLI_Prötf
(
bÀ_group
, "inside DiscoverBLBDServices \n");

5057 if(!(
Devi˚Info
->
Fœgs
 & 
DEVICE_INFO_FLAGS_SERVICE_DISCOVERY_OUTSTANDING
))

5060 
Resu…
 = 
	`q≠i_BLE_GATT_Sèπ_Sîvi˚_Discovîy
(
BluëoŸhSèckID
, 
Devi˚Info
->
C⁄√˘i⁄ID
, 0, 
NULL
,

5061 
GATT_BLBD_Sîvi˚_Discovîy_Evít_CÆlback
, 0);

5063 if(!
Resu…
)

5066 
	`QCLI_Prötf
(
bÀ_group
, "qapi_BLE_GATT_Service_Discovery_Start() success.\n");

5070 
Devi˚Info
->
Fœgs
 |
DEVICE_INFO_FLAGS_SERVICE_DISCOVERY_OUTSTANDING
;

5072 
ªt_vÆ
 = 
QCLI_STATUS_SUCCESS_E
;

5077 
	`QCLI_Prötf
(
bÀ_group
, "Eº‹ - BLBD GATT_Sîvi˚_Discovîy_SèπÑëu∫ed %d.\n", 
Resu…
);

5078 
ªt_vÆ
 = 
QCLI_STATUS_ERROR_E
;

5085 
ªt_vÆ
 = 
QCLI_STATUS_ERROR_E
;

5090 
	`QCLI_Prötf
(
bÀ_group
, "No Device Info.\n");

5092 
ªt_vÆ
 = 
QCLI_STATUS_ERROR_E
;

5096 
	`q≠i_BLE_BSC_UnLockBluëoŸhSèck
(
BluëoŸhSèckID
);

5100 
	`QCLI_Prötf
(
bÀ_group
, "UnableÅoácquire Bluetooth Stack Lock.\n");

5102 
ªt_vÆ
 = 
QCLI_STATUS_ERROR_E
;

5104 (
ªt_vÆ
);

5105 
	}
}

5112 
	$En¸y±i⁄Inf‹m©i⁄Reque°Re•⁄£
(
q≠i_BLE_BD_ADDR_t
 
BD_ADDR
, 
uöt8_t
 
KeySize
, 
q≠i_BLE_GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄_t
 *
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
)

5114 
ªt_vÆ
;

5115 
uöt16_t
 
LoˇlDiv
;

5118 if(
BluëoŸhSèckID
)

5121 if((!
	`QAPI_BLE_COMPARE_NULL_BD_ADDR
(
BD_ADDR
)Ë&& (
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
))

5123 
	`QCLI_Prötf
(
bÀ_group
, " Calling GAP_LE_Generate_Long_Term_Key.\n");

5126 
ªt_vÆ
 = 
	`q≠i_BLE_GAP_LE_Gíî©e_L⁄g_Tîm_Key
(
BluëoŸhSèckID
, (
q≠i_BLE_En¸y±i⁄_Key_t
 *)(&
DHK
), (q≠i_BLE_En¸y±i⁄_Key_à*)(&
ER
), &(
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
->
Authítiˇti⁄_D©a
.
En¸y±i⁄_Inf‹m©i⁄
.
LTK
), &
LoˇlDiv
, &(GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄->Authítiˇti⁄_D©a.En¸y±i⁄_Inf‹m©i⁄.
EDIV
), &(GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄->Authítiˇti⁄_D©a.En¸y±i⁄_Inf‹m©i⁄.
R™d
));

5127 if(!
ªt_vÆ
)

5129 
	`QCLI_Prötf
(
bÀ_group
, " Encryption Information Request Response.\n");

5133 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
->
GAP_LE_Authítiˇti⁄_Ty≥
 = 
QAPI_BLE_LAR_ENCRYPTION_INFORMATION_E
;

5134 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
->
Authítiˇti⁄_D©a_Lígth
 = 
QAPI_BLE_GAP_LE_ENCRYPTION_INFORMATION_DATA_SIZE
;

5135 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
->
Authítiˇti⁄_D©a
.
En¸y±i⁄_Inf‹m©i⁄
.
En¸y±i⁄_Key_Size
 = 
KeySize
;

5137 
ªt_vÆ
 = 
	`q≠i_BLE_GAP_LE_Authítiˇti⁄_Re•⁄£
(
BluëoŸhSèckID
, 
BD_ADDR
, 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
);

5138 if(!
ªt_vÆ
)

5140 
	`QCLI_Prötf
(
bÀ_group
, " qapi_BLE_GAP_LE_Authentication_Response (larEncryptionInformation) success.\n");

5144 
	`QCLI_Prötf
(
bÀ_group
, " Eº‹ - SM_Gíî©e_L⁄g_Tîm_KeyÑëu∫ed %d.\n", 
ªt_vÆ
);

5149 
	`QCLI_Prötf
(
bÀ_group
, " Eº‹ - SM_Gíî©e_L⁄g_Tîm_KeyÑëu∫ed %d.\n", 
ªt_vÆ
);

5154 
	`QCLI_Prötf
(
bÀ_group
, "Invalid Parameters.\n");

5156 
ªt_vÆ
 = -1;

5161 
	`QCLI_Prötf
(
bÀ_group
, "Stack ID Invalid.\n");

5163 
ªt_vÆ
 = -1;

5166 (
ªt_vÆ
);

5167 
	}
}

5172 
QAPI_BLE_BTPSAPI
 
	$BLBD_GAP_LE_Evít_CÆlback
(
uöt32_t
 
BluëoŸhSèckID
, 
q≠i_BLE_GAP_LE_Evít_D©a_t
 *
GAP_LE_Evít_D©a
, uöt32_à
CÆlbackP¨amëî
)

5174 
boﬁón_t
 
Di•œyProm±
;

5175 
Resu…
;

5176 
uöt16_t
 
EDIV
;

5177 
BﬂrdSå_t
 
BﬂrdSå
;

5178 
Index
;

5179 
Devi˚Info_t
 *
Devi˚Info
;

5180 
q≠i_BLE_R™dom_Numbî_t
 
R™domNumbî
;

5181 
q≠i_BLE_L⁄g_Tîm_Key_t
 
Gíî©edLTK
;

5182 
q≠i_BLE_GAP_LE_Securôy_Inf‹m©i⁄_t
 
GAP_LE_Securôy_Inf‹m©i⁄
;

5183 
q≠i_BLE_GAP_LE_C⁄√˘i⁄_P¨amëîs_t
 
C⁄√˘i⁄P¨ams
;

5184 
q≠i_BLE_GAP_LE_Advîtisög_Rï‹t_D©a_t
 *
Devi˚E¡ryPå
;

5185 
q≠i_BLE_GAP_LE_Authítiˇti⁄_Evít_D©a_t
 *
Authítiˇti⁄_Evít_D©a
;

5186 
q≠i_BLE_GAP_LE_Dúe˘_Advîtisög_Rï‹t_D©a_t
 *
Dúe˘Devi˚E¡ryPå
;

5187 #ifde‡
V2


5188 
q≠i_BLE_GAP_LE_Exãnded_Advîtisög_Rï‹t_D©a_t
 *
ExtDevi˚E¡ryPå
;

5190 
q≠i_BLE_GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄_t
 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
;

5193 if((
BluëoŸhSèckID
Ë&& (
GAP_LE_Evít_D©a
))

5195 
Di•œyProm±
 = 
åue
;

5197 
GAP_LE_Evít_D©a
->
Evít_D©a_Ty≥
)

5199 #ifde‡
V2


5200 
QAPI_BLE_ET_LE_SCAN_TIMEOUT_E
:

5201 
	`QCLI_Prötf
(
bÀ_group
, "ëLE_Sˇn_Timeouàwôh sizê%d.\n",()
GAP_LE_Evít_D©a
->
Evít_D©a_Size
);

5203 
QAPI_BLE_ET_LE_PHY_UPDATE_COMPLETE_E
:

5204 
	`QCLI_Prötf
(
bÀ_group
, "ëLE_PHY_Upd©e_Com∂ëêwôh sizê%d.\n",()
GAP_LE_Evít_D©a
->
Evít_D©a_Size
);

5206 
	`QCLI_Prötf
(
bÀ_group
, " Sètus: %d.\n", ()(
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_Phy_Upd©e_Com∂ëe_Evít_D©a
->
Sètus
));

5207 
	`QCLI_Prötf
(
bÀ_group
, " Addªss: 0x%02X%02X%02X%02X%02X%02X.\n", 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_Phy_Upd©e_Com∂ëe_Evít_D©a
->
BD_ADDR
.
BD_ADDR5
,

5208 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_Phy_Upd©e_Com∂ëe_Evít_D©a
->
BD_ADDR
.
BD_ADDR4
,

5209 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_Phy_Upd©e_Com∂ëe_Evít_D©a
->
BD_ADDR
.
BD_ADDR3
,

5210 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_Phy_Upd©e_Com∂ëe_Evít_D©a
->
BD_ADDR
.
BD_ADDR2
,

5211 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_Phy_Upd©e_Com∂ëe_Evít_D©a
->
BD_ADDR
.
BD_ADDR1
,

5212 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_Phy_Upd©e_Com∂ëe_Evít_D©a
->
BD_ADDR
.
BD_ADDR0
);

5219 
QAPI_BLE_ET_LE_CHANNEL_SELECTION_ALGORITHM_UPDATE_E
:

5220 
	`QCLI_Prötf
(
bÀ_group
, "ëLE_Ch™√l_Sñe˘i⁄_Alg‹ôhm_Upd©êwôh sizê%d.\n", ()
GAP_LE_Evít_D©a
->
Evít_D©a_Size
);

5223 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_Ch™√l_Sñe˘i⁄_Alg‹ôhm_Upd©e_Evít_D©a
->
Ch™√l_Sñe˘i⁄_Alg‹ôhm
)

5225 
QAPI_BLE_SA_ALGORITHM_NUM1_E
:

5226 
	`QCLI_Prötf
(
bÀ_group
, " Channel Selection Algorithm: %s.\n", "CSA #1");

5228 
QAPI_BLE_SA_ALGORITHM_NUM2_E
:

5229 
	`QCLI_Prötf
(
bÀ_group
, " Channel Selection Algorithm: %s.\n", "CSA #2");

5232 
	`QCLI_Prötf
(
bÀ_group
, " Channel Selection Algorithm: %s.\n", "CSA Unkown");

5237 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_Ch™√l_Sñe˘i⁄_Alg‹ôhm_Upd©e_Evít_D©a
->
C⁄√˘i⁄_Addªss_Ty≥
)

5239 
QAPI_BLE_LAT_PUBLIC_E
:

5240 
	`QCLI_Prötf
(
bÀ_group
, " Connection Address Type: %s.\n", "QAPI_BLE_LAT_PUBLIC_E");

5242 
QAPI_BLE_LAT_RANDOM_E
:

5243 
	`QCLI_Prötf
(
bÀ_group
, " Connection Address Type: %s.\n", "QAPI_BLE_LAT_RANDOM_E");

5245 
QAPI_BLE_LAT_PUBLIC_IDENTITY_E
:

5246 
	`QCLI_Prötf
(
bÀ_group
, " Connection Address Type: %s.\n", "QAPI_BLE_LAT_PUBLIC_IDENTITY_E");

5248 
QAPI_BLE_LAT_RANDOM_IDENTITY_E
:

5249 
	`QCLI_Prötf
(
bÀ_group
, " Connection Address Type: %s.\n", "QAPI_BLE_LAT_RANDOM_IDENTITY_E");

5252 
	`QCLI_Prötf
(
bÀ_group
, " Connection Address Type: Invalid.\n");

5256 
	`BD_ADDRToSå
(
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_Ch™√l_Sñe˘i⁄_Alg‹ôhm_Upd©e_Evít_D©a
->
C⁄√˘i⁄_Addªss
, 
BﬂrdSå
);

5257 
	`QCLI_Prötf
(
bÀ_group
, " C⁄√˘i⁄ Addªss: %s.\n", 
BﬂrdSå
);

5261 
QAPI_BLE_ET_LE_DATA_LENGTH_CHANGE_E
:

5262 
	`QCLI_Prötf
(
bÀ_group
, "ëLE_D©a_Lígth_Ch™gêwôh sizê%d.\n", ()
GAP_LE_Evít_D©a
->
Evít_D©a_Size
);

5264 
	`BD_ADDRToSå
(
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_D©a_Lígth_Ch™ge_Evít_D©a
->
BD_ADDR
, 
BﬂrdSå
);

5265 
	`QCLI_Prötf
(
bÀ_group
, " C⁄√˘i⁄ Addªss: %s.\n", 
BﬂrdSå
);

5266 
	`QCLI_Prötf
(
bÀ_group
, " Max Tx O˘ës: %u.\n", 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_D©a_Lígth_Ch™ge_Evít_D©a
->
MaxTxO˘ës
);

5267 
	`QCLI_Prötf
(
bÀ_group
, " Max Tx Time: %u.\n", 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_D©a_Lígth_Ch™ge_Evít_D©a
->
MaxTxTime
);

5268 
	`QCLI_Prötf
(
bÀ_group
, " Max Rx O˘ës: %u.\n", 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_D©a_Lígth_Ch™ge_Evít_D©a
->
MaxRxO˘ës
);

5269 
	`QCLI_Prötf
(
bÀ_group
, " Max Rx Time: %u.\n", 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_D©a_Lígth_Ch™ge_Evít_D©a
->
MaxRxTime
);

5273 
QAPI_BLE_ET_LE_ADVERTISING_REPORT_E
:

5274 
	`QCLI_Prötf
(
bÀ_group
, "ëLE_Advîtisög_Rï‹àwôh sizê%d.\n",()
GAP_LE_Evít_D©a
->
Evít_D©a_Size
);

5275 
	`QCLI_Prötf
(
bÀ_group
, " %d Re•⁄£s.\n",
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_Advîtisög_Rï‹t_Evít_D©a
->
Numbî_Devi˚_E¡rõs
);

5277 
Index
 = 0; Index < 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_Advîtisög_Rï‹t_Evít_D©a
->
Numbî_Devi˚_E¡rõs
; Index++)

5279 
Devi˚E¡ryPå
 = &(
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_Advîtisög_Rï‹t_Evít_D©a
->
Advîtisög_D©a
[
Index
]);

5281 #ifde‡
HOME_AUTOMATION


5283 *
°r
;

5284 
°r
 = 
	`GëLoˇlNameInAD
(&(
Devi˚E¡ryPå
->
Advîtisög_D©a
));

5286 if(!
	`°∫cmp
(
°r
, 
BLBD_DEVICE_SIGNATURE
,8))

5288 
	`QCLI_Prötf
(
bÀ_group
, "BLBD Pröà- devi˚ found %s, C⁄√˘ög\n", 
°r
);

5290 
	`St›Sˇn
(
BluëoŸhSèckID
);

5291 
	`C⁄√˘LEDevi˚
(
BluëoŸhSèckID
, 
FALSE
, &(
Devi˚E¡ryPå
->
BD_ADDR
),Devi˚E¡ryPå->
Addªss_Ty≥
);

5296 
Devi˚E¡ryPå
->
Addªss_Ty≥
)

5298 
QAPI_BLE_LAT_PUBLIC_E
:

5299 
	`QCLI_Prötf
(
bÀ_group
, " Address Type: %s.\n", "QAPI_BLE_LAT_PUBLIC_E");

5301 
QAPI_BLE_LAT_RANDOM_E
:

5302 
	`QCLI_Prötf
(
bÀ_group
, " Address Type: %s.\n", "QAPI_BLE_LAT_RANDOM_E");

5304 
QAPI_BLE_LAT_PUBLIC_IDENTITY_E
:

5305 
	`QCLI_Prötf
(
bÀ_group
, " Address Type: %s.\n", "QAPI_BLE_LAT_PUBLIC_IDENTITY_E");

5307 
QAPI_BLE_LAT_RANDOM_IDENTITY_E
:

5308 
	`QCLI_Prötf
(
bÀ_group
, " Address Type: %s.\n", "QAPI_BLE_LAT_RANDOM_IDENTITY_E");

5311 
	`QCLI_Prötf
(
bÀ_group
, " Address Type: Invalid.\n");

5316 
	`QCLI_Prötf
(
bÀ_group
, " Addªss: 0x%02X%02X%02X%02X%02X%02X.\n", 
Devi˚E¡ryPå
->
BD_ADDR
.
BD_ADDR5
, Devi˚E¡ryPå->BD_ADDR.
BD_ADDR4
, Devi˚E¡ryPå->BD_ADDR.
BD_ADDR3
, Devi˚E¡ryPå->BD_ADDR.
BD_ADDR2
, Devi˚E¡ryPå->BD_ADDR.
BD_ADDR1
, Devi˚E¡ryPå->BD_ADDR.
BD_ADDR0
);

5318 if(
Di•œyAdvîtisögEvítD©a
)

5321 
Devi˚E¡ryPå
->
Advîtisög_Rï‹t_Ty≥
)

5323 
QAPI_BLE_RT_CONNECTABLE_UNDIRECTED_E
:

5324 
	`QCLI_Prötf
(
bÀ_group
, " Advertising Type: %s.\n", "QAPI_BLE_RT_CONNECTABLE_UNDIRECTED_E");

5326 
QAPI_BLE_RT_CONNECTABLE_DIRECTED_E
:

5327 
	`QCLI_Prötf
(
bÀ_group
, " Advertising Type: %s.\n", "QAPI_BLE_RT_CONNECTABLE_DIRECTED_E");

5329 
QAPI_BLE_RT_SCANNABLE_UNDIRECTED_E
:

5330 
	`QCLI_Prötf
(
bÀ_group
, " Advertising Type: %s.\n", "QAPI_BLE_RT_SCANNABLE_UNDIRECTED_E");

5332 
QAPI_BLE_RT_NON_CONNECTABLE_UNDIRECTED_E
:

5333 
	`QCLI_Prötf
(
bÀ_group
, " Advertising Type: %s.\n", "QAPI_BLE_RT_NON_CONNECTABLE_UNDIRECTED_E");

5335 
QAPI_BLE_RT_SCAN_RESPONSE_E
:

5336 
	`QCLI_Prötf
(
bÀ_group
, " Advertising Type: %s.\n", "QAPI_BLE_RT_SCAN_RESPONSE_E");

5340 
	`QCLI_Prötf
(
bÀ_group
, " RSSI: %d.\n", ()(
Devi˚E¡ryPå
->
RSSI
));

5341 
	`QCLI_Prötf
(
bÀ_group
, " D©®Lígth: %d.\n", 
Devi˚E¡ryPå
->
Raw_Rï‹t_Lígth
);

5345 
QAPI_BLE_ET_LE_CONNECTION_COMPLETE_E
:

5346 
	`QCLI_Prötf
(
bÀ_group
, "ëLE_C⁄√˘i⁄_Com∂ëêwôh sizê%d.\n",()
GAP_LE_Evít_D©a
->
Evít_D©a_Size
);

5348 if(
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_C⁄√˘i⁄_Com∂ëe_Evít_D©a
)

5350 
	`BD_ADDRToSå
(
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_C⁄√˘i⁄_Com∂ëe_Evít_D©a
->
Pìr_Addªss
, 
BﬂrdSå
);

5352 
	`QCLI_Prötf
(
bÀ_group
, " Sètus: 0x%02X.\n", 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_C⁄√˘i⁄_Com∂ëe_Evít_D©a
->
Sètus
);

5353 
	`QCLI_Prötf
(
bÀ_group
, " Rﬁe: %s.\n", (
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_C⁄√˘i⁄_Com∂ëe_Evít_D©a
->
Ma°î
)?"Master":"Slave");

5354 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_C⁄√˘i⁄_Com∂ëe_Evít_D©a
->
Pìr_Addªss_Ty≥
)

5356 
QAPI_BLE_LAT_PUBLIC_E
:

5357 
	`QCLI_Prötf
(
bÀ_group
, " Address Type: %s.\n", "QAPI_BLE_LAT_PUBLIC_E");

5359 
QAPI_BLE_LAT_RANDOM_E
:

5360 
	`QCLI_Prötf
(
bÀ_group
, " Address Type: %s.\n", "QAPI_BLE_LAT_RANDOM_E");

5362 
QAPI_BLE_LAT_PUBLIC_IDENTITY_E
:

5363 
	`QCLI_Prötf
(
bÀ_group
, " Address Type: %s.\n", "QAPI_BLE_LAT_PUBLIC_IDENTITY_E");

5365 
QAPI_BLE_LAT_RANDOM_IDENTITY_E
:

5366 
	`QCLI_Prötf
(
bÀ_group
, " Address Type: %s.\n", "QAPI_BLE_LAT_RANDOM_IDENTITY_E");

5369 
	`QCLI_Prötf
(
bÀ_group
, " Address Type: Invalid.\n");

5372 
	`QCLI_Prötf
(
bÀ_group
, " BD_ADDR: %s.\n", 
BﬂrdSå
);

5374 if(
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_C⁄√˘i⁄_Com∂ëe_Evít_D©a
->
Sètus
 =
QAPI_BLE_HCI_ERROR_CODE_NO_ERROR
)

5376 
	`QCLI_Prötf
(
bÀ_group
, " C⁄√˘i⁄ I¡îvÆ: %u.\n", ()
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_C⁄√˘i⁄_Com∂ëe_Evít_D©a
->
Cuºít_C⁄√˘i⁄_P¨amëîs
.
C⁄√˘i⁄_I¡îvÆ
);

5377 
	`QCLI_Prötf
(
bÀ_group
, " SœvêL©ícy: %u.\n", ()
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_C⁄√˘i⁄_Com∂ëe_Evít_D©a
->
Cuºít_C⁄√˘i⁄_P¨amëîs
.
Sœve_L©ícy
);

5389 
LoˇlDevi˚IsMa°î
 = 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_C⁄√˘i⁄_Com∂ëe_Evít_D©a
->
Ma°î
;

5390 
RemŸeAddªssTy≥
 = 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_C⁄√˘i⁄_Com∂ëe_Evít_D©a
->
Pìr_Addªss_Ty≥
;

5396 if((
Devi˚Info
 = 
	`SórchDevi˚InfoE¡ryTy≥Addªss
(&
Devi˚InfoLi°
, 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_C⁄√˘i⁄_Com∂ëe_Evít_D©a
->
Pìr_Addªss_Ty≥
, GAP_LE_Evít_D©a->Evít_D©a.GAP_LE_C⁄√˘i⁄_Com∂ëe_Evít_D©a->
Pìr_Addªss
)Ë!
NULL
)

5398 
uöt8_t
 
Pìr_Idítôy_Addªss_Ty≥
;

5399 
uöt8_t
 
SètusResu…
;

5400 
q≠i_BLE_BD_ADDR_t
 
Pìr_Idítôy_Addªss
;

5401 
q≠i_BLE_BD_ADDR_t
 
Loˇl_ResﬁvabÀ_Addªss
;

5403 if(
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_C⁄√˘i⁄_Com∂ëe_Evít_D©a
->
Pìr_Addªss_Ty≥
 =
QAPI_BLE_LAT_PUBLIC_IDENTITY_E
)

5404 
Pìr_Idítôy_Addªss_Ty≥
 = 0x00;

5405 if(
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_C⁄√˘i⁄_Com∂ëe_Evít_D©a
->
Pìr_Addªss_Ty≥
 =
QAPI_BLE_LAT_RANDOM_IDENTITY_E
)

5406 
Pìr_Idítôy_Addªss_Ty≥
 = 0x01;

5408 
Pìr_Idítôy_Addªss_Ty≥
 = 0x02;

5410 if(
Pìr_Idítôy_Addªss_Ty≥
 != 0x02)

5412 
Pìr_Idítôy_Addªss
 = 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_C⁄√˘i⁄_Com∂ëe_Evít_D©a
->
Pìr_Addªss
;

5414 if(!
	`q≠i_BLE_HCI_LE_Ród_Loˇl_ResﬁvabÀ_Addªss
(
BluëoŸhSèckID
, 
Pìr_Idítôy_Addªss_Ty≥
, 
Pìr_Idítôy_Addªss
, &
SètusResu…
, &
Loˇl_ResﬁvabÀ_Addªss
))

5416 
	`QCLI_Prötf
(
bÀ_group
, " q≠i_BLE_HCI_LE_Ród_Loˇl_ResﬁvabÀ_Addªss(): 0x%02X.\n", 
SètusResu…
);

5417 if(!
SètusResu…
)

5419 
	`BD_ADDRToSå
(
Loˇl_ResﬁvabÀ_Addªss
, 
BﬂrdSå
);

5420 
	`QCLI_Prötf
(
bÀ_group
, " Loˇ»RPA: %s.\n", 
BﬂrdSå
);

5430 
blbd_sˇn_≥rmôãd
 = 0;

5431 
	`mem˝y
(&
Cuºít_C⁄n_Addr
,&(
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_C⁄√˘i⁄_Com∂ëe_Evít_D©a
->
Pìr_Addªss
),(
q≠i_BLE_BD_ADDR_t
));

5433 
	`QCLI_Prötf
(
bÀ_group
, "Device is master initiatingÅheÖairingÑequest \n" );

5434 if(!
	`SídPaúögReque°
(
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_C⁄√˘i⁄_Com∂ëe_Evít_D©a
->
Pìr_Addªss
, 
TRUE
))

5435 
	`QCLI_Prötf
(
bÀ_group
, "pairingÑequest sent successfully \n" );

5437 
	`QCLI_Prötf
(
bÀ_group
, "FailedÅo sendÅheÖairingÑequest \n" );

5439 
QAPI_BLE_ET_LE_DISCONNECTION_COMPLETE_E
:

5440 
	`QCLI_Prötf
(
bÀ_group
, "ëLE_Disc⁄√˘i⁄_Com∂ëêwôh sizê%d.\n", ()
GAP_LE_Evít_D©a
->
Evít_D©a_Size
);

5442 
uöt32_t
 
nŸify_thªad_Êag
;

5443 if(
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_Disc⁄√˘i⁄_Com∂ëe_Evít_D©a
)

5445 
	`QCLI_Prötf
(
bÀ_group
, " Sètus: 0x%02X.\n", 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_Disc⁄√˘i⁄_Com∂ëe_Evít_D©a
->
Sètus
);

5446 
	`QCLI_Prötf
(
bÀ_group
, " Rós⁄: 0x%02X.\n", 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_Disc⁄√˘i⁄_Com∂ëe_Evít_D©a
->
Rós⁄
);

5448 
	`BD_ADDRToSå
(
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_Disc⁄√˘i⁄_Com∂ëe_Evít_D©a
->
Pìr_Addªss
, 
BﬂrdSå
);

5449 
	`QCLI_Prötf
(
bÀ_group
, " BD_ADDR: %s.\n", 
BﬂrdSå
);

5451 
SídInfo
.
ByãsToSíd
 = 0;

5452 
SídInfo
.
ByãsSít
 = 0;

5454 
blbd_sˇn_≥rmôãd
 = 1;

5455 
BulbSèã
 = 
BULB_STATE_DISCONNECTED
;

5456 
	`mem£t
(&
Cuºít_C⁄n_Addr
,0,(
q≠i_BLE_BD_ADDR_t
));

5458 
QAPI_BLE_ET_LE_CONNECTION_PARAMETER_UPDATE_REQUEST_E
:

5459 
	`QCLI_Prötf
(
bÀ_group
, "ëLE_C⁄√˘i⁄_P¨amëî_Upd©e_Reque° wôh sizê%d.\n",()
GAP_LE_Evít_D©a
->
Evít_D©a_Size
);

5461 if(
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_C⁄√˘i⁄_P¨amëî_Upd©e_Reque°_Evít_D©a
)

5463 
	`BD_ADDRToSå
(
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_C⁄√˘i⁄_P¨amëî_Upd©e_Reque°_Evít_D©a
->
BD_ADDR
, 
BﬂrdSå
);

5464 
	`QCLI_Prötf
(
bÀ_group
, " BD_ADDR: %s\n", 
BﬂrdSå
);

5465 
	`QCLI_Prötf
(
bÀ_group
, " C⁄√˘i⁄ I¡îvÆ Möimum: %d\n", 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_C⁄√˘i⁄_P¨amëî_Upd©e_Reque°_Evít_D©a
->
C⁄n_I¡îvÆ_Mö
);

5466 
	`QCLI_Prötf
(
bÀ_group
, " C⁄√˘i⁄ I¡îvÆ Maximum: %d\n", 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_C⁄√˘i⁄_P¨amëî_Upd©e_Reque°_Evít_D©a
->
C⁄n_I¡îvÆ_Max
);

5467 
	`QCLI_Prötf
(
bÀ_group
, " SœvêL©ícy: %d\n", 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_C⁄√˘i⁄_P¨amëî_Upd©e_Reque°_Evít_D©a
->
Sœve_L©ícy
);

5468 
	`QCLI_Prötf
(
bÀ_group
, " Su≥rvisi⁄ Timeout: %d\n", 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_C⁄√˘i⁄_P¨amëî_Upd©e_Reque°_Evít_D©a
->
C⁄n_Su≥rvisi⁄_Timeout
);

5470 
C⁄√˘i⁄P¨ams
.
C⁄√˘i⁄_I¡îvÆ_Mö
 = 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_C⁄√˘i⁄_P¨amëî_Upd©e_Reque°_Evít_D©a
->
C⁄n_I¡îvÆ_Mö
;

5471 
C⁄√˘i⁄P¨ams
.
C⁄√˘i⁄_I¡îvÆ_Max
 = 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_C⁄√˘i⁄_P¨amëî_Upd©e_Reque°_Evít_D©a
->
C⁄n_I¡îvÆ_Max
;

5472 
C⁄√˘i⁄P¨ams
.
Sœve_L©ícy
 = 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_C⁄√˘i⁄_P¨amëî_Upd©e_Reque°_Evít_D©a
->Slave_Latency;

5473 
C⁄√˘i⁄P¨ams
.
Su≥rvisi⁄_Timeout
 = 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_C⁄√˘i⁄_P¨amëî_Upd©e_Reque°_Evít_D©a
->
C⁄n_Su≥rvisi⁄_Timeout
;

5474 
C⁄√˘i⁄P¨ams
.
Möimum_C⁄√˘i⁄_Lígth
 = 0;

5475 
C⁄√˘i⁄P¨ams
.
Maximum_C⁄√˘i⁄_Lígth
 = 10000;

5477 
	`q≠i_BLE_GAP_LE_C⁄√˘i⁄_P¨amëî_Upd©e_Re•⁄£
(
BluëoŸhSèckID
, 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_C⁄√˘i⁄_P¨amëî_Upd©e_Reque°_Evít_D©a
->
BD_ADDR
, 
TRUE
, &
C⁄√˘i⁄P¨ams
);

5480 
QAPI_BLE_ET_LE_CONNECTION_PARAMETER_UPDATED_E
:

5481 
	`QCLI_Prötf
(
bÀ_group
, "ëLE_C⁄√˘i⁄_P¨amëî_Upd©ed wôh sizê%d.\n",()
GAP_LE_Evít_D©a
->
Evít_D©a_Size
);

5483 if(
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_C⁄√˘i⁄_P¨amëî_Upd©ed_Evít_D©a
)

5485 
	`BD_ADDRToSå
(
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_C⁄√˘i⁄_P¨amëî_Upd©ed_Evít_D©a
->
BD_ADDR
, 
BﬂrdSå
);

5486 
	`QCLI_Prötf
(
bÀ_group
, " BD_ADDR: %s\n", 
BﬂrdSå
);

5487 
	`QCLI_Prötf
(
bÀ_group
, " Sètus: %d\n", 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_C⁄√˘i⁄_P¨amëî_Upd©ed_Evít_D©a
->
Sètus
);

5488 
	`QCLI_Prötf
(
bÀ_group
, " C⁄√˘i⁄ I¡îvÆ: %d\n", 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_C⁄√˘i⁄_P¨amëî_Upd©ed_Evít_D©a
->
Cuºít_C⁄√˘i⁄_P¨amëîs
.
C⁄√˘i⁄_I¡îvÆ
);

5489 
	`QCLI_Prötf
(
bÀ_group
, " SœvêL©ícy: %d\n", 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_C⁄√˘i⁄_P¨amëî_Upd©ed_Evít_D©a
->
Cuºít_C⁄√˘i⁄_P¨amëîs
.
Sœve_L©ícy
);

5490 
	`QCLI_Prötf
(
bÀ_group
, " Su≥rvisi⁄ Timeout: %d\n", 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_C⁄√˘i⁄_P¨amëî_Upd©ed_Evít_D©a
->
Cuºít_C⁄√˘i⁄_P¨amëîs
.
Su≥rvisi⁄_Timeout
);

5493 
QAPI_BLE_ET_LE_ENCRYPTION_CHANGE_E
:

5494 
	`QCLI_Prötf
(
bÀ_group
, "ëLE_En¸y±i⁄_Ch™gêwôh sizê%d.\n",()
GAP_LE_Evít_D©a
->
Evít_D©a_Size
);

5496 
QAPI_BLE_ET_LE_ENCRYPTION_REFRESH_COMPLETE_E
:

5497 
	`QCLI_Prötf
(
bÀ_group
, "ëLE_En¸y±i⁄_Re‰esh_Com∂ëêwôh sizê%d.\n", ()
GAP_LE_Evít_D©a
->
Evít_D©a_Size
);

5499 
QAPI_BLE_ET_LE_AUTHENTICATION_E
:

5500 
	`QCLI_Prötf
(
bÀ_group
, "ëLE_Authítiˇti⁄ wôh sizê%d.\n", ()
GAP_LE_Evít_D©a
->
Evít_D©a_Size
);

5504 if((
Authítiˇti⁄_Evít_D©a
 = 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_Authítiˇti⁄_Evít_D©a
Ë!
NULL
)

5506 
	`BD_ADDRToSå
(
Authítiˇti⁄_Evít_D©a
->
BD_ADDR
, 
BﬂrdSå
);

5508 
Authítiˇti⁄_Evít_D©a
->
GAP_LE_Authítiˇti⁄_Evít_Ty≥
)

5510 
QAPI_BLE_LAT_LONG_TERM_KEY_REQUEST_E
:

5511 
	`QCLI_Prötf
(
bÀ_group
, "ÜatKeyRequest: \n");

5512 
	`QCLI_Prötf
(
bÀ_group
, " BD_ADDR: %s.\n", 
BﬂrdSå
);

5518 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
GAP_LE_Authítiˇti⁄_Ty≥
 = 
QAPI_BLE_LAR_LONG_TERM_KEY_E
;

5519 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
Authítiˇti⁄_D©a_Lígth
 = 0;

5525 
	`mem£t
(&
R™domNumbî
, 0, (RandomNumber));

5526 
EDIV
 = 0;

5530 if((
Authítiˇti⁄_Evít_D©a
->Authítiˇti⁄_Evít_D©a.
L⁄g_Tîm_Key_Reque°
.
EDIV
 =EDIVË&& (
	`QAPI_BLE_COMPARE_RANDOM_NUMBER
(Authítiˇti⁄_Evít_D©a->Authítiˇti⁄_Evít_D©a.L⁄g_Tîm_Key_Reque°.
R™d
, 
R™domNumbî
)))

5534 if((
Devi˚Info
 = 
	`SórchDevi˚InfoE¡ryByBD_ADDR
(&
Devi˚InfoLi°
, 
Authítiˇti⁄_Evít_D©a
->
BD_ADDR
)Ë!
NULL
)

5537 if(
Devi˚Info
->
Fœgs
 & 
DEVICE_INFO_FLAGS_LTK_VALID
)

5540 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
Authítiˇti⁄_D©a_Lígth
 = 
QAPI_BLE_GAP_LE_LONG_TERM_KEY_INFORMATION_DATA_SIZE
;

5541 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
Authítiˇti⁄_D©a
.
L⁄g_Tîm_Key_Inf‹m©i⁄
.
En¸y±i⁄_Key_Size
 = 
Devi˚Info
->
En¸y±i⁄KeySize
;

5543 
	`mem˝y
(&(
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
Authítiˇti⁄_D©a
.
L⁄g_Tîm_Key_Inf‹m©i⁄
.
L⁄g_Tîm_Key
), &(
Devi˚Info
->
LTK
), 
QAPI_BLE_LONG_TERM_KEY_SIZE
);

5553 
Resu…
 = 
	`q≠i_BLE_GAP_LE_Regíî©e_L⁄g_Tîm_Key
(
BluëoŸhSèckID
, (
q≠i_BLE_En¸y±i⁄_Key_t
 *)(&
DHK
), (q≠i_BLE_En¸y±i⁄_Key_à*)(&
ER
), 
Authítiˇti⁄_Evít_D©a
->Authítiˇti⁄_Evít_D©a.
L⁄g_Tîm_Key_Reque°
.
EDIV
, &(Authítiˇti⁄_Evít_D©a->Authítiˇti⁄_Evít_D©a.L⁄g_Tîm_Key_Reque°.
R™d
), &
Gíî©edLTK
);

5554 if(!
Resu…
)

5556 
	`QCLI_Prötf
(
bÀ_group
, " GAP_LE_Regenerate_Long_Term_Key Success.\n");

5560 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
GAP_LE_Authítiˇti⁄_Ty≥
 = 
QAPI_BLE_LAR_LONG_TERM_KEY_E
;

5561 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
Authítiˇti⁄_D©a_Lígth
 = 
QAPI_BLE_GAP_LE_LONG_TERM_KEY_INFORMATION_DATA_SIZE
;

5562 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
Authítiˇti⁄_D©a
.
L⁄g_Tîm_Key_Inf‹m©i⁄
.
En¸y±i⁄_Key_Size
 = 
QAPI_BLE_GAP_LE_MAXIMUM_ENCRYPTION_KEY_SIZE
;

5563 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
Authítiˇti⁄_D©a
.
L⁄g_Tîm_Key_Inf‹m©i⁄
.
L⁄g_Tîm_Key
 = 
Gíî©edLTK
;

5567 
	`QCLI_Prötf
(
bÀ_group
, " GAP_LE_Regíî©e_L⁄g_Tîm_KeyÑëu∫ed %d.\n",
Resu…
);

5572 
Resu…
 = 
	`q≠i_BLE_GAP_LE_Authítiˇti⁄_Re•⁄£
(
BluëoŸhSèckID
, 
Authítiˇti⁄_Evít_D©a
->
BD_ADDR
, &
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
);

5573 if(
Resu…
)

5575 
	`QCLI_Prötf
(
bÀ_group
, " GAP_LE_Authítiˇti⁄_Re•⁄£Ñëu∫ed %d.\n",
Resu…
);

5578 
QAPI_BLE_LAT_SECURITY_REQUEST_E
:

5583 
	`QCLI_Prötf
(
bÀ_group
, "ÜatSecurityRequest:.\n");

5584 
	`QCLI_Prötf
(
bÀ_group
, " BD_ADDR: %s.\n", 
BﬂrdSå
);

5585 
	`QCLI_Prötf
(
bÀ_group
, " B⁄dög Ty≥: %s.\n", ((
Authítiˇti⁄_Evít_D©a
->Authítiˇti⁄_Evít_D©a.
Securôy_Reque°
.
B⁄dög_Ty≥
 =
QAPI_BLE_LBT_BONDING_E
)?"Bonding":"No Bonding"));

5586 
	`QCLI_Prötf
(
bÀ_group
, " MITM: %s.\n", ((
Authítiˇti⁄_Evít_D©a
->Authítiˇti⁄_Evít_D©a.
Securôy_Reque°
.
MITM
)?"YES":"NO"));

5590 if(
	`QAPI_BLE_COMPARE_NULL_BD_ADDR
(
BLBD_SecurôyRemŸeBD_ADDR
))

5595 
BLBD_SecurôyRemŸeBD_ADDR
 = 
Authítiˇti⁄_Evít_D©a
->
BD_ADDR
;

5601 if((
Devi˚Info
 = 
	`SórchDevi˚InfoE¡ryByBD_ADDR
(&
Devi˚InfoLi°
, 
Authítiˇti⁄_Evít_D©a
->
BD_ADDR
)Ë!
NULL
)

5605 if(
Devi˚Info
->
Fœgs
 & 
DEVICE_INFO_FLAGS_LTK_VALID
)

5607 
	`QCLI_Prötf
(
bÀ_group
, "AttemptingÅo Re-Establish Security.\n");

5611 
GAP_LE_Securôy_Inf‹m©i⁄
.
Loˇl_Devi˚_Is_Ma°î
 = 
TRUE
;

5612 
	`mem˝y
(&(
GAP_LE_Securôy_Inf‹m©i⁄
.
Securôy_Inf‹m©i⁄
.
Ma°î_Inf‹m©i⁄
.
LTK
), &(
Devi˚Info
->LTK), (DeviceInfo->LTK));

5613 
GAP_LE_Securôy_Inf‹m©i⁄
.
Securôy_Inf‹m©i⁄
.
Ma°î_Inf‹m©i⁄
.
EDIV
 = 
Devi˚Info
->EDIV;

5614 
	`mem˝y
(&(
GAP_LE_Securôy_Inf‹m©i⁄
.
Securôy_Inf‹m©i⁄
.
Ma°î_Inf‹m©i⁄
.
R™d
), &(
Devi˚Info
->Rand), (DeviceInfo->Rand));

5615 
GAP_LE_Securôy_Inf‹m©i⁄
.
Securôy_Inf‹m©i⁄
.
Ma°î_Inf‹m©i⁄
.
En¸y±i⁄_Key_Size
 = 
Devi˚Info
->
En¸y±i⁄KeySize
;

5617 
Resu…
 = 
	`q≠i_BLE_GAP_LE_Rì°ablish_Securôy
(
BluëoŸhSèckID
, 
BLBD_SecurôyRemŸeBD_ADDR
, &
GAP_LE_Securôy_Inf‹m©i⁄
, 
GAP_LE_Evít_CÆlback
, 0);

5618 if(
Resu…
)

5620 
	`QCLI_Prötf
(
bÀ_group
, "GAP_LE_Rì°ablish_SecurôyÑëu∫ed %d.\n", 
Resu…
);

5628 
	`SídPaúögReque°
(
BLBD_SecurôyRemŸeBD_ADDR
, 
TRUE
);

5636 
	`SídPaúögReque°
(
BLBD_SecurôyRemŸeBD_ADDR
, 
TRUE
);

5643 
	`QCLI_Prötf
(
bÀ_group
, "\nSecurity isálready inÖrogress withánotherÑemote device.\n");

5649 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
GAP_LE_Authítiˇti⁄_Ty≥
 = 
QAPI_BLE_LAR_ERROR_E
;

5650 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
Authítiˇti⁄_D©a_Lígth
 = 0;

5653 if((
Resu…
 = 
	`q≠i_BLE_GAP_LE_Authítiˇti⁄_Re•⁄£
(
BluëoŸhSèckID
, 
Authítiˇti⁄_Evít_D©a
->
BD_ADDR
, &
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
)) != 0)

5654 
	`Di•œyFun˘i⁄Eº‹
("q≠i_BLE_GAP_LE_Authítiˇti⁄_Re•⁄£", 
Resu…
);

5657 
QAPI_BLE_LAT_PAIRING_REQUEST_E
:

5658 
	`QCLI_Prötf
(
bÀ_group
, "Paúög Reque°: %s.\n", 
BﬂrdSå
);

5659 
	`Di•œyLegacyPaúögInf‹m©i⁄
(&
Authítiˇti⁄_Evít_D©a
->Authítiˇti⁄_Evít_D©a.
Paúög_Reque°
);

5663 if(
	`QAPI_BLE_COMPARE_NULL_BD_ADDR
(
BLBD_SecurôyRemŸeBD_ADDR
))

5668 
BLBD_SecurôyRemŸeBD_ADDR
 = 
Authítiˇti⁄_Evít_D©a
->
BD_ADDR
;

5677 
	`SœvePaúögReque°Re•⁄£
(
BLBD_SecurôyRemŸeBD_ADDR
);

5683 
	`QCLI_Prötf
(
bÀ_group
, "\nSecurity isálready inÖrogress withánotherÑemote device.\n");

5689 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
GAP_LE_Authítiˇti⁄_Ty≥
 = 
QAPI_BLE_LAR_ERROR_E
;

5690 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
Authítiˇti⁄_D©a_Lígth
 = 0;

5693 if((
Resu…
 = 
	`q≠i_BLE_GAP_LE_Authítiˇti⁄_Re•⁄£
(
BluëoŸhSèckID
, 
Authítiˇti⁄_Evít_D©a
->
BD_ADDR
, &
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
)) != 0)

5694 
	`Di•œyFun˘i⁄Eº‹
("q≠i_BLE_GAP_LE_Authítiˇti⁄_Re•⁄£", 
Resu…
);

5697 
QAPI_BLE_LAT_EXTENDED_PAIRING_REQUEST_E
:

5698 
	`QCLI_Prötf
(
bÀ_group
, "Exãnded Paúög Reque°: %s.\n", 
BﬂrdSå
);

5699 
	`Di•œyPaúögInf‹m©i⁄
(&(
Authítiˇti⁄_Evít_D©a
->Authítiˇti⁄_Evít_D©a.
Exãnded_Paúög_Reque°
));

5703 if(
	`QAPI_BLE_COMPARE_NULL_BD_ADDR
(
BLBD_SecurôyRemŸeBD_ADDR
))

5708 
BLBD_SecurôyRemŸeBD_ADDR
 = 
Authítiˇti⁄_Evít_D©a
->
BD_ADDR
;

5717 
	`SœvePaúögReque°Re•⁄£
(
Authítiˇti⁄_Evít_D©a
->
BD_ADDR
);

5723 
	`QCLI_Prötf
(
bÀ_group
, "\nSecurity isálready inÖrogress withánotherÑemote device.\n");

5729 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
GAP_LE_Authítiˇti⁄_Ty≥
 = 
QAPI_BLE_LAR_ERROR_E
;

5730 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
Authítiˇti⁄_D©a_Lígth
 = 0;

5733 if((
Resu…
 = 
	`q≠i_BLE_GAP_LE_Authítiˇti⁄_Re•⁄£
(
BluëoŸhSèckID
, 
Authítiˇti⁄_Evít_D©a
->
BD_ADDR
, &
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
)) != 0)

5734 
	`Di•œyFun˘i⁄Eº‹
("q≠i_BLE_GAP_LE_Authítiˇti⁄_Re•⁄£", 
Resu…
);

5737 
QAPI_BLE_LAT_CONFIRMATION_REQUEST_E
:

5738 
	`QCLI_Prötf
(
bÀ_group
, "latConfirmationRequest.\n");

5742 
Authítiˇti⁄_Evít_D©a
->Authítiˇti⁄_Evít_D©a.
C⁄fúm©i⁄_Reque°
.
Reque°_Ty≥
)

5744 
QAPI_BLE_CRT_NONE_E
:

5746 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
GAP_LE_Authítiˇti⁄_Ty≥
 = 
QAPI_BLE_LAR_CONFIRMATION_E
;

5752 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
Authítiˇti⁄_D©a_Lígth
 = (
uöt32_t
);

5756 
LE_P¨amëîs
.
IOC≠abûôy
)

5758 
QAPI_BLE_LIC_NO_INPUT_NO_OUTPUT_E
:

5759 
	`QCLI_Prötf
(
bÀ_group
, "Invoking Just Works.\n");

5767 
Resu…
 = 
	`q≠i_BLE_GAP_LE_Authítiˇti⁄_Re•⁄£
(
BluëoŸhSèckID
, 
Authítiˇti⁄_Evít_D©a
->
BD_ADDR
, &
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
);

5768 if(
Resu…
)

5770 
	`QCLI_Prötf
(
bÀ_group
, "q≠i_BLE_GAP_LE_Authítiˇti⁄_Re•⁄£Ñëu∫ed %d.\n", 
Resu…
);

5773 
QAPI_BLE_LIC_DISPLAY_ONLY_E
:

5774 
	`QCLI_Prötf
(
bÀ_group
, "Confirmation of Pairing.\n");

5776 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
Authítiˇti⁄_D©a
.
Passkey
 = 
Authítiˇti⁄_Evít_D©a
->Authítiˇti⁄_Evít_D©a.
C⁄fúm©i⁄_Reque°
.
Di•œy_Passkey
;

5779 if((
Resu…
 = 
	`q≠i_BLE_GAP_LE_Authítiˇti⁄_Re•⁄£
(
BluëoŸhSèckID
, 
Authítiˇti⁄_Evít_D©a
->
BD_ADDR
, &
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
)) != 0)

5780 
	`Di•œyFun˘i⁄Eº‹
("q≠i_BLE_GAP_LE_Authítiˇti⁄_Re•⁄£", 
Resu…
);

5783 
	`QCLI_Prötf
(
bÀ_group
, "Confirmation of Pairing.\n");

5786 if((
Resu…
 = 
	`q≠i_BLE_GAP_LE_Authítiˇti⁄_Re•⁄£
(
BluëoŸhSèckID
, 
Authítiˇti⁄_Evít_D©a
->
BD_ADDR
, &
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
)) != 0)

5787 
	`Di•œyFun˘i⁄Eº‹
("q≠i_BLE_GAP_LE_Authítiˇti⁄_Re•⁄£", 
Resu…
);

5791 
QAPI_BLE_CRT_PASSKEY_E
:

5794 
	`QCLI_Prötf
(
bÀ_group
, "Call LEPasskeyResponse [PASSCODE].\n");

5796 
QAPI_BLE_CRT_DISPLAY_E
:

5797 
	`QCLI_Prötf
(
bÀ_group
, "Passkey: %06u.\n", ()(
Authítiˇti⁄_Evít_D©a
->Authítiˇti⁄_Evít_D©a.
C⁄fúm©i⁄_Reque°
.
Di•œy_Passkey
));

5804 
	`QCLI_Prötf
(
bÀ_group
, "Authentication methodÇot supported.\n");

5808 
QAPI_BLE_LAT_EXTENDED_CONFIRMATION_REQUEST_E
:

5809 
	`QCLI_Prötf
(
bÀ_group
, "latExtendedConfirmationRequest.\n");

5811 
	`QCLI_Prötf
(
bÀ_group
, " Secuª C⁄√˘i⁄s: %s.\n", (
Authítiˇti⁄_Evít_D©a
->Authítiˇti⁄_Evít_D©a.
Exãnded_C⁄fúm©i⁄_Reque°
.
Fœgs
 & 
QAPI_BLE_GAP_LE_EXTENDED_CONFIRMATION_REQUEST_FLAGS_SECURE_CONNECTIONS
)?"YES":"NO");

5812 
	`QCLI_Prötf
(
bÀ_group
, " Ju° W‹k†Paúög: %s.\n", (
Authítiˇti⁄_Evít_D©a
->Authítiˇti⁄_Evít_D©a.
Exãnded_C⁄fúm©i⁄_Reque°
.
Fœgs
 & 
QAPI_BLE_GAP_LE_EXTENDED_CONFIRMATION_REQUEST_FLAGS_JUST_WORKS_PAIRING
)?"YES":"NO");

5813 
	`QCLI_Prötf
(
bÀ_group
, " Key¥es†NŸifiˇti⁄s: %s.\n", (
Authítiˇti⁄_Evít_D©a
->Authítiˇti⁄_Evít_D©a.
Exãnded_C⁄fúm©i⁄_Reque°
.
Fœgs
 & 
QAPI_BLE_GAP_LE_EXTENDED_CONFIRMATION_REQUEST_FLAGS_KEYPRESS_NOTIFICATIONS_REQUESTED
)?"YES":"NO");

5817 
Authítiˇti⁄_Evít_D©a
->Authítiˇti⁄_Evít_D©a.
Exãnded_C⁄fúm©i⁄_Reque°
.
Reque°_Ty≥
)

5819 
QAPI_BLE_CRT_NONE_E
:

5821 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
GAP_LE_Authítiˇti⁄_Ty≥
 = 
QAPI_BLE_LAR_CONFIRMATION_E
;

5827 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
Authítiˇti⁄_D©a_Lígth
 = (
uöt32_t
);

5831 
LE_P¨amëîs
.
IOC≠abûôy
)

5833 
QAPI_BLE_LIC_NO_INPUT_NO_OUTPUT_E
:

5834 
	`QCLI_Prötf
(
bÀ_group
, "Invoking Just Works.\n");

5837 
Resu…
 = 
	`q≠i_BLE_GAP_LE_Authítiˇti⁄_Re•⁄£
(
BluëoŸhSèckID
, 
Authítiˇti⁄_Evít_D©a
->
BD_ADDR
, &
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
);

5838 if(
Resu…
)

5840 
	`QCLI_Prötf
(
bÀ_group
, "q≠i_BLE_GAP_LE_Authítiˇti⁄_Re•⁄£Ñëu∫ed %d.\n", 
Resu…
);

5843 
QAPI_BLE_LIC_DISPLAY_ONLY_E
:

5844 
	`QCLI_Prötf
(
bÀ_group
, "Confirmation of Pairing.\n");

5846 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
Authítiˇti⁄_D©a
.
Passkey
 = 
Authítiˇti⁄_Evít_D©a
->Authítiˇti⁄_Evít_D©a.
C⁄fúm©i⁄_Reque°
.
Di•œy_Passkey
;

5849 if((
Resu…
 = 
	`q≠i_BLE_GAP_LE_Authítiˇti⁄_Re•⁄£
(
BluëoŸhSèckID
, 
Authítiˇti⁄_Evít_D©a
->
BD_ADDR
, &
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
)) != 0)

5850 
	`Di•œyFun˘i⁄Eº‹
("q≠i_BLE_GAP_LE_Authítiˇti⁄_Re•⁄£", 
Resu…
);

5853 
	`QCLI_Prötf
(
bÀ_group
, "Confirmation of Pairing.\n");

5856 if((
Resu…
 = 
	`q≠i_BLE_GAP_LE_Authítiˇti⁄_Re•⁄£
(
BluëoŸhSèckID
, 
Authítiˇti⁄_Evít_D©a
->
BD_ADDR
, &
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
)) != 0)

5857 
	`Di•œyFun˘i⁄Eº‹
("q≠i_BLE_GAP_LE_Authítiˇti⁄_Re•⁄£", 
Resu…
);

5861 
QAPI_BLE_CRT_PASSKEY_E
:

5864 
	`QCLI_Prötf
(
bÀ_group
, "Call LEPasskeyResponse [PASSKEY].\n");

5866 
QAPI_BLE_CRT_DISPLAY_E
:

5867 
	`QCLI_Prötf
(
bÀ_group
, "Passkey: %06u.\n", 
Authítiˇti⁄_Evít_D©a
->Authítiˇti⁄_Evít_D©a.
Exãnded_C⁄fúm©i⁄_Reque°
.
Di•œy_Passkey
);

5869 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
GAP_LE_Authítiˇti⁄_Ty≥
 = 
QAPI_BLE_LAR_PASSKEY_E
;

5870 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
Authítiˇti⁄_D©a_Lígth
 = (
uöt8_t
)((
uöt32_t
));

5871 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
Authítiˇti⁄_D©a
.
Passkey
 = 
Authítiˇti⁄_Evít_D©a
->Authítiˇti⁄_Evít_D©a.
Exãnded_C⁄fúm©i⁄_Reque°
.
Di•œy_Passkey
;

5876 if((
Resu…
 = 
	`q≠i_BLE_GAP_LE_Authítiˇti⁄_Re•⁄£
(
BluëoŸhSèckID
, 
Authítiˇti⁄_Evít_D©a
->
BD_ADDR
, &
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
)) != 0)

5877 
	`Di•œyFun˘i⁄Eº‹
("q≠i_BLE_GAP_LE_Authítiˇti⁄_Re•⁄£", 
Resu…
);

5879 
QAPI_BLE_CRT_DISPLAY_YES_NO_E
:

5881 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
GAP_LE_Authítiˇti⁄_Ty≥
 = 
QAPI_BLE_LAR_CONFIRMATION_E
;

5887 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
Authítiˇti⁄_D©a_Lígth
 = (
uöt32_t
);

5891 if(
Authítiˇti⁄_Evít_D©a
->Authítiˇti⁄_Evít_D©a.
Exãnded_C⁄fúm©i⁄_Reque°
.
Fœgs
 & 
QAPI_BLE_GAP_LE_EXTENDED_CONFIRMATION_REQUEST_FLAGS_JUST_WORKS_PAIRING
)

5895 
LE_P¨amëîs
.
IOC≠abûôy
)

5897 
QAPI_BLE_LIC_NO_INPUT_NO_OUTPUT_E
:

5898 
	`QCLI_Prötf
(
bÀ_group
, "Invoking Just Works.\n");

5901 
Resu…
 = 
	`q≠i_BLE_GAP_LE_Authítiˇti⁄_Re•⁄£
(
BluëoŸhSèckID
, 
Authítiˇti⁄_Evít_D©a
->
BD_ADDR
, &
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
);

5902 if(
Resu…
)

5904 
	`QCLI_Prötf
(
bÀ_group
, "q≠i_BLE_GAP_LE_Authítiˇti⁄_Re•⁄£Ñëu∫ed %d.\n", 
Resu…
);

5907 
QAPI_BLE_LIC_DISPLAY_ONLY_E
:

5908 
	`QCLI_Prötf
(
bÀ_group
, "Confirmation of Pairing.\n");

5910 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
Authítiˇti⁄_D©a
.
Passkey
 = 
Authítiˇti⁄_Evít_D©a
->Authítiˇti⁄_Evít_D©a.
C⁄fúm©i⁄_Reque°
.
Di•œy_Passkey
;

5914 if((
Resu…
 = 
	`q≠i_BLE_GAP_LE_Authítiˇti⁄_Re•⁄£
(
BluëoŸhSèckID
, 
Authítiˇti⁄_Evít_D©a
->
BD_ADDR
, &
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
)) != 0)

5915 
	`Di•œyFun˘i⁄Eº‹
("q≠i_BLE_GAP_LE_Authítiˇti⁄_Re•⁄£", 
Resu…
);

5918 
	`QCLI_Prötf
(
bÀ_group
, "Confirmation of Pairing.\n");

5922 if((
Resu…
 = 
	`q≠i_BLE_GAP_LE_Authítiˇti⁄_Re•⁄£
(
BluëoŸhSèckID
, 
Authítiˇti⁄_Evít_D©a
->
BD_ADDR
, &
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
)) != 0)

5923 
	`Di•œyFun˘i⁄Eº‹
("q≠i_BLE_GAP_LE_Authítiˇti⁄_Re•⁄£", 
Resu…
);

5932 
	`QCLI_Prötf
(
bÀ_group
, "C⁄fúm©i⁄ VÆue: %ld\n", ()
Authítiˇti⁄_Evít_D©a
->Authítiˇti⁄_Evít_D©a.
Exãnded_C⁄fúm©i⁄_Reque°
.
Di•œy_Passkey
);

5935 if((
Resu…
 = 
	`q≠i_BLE_GAP_LE_Authítiˇti⁄_Re•⁄£
(
BluëoŸhSèckID
, 
Authítiˇti⁄_Evít_D©a
->
BD_ADDR
, &
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
)) != 0)

5936 
	`Di•œyFun˘i⁄Eº‹
("q≠i_BLE_GAP_LE_Authítiˇti⁄_Re•⁄£", 
Resu…
);

5940 
QAPI_BLE_CRT_OOB_SECURE_CONNECTIONS_E
:

5941 
	`QCLI_Prötf
(
bÀ_group
, "OOB Data Request.\n");

5944 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
GAP_LE_Authítiˇti⁄_Ty≥
 = 
QAPI_BLE_LAR_OUT_OF_BAND_DATA_E
;

5945 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
Authítiˇti⁄_D©a_Lígth
 = 
QAPI_BLE_GAP_LE_SECURE_CONNECTIONS_OOB_DATA_SIZE
;

5948 if(
RemŸeOOBVÆid
)

5950 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
Authítiˇti⁄_D©a
.
Secuª_C⁄√˘i⁄s_OOB_D©a
.
Fœgs
 = 0;

5951 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
Authítiˇti⁄_D©a
.
Secuª_C⁄√˘i⁄s_OOB_D©a
.
C⁄fúm©i⁄
 = 
RemŸeOOBC⁄fúm©i⁄
;

5952 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
Authítiˇti⁄_D©a
.
Secuª_C⁄√˘i⁄s_OOB_D©a
.
R™domizî
 = 
RemŸeOOBR™domizî
;

5955 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
Authítiˇti⁄_D©a
.
Secuª_C⁄√˘i⁄s_OOB_D©a
.
Fœgs
 = 
QAPI_BLE_GAP_LE_SECURE_CONNECTIONS_OOB_DATA_FLAGS_OOB_NOT_RECEIVED
;

5958 if((
Resu…
 = 
	`q≠i_BLE_GAP_LE_Authítiˇti⁄_Re•⁄£
(
BluëoŸhSèckID
, 
Authítiˇti⁄_Evít_D©a
->
BD_ADDR
, &
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
)) != 0)

5959 
	`Di•œyFun˘i⁄Eº‹
("q≠i_BLE_GAP_LE_Authítiˇti⁄_Re•⁄£", 
Resu…
);

5964 
	`QCLI_Prötf
(
bÀ_group
, "Authentication methodÇot supported.\n");

5968 
QAPI_BLE_LAT_SECURITY_ESTABLISHMENT_COMPLETE_E
:

5969 
	`QCLI_Prötf
(
bÀ_group
, "Securôy Re-E°ablishmíàCom∂ëe: %s.\n", 
BﬂrdSå
);

5970 
	`QCLI_Prötf
(
bÀ_group
, " Sètus: 0x%02X.\n", 
Authítiˇti⁄_Evít_D©a
->Authítiˇti⁄_Evít_D©a.
Securôy_E°ablishmít_Com∂ëe
.
Sètus
);

5974 if(
Authítiˇti⁄_Evít_D©a
->Authítiˇti⁄_Evít_D©a.
Securôy_E°ablishmít_Com∂ëe
.
Sètus
 =
QAPI_BLE_GAP_LE_SECURITY_ESTABLISHMENT_STATUS_CODE_LONG_TERM_KEY_ERROR
)

5976 if((
Devi˚Info
 = 
	`SórchDevi˚InfoE¡ryByBD_ADDR
(&
Devi˚InfoLi°
, 
Authítiˇti⁄_Evít_D©a
->
BD_ADDR
)Ë!
NULL
)

5980 
Devi˚Info
->
Fœgs
 &~
DEVICE_INFO_FLAGS_LTK_VALID
;

5987 
	`QAPI_BLE_ASSIGN_BD_ADDR
(
BLBD_SecurôyRemŸeBD_ADDR
, 0, 0, 0, 0, 0, 0);

5989 
QAPI_BLE_LAT_PAIRING_STATUS_E
:

5990 
	`QCLI_Prötf
(
bÀ_group
, "Paúög Sètus: %s.\n", 
BﬂrdSå
);

5991 
	`QCLI_Prötf
(
bÀ_group
, " Sètus: 0x%02X.\n", 
Authítiˇti⁄_Evít_D©a
->Authítiˇti⁄_Evít_D©a.
Paúög_Sètus
.
Sètus
);

5993 if(
Authítiˇti⁄_Evít_D©a
->Authítiˇti⁄_Evít_D©a.
Paúög_Sètus
.
Sètus
 =
QAPI_BLE_GAP_LE_PAIRING_STATUS_NO_ERROR
)

5995 
	`QCLI_Prötf
(
bÀ_group
, " Key Size: %d.\n", 
Authítiˇti⁄_Evít_D©a
->Authítiˇti⁄_Evít_D©a.
Paúög_Sètus
.
NegŸüãd_En¸y±i⁄_Key_Size
);

5997 
	`DiscovîBLBDSîvi˚s
(
Authítiˇti⁄_Evít_D©a
->
BD_ADDR
);

6008 
	`q≠i_BLE_GAP_LE_Disc⁄√˘
(
BluëoŸhSèckID
, 
Authítiˇti⁄_Evít_D©a
->
BD_ADDR
);

6014 
	`QAPI_BLE_ASSIGN_BD_ADDR
(
BLBD_SecurôyRemŸeBD_ADDR
, 0, 0, 0, 0, 0, 0);

6017 
QAPI_BLE_LAT_ENCRYPTION_INFORMATION_REQUEST_E
:

6018 
	`QCLI_Prötf
(
bÀ_group
, "En¸y±i⁄ Inf‹m©i⁄ Reque° %s.\n", 
BﬂrdSå
);

6022 
	`En¸y±i⁄Inf‹m©i⁄Reque°Re•⁄£
(
Authítiˇti⁄_Evít_D©a
->
BD_ADDR
, Authítiˇti⁄_Evít_D©a->Authítiˇti⁄_Evít_D©a.
En¸y±i⁄_Reque°_Inf‹m©i⁄
.
En¸y±i⁄_Key_Size
, &
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
);

6024 
QAPI_BLE_LAT_IDENTITY_INFORMATION_REQUEST_E
:

6025 
	`QCLI_Prötf
(
bÀ_group
, "Idítôy Inf‹m©i⁄ Reque° %s.\n", 
BﬂrdSå
);

6032 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
GAP_LE_Authítiˇti⁄_Ty≥
 = 
QAPI_BLE_LAR_IDENTITY_INFORMATION_E
;

6033 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
Authítiˇti⁄_D©a_Lígth
 = (
uöt8_t
)
QAPI_BLE_GAP_LE_IDENTITY_INFORMATION_DATA_SIZE
;

6034 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
Authítiˇti⁄_D©a
.
Idítôy_Inf‹m©i⁄
.
Addªss
 = 
LoˇlBD_ADDR
;

6035 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
Authítiˇti⁄_D©a
.
Idítôy_Inf‹m©i⁄
.
Addªss_Ty≥
 = 
QAPI_BLE_LAT_PUBLIC_IDENTITY_E
;

6036 
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
.
Authítiˇti⁄_D©a
.
Idítôy_Inf‹m©i⁄
.
IRK
 = IRK;

6039 
Resu…
 = 
	`q≠i_BLE_GAP_LE_Authítiˇti⁄_Re•⁄£
(
BluëoŸhSèckID
, 
Authítiˇti⁄_Evít_D©a
->
BD_ADDR
, &
GAP_LE_Authítiˇti⁄_Re•⁄£_Inf‹m©i⁄
);

6040 if(!
Resu…
)

6042 
	`QCLI_Prötf
(
bÀ_group
, " qapi_BLE_GAP_LE_Authentication_Response (larEncryptionInformation) success.\n");

6046 
	`QCLI_Prötf
(
bÀ_group
, " Eº‹ - SM_Gíî©e_L⁄g_Tîm_KeyÑëu∫ed %d.\n", 
Resu…
);

6049 
QAPI_BLE_LAT_ENCRYPTION_INFORMATION_E
:

6051 
	`QCLI_Prötf
(
bÀ_group
, " En¸y±i⁄ Inf‹m©i⁄ from RemŸeDevi˚: %s.\n", 
BﬂrdSå
);

6052 
	`QCLI_Prötf
(
bÀ_group
, " Key Size: %d.\n", 
Authítiˇti⁄_Evít_D©a
->Authítiˇti⁄_Evít_D©a.
En¸y±i⁄_Inf‹m©i⁄
.
En¸y±i⁄_Key_Size
);

6056 if((
Devi˚Info
 = 
	`SórchDevi˚InfoE¡ryByBD_ADDR
(&
Devi˚InfoLi°
, 
Authítiˇti⁄_Evít_D©a
->
BD_ADDR
)Ë!
NULL
)

6058 
	`mem˝y
(&(
Devi˚Info
->
LTK
), &(
Authítiˇti⁄_Evít_D©a
->Authítiˇti⁄_Evít_D©a.
En¸y±i⁄_Inf‹m©i⁄
.LTK), (DeviceInfo->LTK));

6059 
Devi˚Info
->
EDIV
 = 
Authítiˇti⁄_Evít_D©a
->Authítiˇti⁄_Evít_D©a.
En¸y±i⁄_Inf‹m©i⁄
.EDIV;

6060 
	`mem˝y
(&(
Devi˚Info
->
R™d
), &(
Authítiˇti⁄_Evít_D©a
->Authítiˇti⁄_Evít_D©a.
En¸y±i⁄_Inf‹m©i⁄
.Rand), (DeviceInfo->Rand));

6061 
Devi˚Info
->
En¸y±i⁄KeySize
 = 
Authítiˇti⁄_Evít_D©a
->Authítiˇti⁄_Evít_D©a.
En¸y±i⁄_Inf‹m©i⁄
.
En¸y±i⁄_Key_Size
;

6062 
Devi˚Info
->
Fœgs
 |
DEVICE_INFO_FLAGS_LTK_VALID
;

6066 
	`QCLI_Prötf
(
bÀ_group
, "No Key Info Entry forÅhis device.\n");

6069 
QAPI_BLE_LAT_IDENTITY_INFORMATION_E
:

6071 
	`QCLI_Prötf
(
bÀ_group
, " Idítôy Inf‹m©i⁄ from RemŸeDevi˚: %s.\n", 
BﬂrdSå
);

6075 if((
Devi˚Info
 = 
	`SórchDevi˚InfoE¡ryByBD_ADDR
(&
Devi˚InfoLi°
, 
Authítiˇti⁄_Evít_D©a
->
BD_ADDR
)Ë!
NULL
)

6079 
	`mem˝y
(&(
Devi˚Info
->
IRK
), &(
Authítiˇti⁄_Evít_D©a
->Authítiˇti⁄_Evít_D©a.
Idítôy_Inf‹m©i⁄
.IRK), (DeviceInfo->IRK));

6080 
Devi˚Info
->
IdítôyAddªssBD_ADDR
 = 
Authítiˇti⁄_Evít_D©a
->Authítiˇti⁄_Evít_D©a.
Idítôy_Inf‹m©i⁄
.
Addªss
;

6081 
Devi˚Info
->
IdítôyAddªssTy≥
 = 
Authítiˇti⁄_Evít_D©a
->Authítiˇti⁄_Evít_D©a.
Idítôy_Inf‹m©i⁄
.
Addªss_Ty≥
;

6082 
Devi˚Info
->
Fœgs
 |
DEVICE_INFO_FLAGS_IRK_VALID
;

6086 
Devi˚Info
->
ResﬁvögLi°E¡ry
.
Pìr_Idítôy_Addªss
 = Devi˚Info->
IdítôyAddªssBD_ADDR
;

6087 
Devi˚Info
->
ResﬁvögLi°E¡ry
.
Pìr_Idítôy_Addªss_Ty≥
 = Devi˚Info->
IdítôyAddªssTy≥
;

6088 
Devi˚Info
->
ResﬁvögLi°E¡ry
.
Pìr_IRK
 = Devi˚Info->
IRK
;

6089 
Devi˚Info
->
ResﬁvögLi°E¡ry
.
Loˇl_IRK
 = 
IRK
;

6093 
	`QCLI_Prötf
(
bÀ_group
, "No Key Info Entry forÅhis device.\n");

6097 
	`QCLI_Prötf
(
bÀ_group
, "Unh™dÀdÉvít: %u\n", 
Authítiˇti⁄_Evít_D©a
->
GAP_LE_Authítiˇti⁄_Evít_Ty≥
);

6102 
QAPI_BLE_ET_LE_DIRECT_ADVERTISING_REPORT_E
:

6103 
	`QCLI_Prötf
(
bÀ_group
, "ëLE_Dúe˘_Advîtisög_Rï‹àwôh sizê%d.\n", ()
GAP_LE_Evít_D©a
->
Evít_D©a_Size
);

6104 
	`QCLI_Prötf
(
bÀ_group
, " %d Re•⁄£s.\n", 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_Dúe˘_Advîtisög_Rï‹t_Evít_D©a
->
Numbî_Devi˚_E¡rõs
);

6106 
Index
 = 0; Index < 
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_Dúe˘_Advîtisög_Rï‹t_Evít_D©a
->
Numbî_Devi˚_E¡rõs
; Index++)

6108 
Dúe˘Devi˚E¡ryPå
 = &(
GAP_LE_Evít_D©a
->
Evít_D©a
.
GAP_LE_Dúe˘_Advîtisög_Rï‹t_Evít_D©a
->
Dúe˘_Advîtisög_D©a
[
Index
]);

6111 
Dúe˘Devi˚E¡ryPå
->
Addªss_Ty≥
)

6113 
QAPI_BLE_LAT_PUBLIC_E
:

6114 
	`QCLI_Prötf
(
bÀ_group
, " Address Type: %s.\n", "QAPI_BLE_LAT_PUBLIC_E");

6116 
QAPI_BLE_LAT_RANDOM_E
:

6117 
	`QCLI_Prötf
(
bÀ_group
, " Address Type: %s.\n", "QAPI_BLE_LAT_RANDOM_E");

6119 
QAPI_BLE_LAT_PUBLIC_IDENTITY_E
:

6120 
	`QCLI_Prötf
(
bÀ_group
, " Address Type: %s.\n", "QAPI_BLE_LAT_PUBLIC_IDENTITY_E");

6122 
QAPI_BLE_LAT_RANDOM_IDENTITY_E
:

6123 
	`QCLI_Prötf
(
bÀ_group
, " Address Type: %s.\n", "QAPI_BLE_LAT_RANDOM_IDENTITY_E");

6126 
	`QCLI_Prötf
(
bÀ_group
, " Address Type: Invalid.\n");

6131 
	`QCLI_Prötf
(
bÀ_group
, " Addªss: 0x%02X%02X%02X%02X%02X%02X.\n", 
Dúe˘Devi˚E¡ryPå
->
BD_ADDR
.
BD_ADDR5
, Dúe˘Devi˚E¡ryPå->BD_ADDR.
BD_ADDR4
, Dúe˘Devi˚E¡ryPå->BD_ADDR.
BD_ADDR3
, Dúe˘Devi˚E¡ryPå->BD_ADDR.
BD_ADDR2
, Dúe˘Devi˚E¡ryPå->BD_ADDR.
BD_ADDR1
, Dúe˘Devi˚E¡ryPå->BD_ADDR.
BD_ADDR0
);

6132 
	`QCLI_Prötf
(
bÀ_group
, " RSSI: %d.\n", ()(
Dúe˘Devi˚E¡ryPå
->
RSSI
));

6136 
Di•œyProm±
 = 
Ál£
;

6140 if(
Di•œyProm±
)

6141 
	`QCLI_Di•œy_Prom±
();

6143 
	}
}

6145 
	$Bulb_Inô
()

6147 
ªt
;

6148 
quπ_thªad_©å_t
 
thªad_©åibuã
;

6149 
quπ_thªad_t
 
thªad_h™dÀ
;

6150 
	`QCLI_Prötf
(
bÀ_group
, "CreatingÅhread\n");

6151 
	`quπ_pùe_©å_öô
 (&
blbd_q©å
);

6152 
	`quπ_pùe_©å_£t_ñemíts
 (&
blbd_q©å
, 10);

6153 
	`quπ_pùe_©å_£t_ñemít_size
 (&
blbd_q©å
, (*));

6155 i‡(0 !
	`quπ_pùe_¸óã
 (&
blbd_q
, &
blbd_q©å
))

6157 
	`QCLI_Prötf
(
bÀ_group
, "NotábleÅo initialize blbd q\n");

6161 
	`quπ_thªad_©å_öô
(&
thªad_©åibuã
);

6162 
	`quπ_thªad_©å_£t_«me
(&
thªad_©åibuã
, "blbd2_thrd");

6163 
	`quπ_thªad_©å_£t_¥i‹ôy
(&
thªad_©åibuã
, 
BLBD_THREAD_PRIORITY
);

6164 
	`quπ_thªad_©å_£t_°ack_size
(&
thªad_©åibuã
, 
BLBD_THREAD_STACK_SIZE
);

6166 
ªt
 = 
	`quπ_thªad_¸óã
(&
thªad_h™dÀ
, &
thªad_©åibuã
, 
blbd2_thªad
, 
NULL
);

6167 i‡(
ªt
 !
QAPI_OK
)

6169 
	`QCLI_Prötf
(
bÀ_group
, "BLB demoÅhread creation failed\n");

6173 
	}
}

6181 
	$Inôülize_SPPLE_Demo
()

6184 
QCLI_Comm™d_Sètus_t
 
°©us
;

6185 
bÀ_group
 = 
	`QCLI_Regi°î_Comm™d_Group
(
NULL
, &
bÀ_cmd_group
);

6186 i‡(
	`InôülizeBluëoŸh
(Ë!
QCLI_STATUS_SUCCESS_E
)

6188 
	`LOG_ERROR
("BLE: Error InitializeBluetooth()\n");

6192 
°©us
 = 
	`LﬂdPîsi°ítD©a
();

6193 
	`QCLI_Prötf
(
bÀ_group
, "°©u†o‡lﬂdögÅhê≥rsi°íàd©®: %0x\n",
°©us
);

6195 i‡(
	`Advîti£LE
(1Ë!
QCLI_STATUS_SUCCESS_E
)

6197 
	`LOG_ERROR
("BLE:Érror AdvertiseLE()\n");

6200 
	`LOG_ERROR
("BLE: AdveiseLE()Énabled\n");

6202 
	`Bulb_Inô
();

6203  
QCLI_STATUS_SUCCESS_E
;

6204 
	}
}

	@home_automation.h

23 #i‚de‡
__SPPLEDEMOH__


24 
	#__SPPLEDEMOH__


	)

26 
	#QAPI_USE_BLE


	)

28 
	~"q≠i.h
"

29 
	~"q≠i_bÀ_bây≥s.h
"

30 
	~"q˛i_≠i.h
"

32 
	~"home_autom©i⁄_ty≥s.h
"

33 
	~"q≠i_≥rsi°.h
"

37 
Inôülize_SPPLE_Demo
();

40 
uöt32_t
 
GëBluëoŸhSèckID
();

44 
GëC⁄√˘i⁄ID
(
q≠i_BLE_BD_ADDR_t
 
RemŸeDevi˚
);

51 
SåToBD_ADDR
(*
BﬂrdSå
, 
q≠i_BLE_BD_ADDR_t
 *
Bﬂrd_Addªss
);

	@home_automation_types.h

23 #i‚de‡
__SPPLETYPESH__


24 
	#__SPPLETYPESH__


	)

26 
	~"q≠i.h
"

35 
	#SPPLE_ASSIGN_SPPLE_SERVICE_UUID_128
(
_x
Ë
	`QAPI_BLE_ASSIGN_BLUETOOTH_UUID_128
(*((
q≠i_BLE_UUID_128_t
 *)(_x)), 0x14, 0x83, 0x9A, 0xC4, 0x7D, 0x7E, 0x41, 0x5c, 0x9A, 0x42, 0x16, 0x73, 0x40, 0xCF, 0x23, 0x39)

	)

43 
	#SPPLE_COMPARE_SPPLE_SERVICE_UUID_TO_UUID_128
(
_x
Ë
	`QAPI_BLE_COMPARE_BLUETOOTH_UUID_128_TO_CONSTANT
((_x), 0x14, 0x83, 0x9A, 0xC4, 0x7D, 0x7E, 0x41, 0x5c, 0x9A, 0x42, 0x16, 0x73, 0x40, 0xCF, 0x23, 0x39)

	)

47 
	#SPPLE_SERVICE_UUID_CONSTANT
 { 0x39, 0x23, 0xCF, 0x40, 0x73, 0x16, 0x42, 0x9A, 0x5c, 0x41, 0x7E, 0x7D, 0xC4, 0x9A, 0x83, 0x14 }

	)

56 
	#SPPLE_ASSIGN_TX_UUID_128
(
_x
Ë
	`QAPI_BLE_ASSIGN_BLUETOOTH_UUID_128
((_x), 0x07, 0x34, 0x59, 0x4A, 0xA8, 0xE7, 0x4b, 0x1a, 0xA6, 0xB1, 0xCD, 0x52, 0x43, 0x05, 0x9A, 0x57)

	)

64 
	#SPPLE_COMPARE_SPPLE_TX_UUID_TO_UUID_128
(
_x
Ë
	`QAPI_BLE_COMPARE_BLUETOOTH_UUID_128_TO_CONSTANT
((_x), 0x07, 0x34, 0x59, 0x4A, 0xA8, 0xE7, 0x4b, 0x1a, 0xA6, 0xB1, 0xCD, 0x52, 0x43, 0x05, 0x9A, 0x57)

	)

68 
	#SPPLE_TX_CHARACTERISTIC_UUID_CONSTANT
 { 0x57, 0x9A, 0x05, 0x43, 0x52, 0xCD, 0xB1, 0xA6, 0x1a, 0x4b, 0xE7, 0xA8, 0x4A, 0x59, 0x34, 0x07 }

	)

77 
	#SPPLE_ASSIGN_TX_CREDITS_UUID_128
(
_x
Ë
	`QAPI_BLE_ASSIGN_BLUETOOTH_UUID_128
((_x), 0xBA, 0x04, 0xC4, 0xB2, 0x89, 0x2B, 0x43, 0xbe, 0xB6, 0x9C, 0x5D, 0x13, 0xF2, 0x19, 0x53, 0x92)

	)

86 
	#SPPLE_COMPARE_SPPLE_TX_CREDITS_UUID_TO_UUID_128
(
_x
Ë
	`QAPI_BLE_COMPARE_BLUETOOTH_UUID_128_TO_CONSTANT
((_x), 0xBA, 0x04, 0xC4, 0xB2, 0x89, 0x2B, 0x43, 0xbe, 0xB6, 0x9C, 0x5D, 0x13, 0xF2, 0x19, 0x53, 0x92)

	)

90 
	#SPPLE_TX_CREDITS_CHARACTERISTIC_UUID_CONSTANT
 { 0x92, 0x53, 0x19, 0xF2, 0x13, 0x5D, 0x9C, 0xB6, 0xbe, 0x43, 0x2B, 0x89, 0xB2, 0xC4, 0x04, 0xBA }

	)

99 
	#SPPLE_ASSIGN_RX_UUID_128
(
_x
Ë
	`QAPI_BLE_ASSIGN_BLUETOOTH_UUID_128
((_x), 0x8B, 0x00, 0xAC, 0xE7, 0xEB, 0x0B, 0x49, 0xb0, 0xBB, 0xE9, 0x9A, 0xEE, 0x0A, 0x26, 0xE1, 0xA3)

	)

107 
	#SPPLE_COMPARE_SPPLE_RX_UUID_TO_UUID_128
(
_x
Ë
	`QAPI_BLE_COMPARE_BLUETOOTH_UUID_128_TO_CONSTANT
((_x), 0x8B, 0x00, 0xAC, 0xE7, 0xEB, 0x0B, 0x49, 0xb0, 0xBB, 0xE9, 0x9A, 0xEE, 0x0A, 0x26, 0xE1, 0xA3)

	)

111 
	#SPPLE_RX_CHARACTERISTIC_UUID_CONSTANT
 { 0xA3, 0xE1, 0x26, 0x0A, 0xEE, 0x9A, 0xE9, 0xBB, 0xb0, 0x49, 0x0B, 0xEB, 0xE7, 0xAC, 0x00, 0x8B }

	)

120 
	#SPPLE_ASSIGN_RX_CREDITS_UUID_128
(
_x
Ë
	`QAPI_BLE_ASSIGN_BLUETOOTH_UUID_128
((_x), 0xE0, 0x6D, 0x5E, 0xFB, 0x4F, 0x4A, 0x45, 0xc0, 0x9E, 0xB1, 0x37, 0x1A, 0xE5, 0xA1, 0x4A, 0xD4)

	)

129 
	#SPPLE_COMPARE_SPPLE_RX_CREDITS_UUID_TO_UUID_128
(
_x
Ë
	`QAPI_BLE_COMPARE_BLUETOOTH_UUID_128_TO_CONSTANT
((_x), 0xE0, 0x6D, 0x5E, 0xFB, 0x4F, 0x4A, 0x45, 0xc0, 0x9E, 0xB1, 0x37, 0x1A, 0xE5, 0xA1, 0x4A, 0xD4)

	)

133 
	#SPPLE_RX_CREDITS_CHARACTERISTIC_UUID_CONSTANT
 { 0xD4, 0x4A, 0xA1, 0xE5, 0x1A, 0x37, 0xB1, 0x9E, 0xc0, 0x45, 0x4A, 0x4F, 0xFB, 0x5E, 0x6D, 0xE0 }

	)

137 
	s_ègSPPLE_Clõ¡_Info_t


139 
uöt16_t
 
	mTx_Ch¨a˘îi°ic
;

140 
uöt16_t
 
	mTx_Clõ¡_C⁄figuøti⁄_Des¸ùt‹
;

141 
uöt16_t
 
	mRx_Ch¨a˘îi°ic
;

142 
uöt16_t
 
	mTx_Cªdô_Ch¨a˘îi°ic
;

143 
uöt16_t
 
	mRx_Cªdô_Ch¨a˘îi°ic
;

144 
uöt16_t
 
	mRx_Cªdô_Clõ¡_C⁄figuøti⁄_Des¸ùt‹
;

145 } 
	tSPPLE_Clõ¡_Info_t
;

147 
	#SPPLE_CLIENT_INFO_DATA_SIZE
 ((
SPPLE_Clõ¡_Info_t
))

	)

149 
	#SPPLE_CLIENT_INFORMATION_VALID
(
_x
Ë(((_x).
Tx_Ch¨a˘îi°ic
Ë&& ((_x).
Tx_Clõ¡_C⁄figuøti⁄_Des¸ùt‹
Ë&& ((_x).
Rx_Ch¨a˘îi°ic
Ë&& ((_x).
Tx_Cªdô_Ch¨a˘îi°ic
Ë&& ((_x).
Rx_Cªdô_Ch¨a˘îi°ic
Ë&& ((_x).
Rx_Cªdô_Clõ¡_C⁄figuøti⁄_Des¸ùt‹
))

	)

154 
	s_ègSPPLE_Sîvî_Info_t


156 
uöt16_t
 
	mTx_Clõ¡_C⁄figuøti⁄_Des¸ùt‹
;

157 
uöt16_t
 
	mRx_Cªdô_Clõ¡_C⁄figuøti⁄_Des¸ùt‹
;

158 } 
	tSPPLE_Sîvî_Info_t
;

160 
	#SPPLE_SERVER_INFO_DATA_SIZE
 ((
SPPLE_Sîvî_Info_t
))

	)

164 
	#SPPLE_TX_CREDIT_VALUE_LENGTH
 ((
uöt16_t
))

	)

168 
	#SPPLE_RX_CREDIT_VALUE_LENGTH
 ((
uöt16_t
))

	)

172 
	#SPPLE_CLIENT_CHARACTERISTIC_CONFIGURATION_VALUE_LENGTH
 ((
uöt16_t
))

	)

177 
	#SPPLE_SERVICE_FLAGS
 (
QAPI_BLE_GATT_SERVICE_FLAGS_LE_SERVICE
)

	)

	@ota/ble_server.c

23 
	~<°döt.h
>

24 
	~<°rög.h
>

26 
	~"bÀ_£rvî.h
"

27 
	~"q≠i.h
"

28 
	~"mÆloc.h
"

29 
	~"quπ_sig«l.h
"

30 
	~"quπ_timî.h
"

31 
	~"quπ_muãx.h
"

32 
	~"quπ_îr‹.h
"

33 
	~"q˛i_≠i.h
"

34 
	~"quπ_thªad.h
"

35 
	~"°rög.h
"

39 
	tBﬂrdSå_t
[16];

41 
BD_ADDRToSå
(
q≠i_BLE_BD_ADDR_t
 
Bﬂrd_Addªss
, 
BﬂrdSå_t
 
BﬂrdSå
);

42 
lock
();

43 
u∆ock
();

44 
uöt32_t
 
gë_smokedëe˘‹_vÆue
();

46 
uöt16_t
 
	gBulbSèã
 = 
BULB_STATE_DISCONNECTED
;

47 
uöt32_t
 
	gnŸify_thªad_Êag
 = 0;

48 
uöt32_t
 
	gbÀ_°ack_id
 = 0;

49 
QCLI_Group_H™dÀ_t
 
bÀ_group
;

50 
uöt32_t
 
BT_Stk_Id
();

52 
GATT_SîvîEvítCÆlback_Home_Autom©i⁄
(
uöt32_t
 
BluëoŸhSèckID
, 
q≠i_BLE_GATT_Sîvî_Evít_D©a_t
 *
GATT_SîvîEvítD©a
, uöt32_à
CÆlbackP¨amëî
);

54 
q≠i_BLE_GATT_Sîvî_Evít_D©a_t
 *
	gg©t_£vî
;

57 
	$BD_ADDRToSå
(
q≠i_BLE_BD_ADDR_t
 
Bﬂrd_Addªss
, 
BﬂrdSå_t
 
BﬂrdSå
)

59 
	`¢¥ötf
((*)
BﬂrdSå
, ((
BﬂrdSå_t
)/()), "0x%02X%02X%02X%02X%02X%02X", 
Bﬂrd_Addªss
.
BD_ADDR5
, Bﬂrd_Addªss.
BD_ADDR4
 , Bﬂrd_Addªss.
BD_ADDR3
, Bﬂrd_Addªss.
BD_ADDR2
, Bﬂrd_Addªss.
BD_ADDR1
, Bﬂrd_Addªss.
BD_ADDR0
);

60 
	}
}

63 c⁄° 
q≠i_BLE_GATT_Prim¨y_Sîvi˚_128_E¡ry_t
 
	gBLE_LOCK_Sîvi˚_UUID
 =

65 
BLE_LOCK_DEC_SERVICE_UUID_CONSTANT


70 c⁄° 
q≠i_BLE_GATT_Ch¨a˘îi°ic_De˛¨©i⁄_128_E¡ry_t
 
	gBLE_LOCK_CHAR_De˛¨©i⁄
 =

72 (
QAPI_BLE_GATT_CHARACTERISTIC_PROPERTIES_READ
 | 
QAPI_BLE_GATT_CHARACTERISTIC_PROPERTIES_WRITE
),

73 
BLE_LOCK_DEC_CHARACTERISTIC_UUID_CONSTANT


76 c⁄° 
q≠i_BLE_GATT_Ch¨a˘îi°ic_De˛¨©i⁄_128_E¡ry_t
 
	gBLE_SMO_DET_CHAR_De˛¨©i⁄
 =

78 (
QAPI_BLE_GATT_CHARACTERISTIC_PROPERTIES_NOTIFY
 ),

79 
BLE_SMO_DEC_CHARACTERISTIC_UUID_CONSTANT


82 c⁄° 
q≠i_BLE_GATT_Ch¨a˘îi°ic_De˛¨©i⁄_128_E¡ry_t
 
	gBLE_BULB_CHAR_De˛¨©i⁄
 =

84 (
QAPI_BLE_GATT_CHARACTERISTIC_PROPERTIES_READ
 | 
QAPI_BLE_GATT_CHARACTERISTIC_PROPERTIES_WRITE
 | 
QAPI_BLE_GATT_CHARACTERISTIC_PROPERTIES_NOTIFY
),

85 
BLE_BULB_DEC_CHARACTERISTIC_UUID_CONSTANT


89 c⁄° 
q≠i_BLE_GATT_Ch¨a˘îi°ic_VÆue_128_E¡ry_t
 
	gBLE_LOCK_VÆue
 =

91 
BLE_LOCK_DEC_CHARACTERISTIC_UUID_CONSTANT
,

93 
NULL


96 c⁄° 
q≠i_BLE_GATT_Ch¨a˘îi°ic_VÆue_128_E¡ry_t
 
	gBLE_SMO_DET_VÆue
 =

98 
BLE_SMO_DEC_CHARACTERISTIC_UUID_CONSTANT
,

100 
NULL


103 c⁄° 
q≠i_BLE_GATT_Ch¨a˘îi°ic_VÆue_128_E¡ry_t
 
	gBLE_BULB_VÆue
 =

105 
BLE_BULB_DEC_CHARACTERISTIC_UUID_CONSTANT
,

107 
NULL


110 
q≠i_BLE_GATT_Ch¨a˘îi°ic_Des¸ùt‹_16_E¡ry_t
 
	gLock_Clõ¡_Ch¨a˘îi°ic_C⁄figuøti⁄
 =

112 
QAPI_BLE_GATT_CLIENT_CHARACTERISTIC_CONFIGURATION_BLUETOOTH_UUID_CONSTANT
,

113 
QAPI_BLE_GATT_CLIENT_CHARACTERISTIC_CONFIGURATION_LENGTH
,

114 
NULL


118 
q≠i_BLE_GATT_Ch¨a˘îi°ic_Des¸ùt‹_16_E¡ry_t
 
	gSmo_Dë_Clõ¡_Ch¨a˘îi°ic_C⁄figuøti⁄
 =

120 
QAPI_BLE_GATT_CLIENT_CHARACTERISTIC_CONFIGURATION_BLUETOOTH_UUID_CONSTANT
,

121 
QAPI_BLE_GATT_CLIENT_CHARACTERISTIC_CONFIGURATION_LENGTH
,

122 
NULL


125 
q≠i_BLE_GATT_Ch¨a˘îi°ic_Des¸ùt‹_16_E¡ry_t
 
	gBulb_Clõ¡_Ch¨a˘îi°ic_C⁄figuøti⁄
 =

127 
QAPI_BLE_GATT_CLIENT_CHARACTERISTIC_CONFIGURATION_BLUETOOTH_UUID_CONSTANT
,

128 
QAPI_BLE_GATT_CLIENT_CHARACTERISTIC_CONFIGURATION_LENGTH
,

129 
NULL


137 c⁄° 
q≠i_BLE_GATT_Sîvi˚_Aâribuã_E¡ry_t
 
	gBLE_IO_Sîvi˚
[] =

139 {
QAPI_BLE_GATT_ATTRIBUTE_FLAGS_READABLE
, 
QAPI_BLE_AET_PRIMARY_SERVICE_128_E
, (
uöt8_t
 *)&
BLE_LOCK_Sîvi˚_UUID
 },

140 {
QAPI_BLE_GATT_ATTRIBUTE_FLAGS_READABLE
, 
QAPI_BLE_AET_CHARACTERISTIC_DECLARATION_128_E
, (
uöt8_t
 *)&
BLE_LOCK_CHAR_De˛¨©i⁄
 },

141 {
QAPI_BLE_GATT_ATTRIBUTE_FLAGS_READABLE_WRITABLE
, 
QAPI_BLE_AET_CHARACTERISTIC_VALUE_128_E
, (
uöt8_t
 *)&
BLE_LOCK_VÆue
 },

142 {
QAPI_BLE_GATT_ATTRIBUTE_FLAGS_READABLE_WRITABLE
, 
QAPI_BLE_AET_CHARACTERISTIC_DESCRIPTOR_16_E
, (
uöt8_t
 *)&
Lock_Clõ¡_Ch¨a˘îi°ic_C⁄figuøti⁄
},

143 {
QAPI_BLE_GATT_ATTRIBUTE_FLAGS_READABLE
, 
QAPI_BLE_AET_CHARACTERISTIC_DECLARATION_128_E
, (
uöt8_t
 *)&
BLE_SMO_DET_CHAR_De˛¨©i⁄
 },

144 {
QAPI_BLE_GATT_ATTRIBUTE_FLAGS_READABLE_WRITABLE
, 
QAPI_BLE_AET_CHARACTERISTIC_VALUE_128_E
, (
uöt8_t
 *)&
BLE_SMO_DET_VÆue
 },

145 {
QAPI_BLE_GATT_ATTRIBUTE_FLAGS_READABLE_WRITABLE
, 
QAPI_BLE_AET_CHARACTERISTIC_DESCRIPTOR_16_E
, (
uöt8_t
 *)&
Smo_Dë_Clõ¡_Ch¨a˘îi°ic_C⁄figuøti⁄
},

146 {
QAPI_BLE_GATT_ATTRIBUTE_FLAGS_READABLE
, 
QAPI_BLE_AET_CHARACTERISTIC_DECLARATION_128_E
, (
uöt8_t
 *)&
BLE_BULB_CHAR_De˛¨©i⁄
 },

147 {
QAPI_BLE_GATT_ATTRIBUTE_FLAGS_READABLE_WRITABLE
, 
QAPI_BLE_AET_CHARACTERISTIC_VALUE_128_E
, (
uöt8_t
 *)&
BLE_BULB_VÆue
 },

148 {
QAPI_BLE_GATT_ATTRIBUTE_FLAGS_READABLE_WRITABLE
, 
QAPI_BLE_AET_CHARACTERISTIC_DESCRIPTOR_16_E
, (
uöt8_t
 *)&
Bulb_Clõ¡_Ch¨a˘îi°ic_C⁄figuøti⁄
},

154 
uöt32_t
 
	$gë_smokedëe˘‹_vÆue
()

156 
QCLI_P¨amëî_t
 
∑øm
[2];

157 
∑øm
[0].
I¡egî_VÆue
 = 449;

158 
∑øm
[0].
I¡egî_Is_VÆid
 = 
åue
;

159 
∑øm
[1].
I¡egî_VÆue
 = 809;

160 
∑øm
[1].
I¡egî_Is_VÆid
 = 
åue
;

161  
	`home_autom©i⁄_adc
(0, 2);

162 
	}
}

165 
	$lock
()

167 
QCLI_P¨amëî_t
 
∑øm
[5];

168 
∑øm
[0].
I¡egî_VÆue
 = 5000;

169 
∑øm
[0].
I¡egî_Is_VÆid
 = 
åue
;

170 
∑øm
[1].
I¡egî_VÆue
 = 1200;

171 
∑øm
[1].
I¡egî_Is_VÆid
 = 
åue
;

172 
∑øm
[2].
I¡egî_VÆue
 = 2000;

173 
∑øm
[2].
I¡egî_Is_VÆid
 = 
åue
;

174 
∑øm
[3].
I¡egî_VÆue
 = 1;

175 
∑øm
[3].
I¡egî_Is_VÆid
 = 
åue
;

176 
∑øm
[4].
I¡egî_VÆue
 = 1;

177 
∑øm
[4].
I¡egî_Is_VÆid
 = 
åue
;

178 
	`pwm_drivî_ã°
(5, 
∑øm
);

179 
	}
}

181 
	$u∆ock
()

183 
QCLI_P¨amëî_t
 
∑øm
[5];

184 
∑øm
[0].
I¡egî_VÆue
 = 5000;

185 
∑øm
[0].
I¡egî_Is_VÆid
 = 
åue
;

186 
∑øm
[1].
I¡egî_VÆue
 = 500;

187 
∑øm
[1].
I¡egî_Is_VÆid
 = 
åue
;

188 
∑øm
[2].
I¡egî_VÆue
 = 2000;

189 
∑øm
[2].
I¡egî_Is_VÆid
 = 
åue
;

190 
∑øm
[3].
I¡egî_VÆue
 = 1;

191 
∑øm
[3].
I¡egî_Is_VÆid
 = 
åue
;

192 
∑øm
[4].
I¡egî_VÆue
 = 1;

193 
∑øm
[4].
I¡egî_Is_VÆid
 = 
åue
;

194 
	`pwm_drivî_ã°
(5, 
∑øm
);

195 
	}
}

198 
	$BLE_IOSîvi˚
()

200 
q≠i_BLE_GATT_Aâribuã_H™dÀ_Group_t
 
Sîvi˚H™dÀGroup
;

201 
Resu…
 = 0;

205 
Sîvi˚H™dÀGroup
.
Sèπög_H™dÀ
 = 0;

206 
Sîvi˚H™dÀGroup
.
Endög_H™dÀ
 = 0;

209 if(!
	`q≠i_BLE_BSC_LockBluëoŸhSèck
(
	`BT_Stk_Id
()))

212 
Resu…
 = 
	`q≠i_BLE_GATT_Regi°î_Sîvi˚
(
	`BT_Stk_Id
(),

213 
QAPI_BLE_GATT_SERVICE_FLAGS_LE_SERVICE
,

214 
BLE_LOCK_SERVICE_ATTRIBUTE_COUNT
,

215 (
q≠i_BLE_GATT_Sîvi˚_Aâribuã_E¡ry_t
 *)
BLE_IO_Sîvi˚
,

216 &
Sîvi˚H™dÀGroup
, 
GATT_SîvîEvítCÆlback_Home_Autom©i⁄
, 0);

217 if(
Resu…
 > 0)

220 
	`QCLI_Prötf
(
bÀ_group
, "Home Automation serviceÑegistered.");

225 
	`QCLI_Prötf
(
bÀ_group
, "Home Automation service couldn't beÑegistered.");

229 
	`q≠i_BLE_BSC_UnLockBluëoŸhSèck
(
	`BT_Stk_Id
());

233 
	`QCLI_Prötf
(
bÀ_group
, "Home Automation-BLE Initialization failed.");

234  
Resu…
;

236 
	}
}

239 
	$nŸify_thªad
()

241 
uöt32_t
 
SmokeDëe˘‹VÆue
 = 0;

242 
uöt32_t
 
Resu…
 = 0;

243 
nŸify_thªad_Êag
) {

244 
SmokeDëe˘‹VÆue
 = 
	`gë_smokedëe˘‹_vÆue
();

245 
	`ASSIGN_HOST_DWORD_TO_LITTLE_ENDIAN_UNALIGNED_DWORD
(&
Resu…
, 
SmokeDëe˘‹VÆue
);

246 
	`q≠i_BLE_GATT_H™dÀ_VÆue_NŸifiˇti⁄
(
bÀ_°ack_id
, 
g©t_£vî
->
Evít_D©a
.
GATT_Ród_Reque°_D©a
->
Sîvi˚ID
, g©t_£vî->Evít_D©a.GATT_Ród_Reque°_D©a->
C⁄√˘i⁄ID
, 
BLE_SMO_DET_ATTRIBUTE_OFFSET
, (
Resu…
), &Result);

247 
	`SÀï
(30000);

250 
	}
}

252 
	$run_thªad
()

254 
quπ_thªad_©å_t
 
Thªad_Aâribã
;

255 
quπ_thªad_t
 
Thªad_H™dÀ
;

256 
Resu…
;

259 
	`quπ_thªad_©å_öô
(&
Thªad_Aâribã
);

260 
	`quπ_thªad_©å_£t_«me
(&
Thªad_Aâribã
, "BLE-Notify Thread");

261 
	`quπ_thªad_©å_£t_¥i‹ôy
(&
Thªad_Aâribã
, 
PAL_THREAD_PRIORITY
); 
	`quπ_thªad_©å_£t_°ack_size
(&Thªad_Aâribã, 
PAL_THREAD_STACK_SIZE
);

262 
Resu…
 = 
	`quπ_thªad_¸óã
(&
Thªad_H™dÀ
, &
Thªad_Aâribã
, 
nŸify_thªad
, 
NULL
);

263 if(
Resu…
 !
QURT_EOK
)

265 
	`QCLI_Prötf
(
bÀ_group
, "Something went wrong withÑunningÅhe BLE-Notify Thread.");

267 
	}
}

270 
	$GATT_SîvîEvítCÆlback_Home_Autom©i⁄
(
uöt32_t
 
BluëoŸhSèckID
, 
q≠i_BLE_GATT_Sîvî_Evít_D©a_t
 *
GATT_SîvîEvítD©a
, uöt32_à
CÆlbackP¨amëî
)

272 
uöt16_t
 
LockSèã
;

273 
uöt16_t
 
LôéeEndünVÆueLock
 = 0;

274 
uöt16_t
 
AâribuãOff£t
;

275 
uöt16_t
 
AâribuãLígth
;

276 
uöt32_t
 
LôéeEndünVÆueSmoke
 = 0;

277 
uöt32_t
 
SmokeDëe˘‹Vœue
;

278 
uöt16_t
 
LôéeEndünVÆueBulb
 = 0;

279 
uöt32_t
 
VÆue
;

280 
uöt32_t
 
blb_nŸifiˇti⁄_Êag
 = 0;

281 
BﬂrdSå_t
 
RemŸeDevi˚Addªss
;

282 
q≠i_BLE_BD_ADDR_t
 
RemŸeAddªss
;

283 
q≠i_BLE_GAP_En¸y±i⁄_Mode_t
 
GAPEn¸y±i⁄Mode
;

286 if((
BluëoŸhSèckID
Ë&& (
GATT_SîvîEvítD©a
))

288 
	`QCLI_Prötf
(
bÀ_group
, " In GATT_ServerEventCallback_Home_Automation \n ");

289 
GATT_SîvîEvítD©a
->
Evít_D©a_Ty≥
)

292 
QAPI_BLE_ET_GATT_CONNECTION_DEVICE_CONNECTION_E
 :

293 
	`QCLI_Prötf
(
bÀ_group
, " In QAPI_BLE_ET_GATT_CONNECTION_DEVICE_CONNECTION_E \n ");

294 
RemŸeAddªss
 = 
GATT_SîvîEvítD©a
->
Evít_D©a
.
GATT_Devi˚_C⁄√˘i⁄_D©a
->
RemŸeDevi˚
;

296 
	`BD_ADDRToSå
 (
GATT_SîvîEvítD©a
->
Evít_D©a
.
GATT_Devi˚_C⁄√˘i⁄_D©a
->
RemŸeDevi˚
,
RemŸeDevi˚Addªss
);

297 
	`QCLI_Prötf
(
bÀ_group
, " RemŸêDevi˚ Addªss: %s.\n", 
RemŸeDevi˚Addªss
);

301 
QAPI_BLE_ET_GATT_SERVER_READ_REQUEST_E
:

303 if(
GATT_SîvîEvítD©a
->
Evít_D©a
.
GATT_Ród_Reque°_D©a
)

308 
	`QCLI_Prötf
(
bÀ_group
, "Encryption isÉnabled\n");

309 if(
GATT_SîvîEvítD©a
->
Evít_D©a
.
GATT_Ród_Reque°_D©a
->
AâribuãVÆueOff£t
 == 0)

312 
GATT_SîvîEvítD©a
->
Evít_D©a
.
GATT_Ród_Reque°_D©a
->
AâribuãOff£t
)

314 
BLE_LOCK_ATTRIBUTE_OFFSET
:

315 
	`ASSIGN_HOST_WORD_TO_LITTLE_ENDIAN_UNALIGNED_WORD
(&
LôéeEndünVÆueLock
, 
LockSèã
);

316 
	`q≠i_BLE_GATT_Ród_Re•⁄£
(
BluëoŸhSèckID
, 
GATT_SîvîEvítD©a
->
Evít_D©a
.
GATT_Ród_Reque°_D©a
->
Tønß˘i⁄ID
, (
LôéeEndünVÆueLock
), (
uöt16_t
 *)&LittleEndianValueLock);

317 
	`QCLI_Prötf
(
bÀ_group
, "Reading Lock Status.");

319 
BLE_BULB_ATTRIBUTE_OFFSET
:

320 
	`ASSIGN_HOST_WORD_TO_LITTLE_ENDIAN_UNALIGNED_WORD
(&
LôéeEndünVÆueBulb
, 
BulbSèã
);

321 
	`q≠i_BLE_GATT_Ród_Re•⁄£
(
BluëoŸhSèckID
, 
GATT_SîvîEvítD©a
->
Evít_D©a
.
GATT_Ród_Reque°_D©a
->
Tønß˘i⁄ID
, (
LôéeEndünVÆueBulb
), (
uöt16_t
 *)&LittleEndianValueBulb);

322 
	`QCLI_Prötf
(
bÀ_group
, "ReadingÅhe bulb status.");

325 
	`q≠i_BLE_GATT_Eº‹_Re•⁄£
(
BluëoŸhSèckID
, 
GATT_SîvîEvítD©a
->
Evít_D©a
.
GATT_Ród_Reque°_D©a
->
Tønß˘i⁄ID
, GATT_SîvîEvítD©a->Evít_D©a.GATT_Ród_Reque°_D©a->
AâribuãOff£t
, 
QAPI_BLE_ATT_PROTOCOL_ERROR_CODE_READ_NOT_PERMITTED
);

329 
	`q≠i_BLE_GATT_Eº‹_Re•⁄£
(
BluëoŸhSèckID
, 
GATT_SîvîEvítD©a
->
Evít_D©a
.
GATT_Ród_Reque°_D©a
->
Tønß˘i⁄ID
, GATT_SîvîEvítD©a->Evít_D©a.GATT_Ród_Reque°_D©a->
AâribuãOff£t
, 
QAPI_BLE_ATT_PROTOCOL_ERROR_CODE_ATTRIBUTE_NOT_LONG
);

334 
QAPI_BLE_ET_GATT_SERVER_WRITE_REQUEST_E
:

336 if(
GATT_SîvîEvítD©a
->
Evít_D©a
.
GATT_Wrôe_Reque°_D©a
)

342 if(
GATT_SîvîEvítD©a
->
Evít_D©a
.
GATT_Wrôe_Reque°_D©a
->
AâribuãVÆueOff£t
 == 0)

345 
AâribuãOff£t
 = 
GATT_SîvîEvítD©a
->
Evít_D©a
.
GATT_Wrôe_Reque°_D©a
->AttributeOffset;

346 
AâribuãLígth
 = 
GATT_SîvîEvítD©a
->
Evít_D©a
.
GATT_Wrôe_Reque°_D©a
->
AâribuãVÆueLígth
;

349 
AâribuãOff£t
)

351 
BLE_LOCK_ATTRIBUTE_OFFSET
:

352 
LockSèã
 = 
	`READ_UNALIGNED_BYTE_LITTLE_ENDIAN
(
GATT_SîvîEvítD©a
->
Evít_D©a
.
GATT_Wrôe_Reque°_D©a
->
AâribuãVÆue
);

353 i‡(
LockSèã
 != 0) {

354 
	`lock
();

355 
	`QCLI_Prötf
(
bÀ_group
, "Locked.\n");

356 
LockSèã
 = 1;

357 i‡(
BulbSèã
 !
BULB_STATE_DISCONNECTED
) {

358 
	`SÀï
(1000);

359 i‡(
BulbSèã
 !
BULB_STATE_OFF
) {

360 
	`QCLI_Prötf
(
bÀ_group
, "Bulb isÅurned off.\n");

361 
BulbSèã
 = 
BULB_STATE_OFF
;

362 
	`BLBDWrôeMŸi⁄D©a
(0X00000000);

364 
	`QCLI_Prötf
(
bÀ_group
, "Bulb isálreadyÅurned off.\n");

367 
	`QCLI_Prötf
(
bÀ_group
, "Bulb isÇot connected.\n");

370 
	`u∆ock
();

371 
	`QCLI_Prötf
(
bÀ_group
, "Unlocked.\n");

372 
LockSèã
 = 0;

373 i‡(
BulbSèã
 !
BULB_STATE_DISCONNECTED
) {

374 
	`SÀï
(1000);

375 i‡(
BulbSèã
 !
BULB_STATE_ON
) {

376 
	`QCLI_Prötf
(
bÀ_group
, "Bulb isÅurned on.\n");

377 
BulbSèã
 = 
BULB_STATE_ON
;

378 
	`BLBDWrôeMŸi⁄D©a
(0XBBBBBBBB);

380 
	`QCLI_Prötf
(
bÀ_group
, "Bulb isálreadyÅurned on.\n");

383 
	`QCLI_Prötf
(
bÀ_group
, "Bulb isÇot connected.\n");

387 if(
blb_nŸifiˇti⁄_Êag
) {

388 
	`ASSIGN_HOST_WORD_TO_LITTLE_ENDIAN_UNALIGNED_WORD
(&
LôéeEndünVÆueBulb
, 
BulbSèã
);

389 
	`q≠i_BLE_GATT_H™dÀ_VÆue_NŸifiˇti⁄
(
BluëoŸhSèckID
, 
GATT_SîvîEvítD©a
->
Evít_D©a
.
GATT_Ród_Reque°_D©a
->
Sîvi˚ID
, GATT_SîvîEvítD©a->Evít_D©a.GATT_Ród_Reque°_D©a->
C⁄√˘i⁄ID
, 
BLE_BULB_ATTRIBUTE_OFFSET
, (
LôéeEndünVÆueBulb
), &LittleEndianValueBulb);

391 
	`QCLI_Prötf
(
bÀ_group
, "Bulb Notification is disabled.\n");

393 
	`q≠i_BLE_GATT_Wrôe_Re•⁄£
(
BluëoŸhSèckID
, 
GATT_SîvîEvítD©a
->
Evít_D©a
.
GATT_Wrôe_Reque°_D©a
->
Tønß˘i⁄ID
);

395 
BLE_SMO_DET_CCD_ATTRIBUTE_OFFSET
:

397 
VÆue
 = 
	`READ_UNALIGNED_WORD_LITTLE_ENDIAN
(
GATT_SîvîEvítD©a
->
Evít_D©a
.
GATT_Wrôe_Reque°_D©a
->
AâribuãVÆue
);

398 if(
VÆue
 !
QAPI_BLE_GATT_CLIENT_CONFIGURATION_CHARACTERISTIC_NOTIFY_ENABLE
) {

399 
	`QCLI_Prötf
(
bÀ_group
, "Smoke Detector - DisabledÅheÇotify.");

400 
nŸify_thªad_Êag
 = 0;

403 
	`QCLI_Prötf
(
bÀ_group
, "Smoke Detector - EnabledÅheÇotify.");

404 
nŸify_thªad_Êag
 = 1;

405 
g©t_£vî
 = 
GATT_SîvîEvítD©a
;

406 
bÀ_°ack_id
 = 
BluëoŸhSèckID
;

407 
	`run_thªad
();

409 
	`QCLI_Prötf
(
bÀ_group
, "Reading Smoke Detector Value.");

410 
	`q≠i_BLE_GATT_Wrôe_Re•⁄£
(
BluëoŸhSèckID
, 
GATT_SîvîEvítD©a
->
Evít_D©a
.
GATT_Wrôe_Reque°_D©a
->
Tønß˘i⁄ID
);

412 
BLE_BULB_ATTRIBUTE_OFFSET
:

413 if(
BulbSèã
 !
BULB_STATE_DISCONNECTED
) {

414 
BulbSèã
 = 
	`READ_UNALIGNED_BYTE_LITTLE_ENDIAN
(
GATT_SîvîEvítD©a
->
Evít_D©a
.
GATT_Wrôe_Reque°_D©a
->
AâribuãVÆue
);

415 i‡(
BulbSèã
 !
BULB_STATE_OFF
) {

416 
	`QCLI_Prötf
(
bÀ_group
, "Bulb isÅurned on.");

417 
	`BLBDWrôeMŸi⁄D©a
(0XFFFFFFFF);

418 
BulbSèã
 = 
BULB_STATE_ON
;

421 
	`QCLI_Prötf
(
bÀ_group
, "Bulb isÅurned off.");

422 
BulbSèã
 = 
BULB_STATE_OFF
;

423 
	`BLBDWrôeMŸi⁄D©a
(0X00000000);

426 
	`QCLI_Prötf
(
bÀ_group
, "Bulb isÇot connected");

429 if(
blb_nŸifiˇti⁄_Êag
) {

430 
	`ASSIGN_HOST_WORD_TO_LITTLE_ENDIAN_UNALIGNED_WORD
(&
LôéeEndünVÆueBulb
, 
BulbSèã
);

431 
	`q≠i_BLE_GATT_H™dÀ_VÆue_NŸifiˇti⁄
(
BluëoŸhSèckID
, 
GATT_SîvîEvítD©a
->
Evít_D©a
.
GATT_Ród_Reque°_D©a
->
Sîvi˚ID
, GATT_SîvîEvítD©a->Evít_D©a.GATT_Ród_Reque°_D©a->
C⁄√˘i⁄ID
, 
BLE_BULB_ATTRIBUTE_OFFSET
, (
LôéeEndünVÆueBulb
), &LittleEndianValueBulb);

433 
	`QCLI_Prötf
(
bÀ_group
, "Bulb Notification is Disabled.\n");

435 
	`q≠i_BLE_GATT_Wrôe_Re•⁄£
(
BluëoŸhSèckID
, 
GATT_SîvîEvítD©a
->
Evít_D©a
.
GATT_Wrôe_Reque°_D©a
->
Tønß˘i⁄ID
);

437 
BLE_BULB_CCD_ATTRIBUTE_OFFSET
:

438 
VÆue
 = 
	`READ_UNALIGNED_WORD_LITTLE_ENDIAN
(
GATT_SîvîEvítD©a
->
Evít_D©a
.
GATT_Wrôe_Reque°_D©a
->
AâribuãVÆue
);

439 if(
VÆue
 !
QAPI_BLE_GATT_CLIENT_CONFIGURATION_CHARACTERISTIC_NOTIFY_ENABLE
) {

440 
	`QCLI_Prötf
(
bÀ_group
, "Bulb Notification Disabled.\n");

441 
blb_nŸifiˇti⁄_Êag
 = 0;

443 
blb_nŸifiˇti⁄_Êag
 = 1;

444 
	`QCLI_Prötf
(
bÀ_group
, "Bulb NŸifiˇti⁄ E«bÀd. Sèã: %d\n", 
BulbSèã
);

445 
	`ASSIGN_HOST_WORD_TO_LITTLE_ENDIAN_UNALIGNED_WORD
(&
LôéeEndünVÆueBulb
, 
BulbSèã
);

446 
	`q≠i_BLE_GATT_H™dÀ_VÆue_NŸifiˇti⁄
(
BluëoŸhSèckID
, 
GATT_SîvîEvítD©a
->
Evít_D©a
.
GATT_Ród_Reque°_D©a
->
Sîvi˚ID
, GATT_SîvîEvítD©a->Evít_D©a.GATT_Ród_Reque°_D©a->
C⁄√˘i⁄ID
, 
BLE_BULB_ATTRIBUTE_OFFSET
, (
LôéeEndünVÆueBulb
), &LittleEndianValueBulb);

448 
	`q≠i_BLE_GATT_Wrôe_Re•⁄£
(
BluëoŸhSèckID
, 
GATT_SîvîEvítD©a
->
Evít_D©a
.
GATT_Wrôe_Reque°_D©a
->
Tønß˘i⁄ID
);

451 
	`q≠i_BLE_GATT_Eº‹_Re•⁄£
(
BluëoŸhSèckID
, 
GATT_SîvîEvítD©a
->
Evít_D©a
.
GATT_Ród_Reque°_D©a
->
Tønß˘i⁄ID
, GATT_SîvîEvítD©a->Evít_D©a.GATT_Ród_Reque°_D©a->
AâribuãOff£t
, 
QAPI_BLE_ATT_PROTOCOL_ERROR_CODE_READ_NOT_PERMITTED
);

456 
	`q≠i_BLE_GATT_Eº‹_Re•⁄£
(
BluëoŸhSèckID
, 
GATT_SîvîEvítD©a
->
Evít_D©a
.
GATT_Wrôe_Reque°_D©a
->
Tønß˘i⁄ID
, GATT_SîvîEvítD©a->Evít_D©a.GATT_Wrôe_Reque°_D©a->
AâribuãOff£t
, 
QAPI_BLE_ATT_PROTOCOL_ERROR_CODE_ATTRIBUTE_NOT_LONG
);

464 
	}
}

	@ota/ble_server.h

2 #i‚de‡
__BLE_SERVER__


3 
	#__BLE_SERVER__


	)

5 
	#QAPI_USE_BLE


	)

7 
	~"q≠i.h
"

11 
	#PAL_THREAD_STACK_SIZE
 (3072)

	)

12 
	#PAL_THREAD_PRIORITY
 (10)

	)

14 
	#BLE_OTA_TIMEOUT
 (
	`quπ_timî_c⁄vît_time_to_ticks
(180000, 
QURT_TIME_MSEC
))

	)

16 
	#BLE_LOCK_SERVICE_ATTRIBUTE_COUNT
 ((
BLE_IO_Sîvi˚
)/(
q≠i_BLE_GATT_Sîvi˚_Aâribuã_E¡ry_t
))

	)

18 
	#READ_UNALIGNED_BYTE_LITTLE_ENDIAN
(
_x
Ë(((
uöt8_t
 *)(_x))[0])

	)

19 
	#READ_UNALIGNED_WORD_LITTLE_ENDIAN
(
_x
Ë((
uöt16_t
)((((uöt16_t)(((
uöt8_t
 *)(_x))[1])Ë<< 8Ë| ((uöt16_t)(((uöt8_à*)(_x))[0]))))

	)

20 
	#READ_UNALIGNED_DWORD_LITTLE_ENDIAN
(
_x
Ë((
uöt32_t
)((((uöt32_t)(((
uöt8_t
 *)(_x))[3])Ë<< 24Ë| (((uöt32_t)(((uöt8_à*)(_x))[2])Ë<< 16Ë| (((uöt32_t)(((uöt8_à*)(_x))[1])Ë<< 8Ë| ((uöt32_t)(((uöt8_à*)(_x))[0]))))

	)

22 
	#ASSIGN_HOST_BYTE_TO_LITTLE_ENDIAN_UNALIGNED_BYTE
(
_x
, 
_y
) \

24 ((
uöt8_t
 *)(
_x
))[0] = ((uöt8_t)(
_y
)); \

25 }

	)

27 
	#ASSIGN_HOST_WORD_TO_LITTLE_ENDIAN_UNALIGNED_WORD
(
_x
, 
_y
) \

29 ((
uöt8_t
 *)(
_x
))[0] = ((uöt8_t)(((
uöt16_t
)(
_y
)) & 0xFF)); \

30 ((
uöt8_t
 *)(
_x
))[1] = ((uöt8_t)((((
uöt16_t
)(
_y
)) >> 8) & 0xFF)); \

31 }

	)

33 
	#ASSIGN_HOST_DWORD_TO_LITTLE_ENDIAN_UNALIGNED_DWORD
(
_x
, 
_y
) \

35 ((
uöt8_t
 *)(
_x
))[0] = ((uöt8_t)(((
uöt32_t
)(
_y
)) & 0xFF)); \

36 ((
uöt8_t
 *)(
_x
))[1] = ((uöt8_t)((((
uöt32_t
)(
_y
)) >> 8) & 0xFF)); \

37 ((
uöt8_t
 *)(
_x
))[2] = ((uöt8_t)((((
uöt32_t
)(
_y
)) >> 16) & 0xFF)); \

38 ((
uöt8_t
 *)(
_x
))[3] = ((uöt8_t)((((
uöt32_t
)(
_y
)) >> 24) & 0xFF)); \

39 }

	)

41 
	#BLE_LOCK_DEC_SERVICE_UUID_CONSTANT
 { 0xA8, 0xF3, 0x11, 0x98, 0x82, 0x84, 0x4F, 0x78, 0x86, 0x54, 0x14, 0x66, 0x60, 0xEC, 0xDC, 0x91 }

	)

42 
	#BLE_LOCK_DEC_CHARACTERISTIC_UUID_CONSTANT
 { 0x51, 0x71, 0x89, 0x44, 0x98, 0xDA, 0x4B, 0xA8, 0xAB, 0x94, 0x78, 0xE8, 0x71, 0xB6, 0xF9, 0xAA }

	)

43 
	#BLE_SMO_DEC_CHARACTERISTIC_UUID_CONSTANT
 { 0x51, 0x71, 0x89, 0x44, 0x98, 0xDA, 0x4B, 0xA8, 0xAB, 0x94, 0x78, 0xE8, 0x71, 0xB6, 0xF9, 0xAB }

	)

44 
	#BLE_BULB_DEC_CHARACTERISTIC_UUID_CONSTANT
 { 0x51, 0x71, 0x89, 0x44, 0x98, 0xDA, 0x4B, 0xA8, 0xAB, 0x94, 0x78, 0xE8, 0x71, 0xB6, 0xF9, 0xAC }

	)

47 
	#BLE_LOCK_ATTRIBUTE_OFFSET
 2

	)

48 
	#BLE_LOCK_CCD_ATTRIBUTE_OFFSET
 3

	)

50 
	#BLE_SMO_DET_ATTRIBUTE_OFFSET
 5

	)

51 
	#BLE_SMO_DET_CCD_ATTRIBUTE_OFFSET
 6

	)

53 
	#BLE_BULB_ATTRIBUTE_OFFSET
 8

	)

54 
	#BLE_BULB_CCD_ATTRIBUTE_OFFSET
 9

	)

56 
	#SÀï
(
m£c
) do { \

57 
quπ_time_t
 
qtime
;\

58 
qtime
 = 
	`quπ_timî_c⁄vît_time_to_ticks
(
m£c
, 
QURT_TIME_MSEC
);\

59 
	`quπ_thªad_¶ìp
(
qtime
);\

60 } 0)

	)

64 
	eBULB_STATES
 {

66 
	mBULB_STATE_OFF
,

67 
	mBULB_STATE_ON
,

68 
	mBULB_STATE_DISCONNECTED


	@/usr/include/malloc.h

19 #i‚de‡
_MALLOC_H


20 
	#_MALLOC_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<°ddef.h
>

24 
	~<°dio.h
>

26 #ifde‡
_LIBC


27 
	#__MALLOC_HOOK_VOLATILE


	)

28 
	#__MALLOC_DEPRECATED


	)

30 
	#__MALLOC_HOOK_VOLATILE
 vﬁ©ûe

	)

31 
	#__MALLOC_DEPRECATED
 
__©åibuã_dïªˇãd__


	)

35 
__BEGIN_DECLS


38 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

41 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

42 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

49 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

50 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

53 
	$‰ì
 (*
__±r
Ë
__THROW
;

56 
	$c‰ì
 (*
__±r
Ë
__THROW
;

59 *
	$memÆign
 (
size_t
 
__Æignmít
, size_à
__size
)

60 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

63 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

67 *
	$pvÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

71 *(*
__m‹ec‹e
Ë(
±rdiff_t
 
__size
);

74 *
	$__deÁu…_m‹ec‹e
 (
±rdiff_t
 
__size
)

75 
__THROW
 
__©åibuã_mÆloc__
;

79 
	smÆlöfo


81 
¨ía
;

82 
‹dblks
;

83 
smblks
;

84 
hblks
;

85 
hblkhd
;

86 
usmblks
;

87 
fsmblks
;

88 
u‹dblks
;

89 
f‹dblks
;

90 
kìpco°
;

94 
mÆlöfo
 
	$mÆlöfo
 (Ë
__THROW
;

97 #i‚de‡
M_MXFAST


98 
	#M_MXFAST
 1

	)

100 #i‚de‡
M_NLBLKS


101 
	#M_NLBLKS
 2

	)

103 #i‚de‡
M_GRAIN


104 
	#M_GRAIN
 3

	)

106 #i‚de‡
M_KEEP


107 
	#M_KEEP
 4

	)

111 
	#M_TRIM_THRESHOLD
 -1

	)

112 
	#M_TOP_PAD
 -2

	)

113 
	#M_MMAP_THRESHOLD
 -3

	)

114 
	#M_MMAP_MAX
 -4

	)

115 
	#M_CHECK_ACTION
 -5

	)

116 
	#M_PERTURB
 -6

	)

117 
	#M_ARENA_TEST
 -7

	)

118 
	#M_ARENA_MAX
 -8

	)

121 
	$mÆl›t
 (
__∑øm
, 
__vÆ
Ë
__THROW
;

125 
	$mÆloc_åim
 (
size_t
 
__∑d
Ë
__THROW
;

129 
size_t
 
	$mÆloc_ußbÀ_size
 (*
__±r
Ë
__THROW
;

132 
	$mÆloc_°©s
 (Ë
__THROW
;

135 
	$mÆloc_öfo
 (
__›ti⁄s
, 
FILE
 *
__Â
Ë
__THROW
;

138 *
	$mÆloc_gë_°©e
 (Ë
__THROW
;

142 
	$mÆloc_£t_°©e
 (*
__±r
Ë
__THROW
;

147 (*
__MALLOC_HOOK_VOLATILE
 
__mÆloc_öôülize_hook
) ()

148 
__MALLOC_DEPRECATED
;

150 (*
__MALLOC_HOOK_VOLATILE
 
__‰ì_hook
Ë(*
__±r
,

152 
__MALLOC_DEPRECATED
;

153 *(*
__MALLOC_HOOK_VOLATILE
 
__mÆloc_hook
)(
size_t
 
__size
,

155 
__MALLOC_DEPRECATED
;

156 *(*
__MALLOC_HOOK_VOLATILE
 
__ªÆloc_hook
)(*
__±r
,

157 
size_t
 
__size
,

159 
__MALLOC_DEPRECATED
;

160 *(*
__MALLOC_HOOK_VOLATILE
 
__memÆign_hook
)(
size_t
 
__Æignmít
,

161 
size_t
 
__size
,

163 
__MALLOC_DEPRECATED
;

164 (*
__MALLOC_HOOK_VOLATILE
 
__a·î_m‹ec‹e_hook
) ();

167 
	$__mÆloc_check_öô
 (Ë
__THROW
 
__MALLOC_DEPRECATED
;

170 
__END_DECLS


	@/usr/include/stdint.h

22 #i‚de‡
_STDINT_H


23 
	#_STDINT_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/wch¨.h
>

27 
	~<bôs/w‹dsize.h
>

34 #i‚de‡
__öt8_t_deföed


35 
	#__öt8_t_deföed


	)

36 sig√d 
	töt8_t
;

37 
	töt16_t
;

38 
	töt32_t
;

39 #i‡
__WORDSIZE
 == 64

40 
	töt64_t
;

42 
__exãnsi⁄__


43 
	töt64_t
;

48 
	tuöt8_t
;

49 
	tuöt16_t
;

50 #i‚de‡
__uöt32_t_deföed


51 
	tuöt32_t
;

52 
	#__uöt32_t_deföed


	)

54 #i‡
__WORDSIZE
 == 64

55 
	tuöt64_t
;

57 
__exãnsi⁄__


58 
	tuöt64_t
;

65 sig√d 
	töt_Àa°8_t
;

66 
	töt_Àa°16_t
;

67 
	töt_Àa°32_t
;

68 #i‡
__WORDSIZE
 == 64

69 
	töt_Àa°64_t
;

71 
__exãnsi⁄__


72 
	töt_Àa°64_t
;

76 
	tuöt_Àa°8_t
;

77 
	tuöt_Àa°16_t
;

78 
	tuöt_Àa°32_t
;

79 #i‡
__WORDSIZE
 == 64

80 
	tuöt_Àa°64_t
;

82 
__exãnsi⁄__


83 
	tuöt_Àa°64_t
;

90 sig√d 
	töt_Á°8_t
;

91 #i‡
__WORDSIZE
 == 64

92 
	töt_Á°16_t
;

93 
	töt_Á°32_t
;

94 
	töt_Á°64_t
;

96 
	töt_Á°16_t
;

97 
	töt_Á°32_t
;

98 
__exãnsi⁄__


99 
	töt_Á°64_t
;

103 
	tuöt_Á°8_t
;

104 #i‡
__WORDSIZE
 == 64

105 
	tuöt_Á°16_t
;

106 
	tuöt_Á°32_t
;

107 
	tuöt_Á°64_t
;

109 
	tuöt_Á°16_t
;

110 
	tuöt_Á°32_t
;

111 
__exãnsi⁄__


112 
	tuöt_Á°64_t
;

117 #i‡
__WORDSIZE
 == 64

118 #i‚de‡
__öçå_t_deföed


119 
	töçå_t
;

120 
	#__öçå_t_deföed


	)

122 
	tuöçå_t
;

124 #i‚de‡
__öçå_t_deföed


125 
	töçå_t
;

126 
	#__öçå_t_deföed


	)

128 
	tuöçå_t
;

133 #i‡
__WORDSIZE
 == 64

134 
	tötmax_t
;

135 
	tuötmax_t
;

137 
__exãnsi⁄__


138 
	tötmax_t
;

139 
__exãnsi⁄__


140 
	tuötmax_t
;

144 #i‡
__WORDSIZE
 == 64

145 
	#__INT64_C
(
c
Ë¯## 
L


	)

146 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

148 
	#__INT64_C
(
c
Ë¯## 
LL


	)

149 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

155 
	#INT8_MIN
 (-128)

	)

156 
	#INT16_MIN
 (-32767-1)

	)

157 
	#INT32_MIN
 (-2147483647-1)

	)

158 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

160 
	#INT8_MAX
 (127)

	)

161 
	#INT16_MAX
 (32767)

	)

162 
	#INT32_MAX
 (2147483647)

	)

163 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

166 
	#UINT8_MAX
 (255)

	)

167 
	#UINT16_MAX
 (65535)

	)

168 
	#UINT32_MAX
 (4294967295U)

	)

169 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

173 
	#INT_LEAST8_MIN
 (-128)

	)

174 
	#INT_LEAST16_MIN
 (-32767-1)

	)

175 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

176 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

178 
	#INT_LEAST8_MAX
 (127)

	)

179 
	#INT_LEAST16_MAX
 (32767)

	)

180 
	#INT_LEAST32_MAX
 (2147483647)

	)

181 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

184 
	#UINT_LEAST8_MAX
 (255)

	)

185 
	#UINT_LEAST16_MAX
 (65535)

	)

186 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

187 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

191 
	#INT_FAST8_MIN
 (-128)

	)

192 #i‡
__WORDSIZE
 == 64

193 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

194 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

196 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

197 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

199 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

201 
	#INT_FAST8_MAX
 (127)

	)

202 #i‡
__WORDSIZE
 == 64

203 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

204 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

206 
	#INT_FAST16_MAX
 (2147483647)

	)

207 
	#INT_FAST32_MAX
 (2147483647)

	)

209 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

212 
	#UINT_FAST8_MAX
 (255)

	)

213 #i‡
__WORDSIZE
 == 64

214 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

215 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

217 
	#UINT_FAST16_MAX
 (4294967295U)

	)

218 
	#UINT_FAST32_MAX
 (4294967295U)

	)

220 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

224 #i‡
__WORDSIZE
 == 64

225 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

226 
	#INTPTR_MAX
 (9223372036854775807L)

	)

227 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

229 
	#INTPTR_MIN
 (-2147483647-1)

	)

230 
	#INTPTR_MAX
 (2147483647)

	)

231 
	#UINTPTR_MAX
 (4294967295U)

	)

236 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

238 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

241 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

247 #i‡
__WORDSIZE
 == 64

248 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

249 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

251 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

252 
	#PTRDIFF_MAX
 (2147483647)

	)

256 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

257 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

260 #i‡
__WORDSIZE
 == 64

261 
	#SIZE_MAX
 (18446744073709551615UL)

	)

263 
	#SIZE_MAX
 (4294967295U)

	)

267 #i‚de‡
WCHAR_MIN


269 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

270 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

274 
	#WINT_MIN
 (0u)

	)

275 
	#WINT_MAX
 (4294967295u)

	)

278 
	#INT8_C
(
c
Ë
	)
c

279 
	#INT16_C
(
c
Ë
	)
c

280 
	#INT32_C
(
c
Ë
	)
c

281 #i‡
__WORDSIZE
 == 64

282 
	#INT64_C
(
c
Ë¯## 
L


	)

284 
	#INT64_C
(
c
Ë¯## 
LL


	)

288 
	#UINT8_C
(
c
Ë
	)
c

289 
	#UINT16_C
(
c
Ë
	)
c

290 
	#UINT32_C
(
c
Ë¯## 
U


	)

291 #i‡
__WORDSIZE
 == 64

292 
	#UINT64_C
(
c
Ë¯## 
UL


	)

294 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

298 #i‡
__WORDSIZE
 == 64

299 
	#INTMAX_C
(
c
Ë¯## 
L


	)

300 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

302 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

303 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/stdio.h

23 #i‚de‡
_STDIO_H


25 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


26 
	#_STDIO_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	~<bôs/ty≥s.h
>

36 
	#__√ed_FILE


	)

37 
	#__√ed___FILE


	)

41 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


44 
	g_IO_FILE
;

46 
__BEGIN_NAMESPACE_STD


48 
_IO_FILE
 
	tFILE
;

49 
	g__END_NAMESPACE_STD


50 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

51 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

52 || 
deföed
 
__USE_POSIX2


53 
	$__USING_NAMESPACE_STD
(
FILE
)

56 
	#__FILE_deföed
 1

	)

58 #unde‡
__√ed_FILE


61 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


64 
_IO_FILE
 
	t__FILE
;

66 
	#____FILE_deföed
 1

	)

68 #unde‡
__√ed___FILE


71 #ifdef 
_STDIO_H


72 
	#_STDIO_USES_IOSTREAM


	)

74 
	~<libio.h
>

76 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


77 #ifde‡
__GNUC__


78 #i‚de‡
_VA_LIST_DEFINED


79 
_G_va_li°
 
	tva_li°
;

80 
	#_VA_LIST_DEFINED


	)

83 
	~<°d¨g.h
>

87 #ifde‡
__USE_XOPEN2K8


88 #i‚de‡
__off_t_deföed


89 #i‚de‡
__USE_FILE_OFFSET64


90 
__off_t
 
	toff_t
;

92 
__off64_t
 
	toff_t
;

94 
	#__off_t_deföed


	)

96 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


97 
__off64_t
 
	toff64_t
;

98 
	#__off64_t_deföed


	)

101 #i‚de‡
__ssize_t_deföed


102 
__ssize_t
 
	tssize_t
;

103 
	#__ssize_t_deföed


	)

108 
__BEGIN_NAMESPACE_STD


109 #i‚de‡
__USE_FILE_OFFSET64


110 
_G_Âos_t
 
	tÂos_t
;

112 
_G_Âos64_t
 
	tÂos_t
;

114 
__END_NAMESPACE_STD


115 #ifde‡
__USE_LARGEFILE64


116 
_G_Âos64_t
 
	tÂos64_t
;

120 
	#_IOFBF
 0

	)

121 
	#_IOLBF
 1

	)

122 
	#_IONBF
 2

	)

126 #i‚de‡
BUFSIZ


127 
	#BUFSIZ
 
_IO_BUFSIZ


	)

133 #i‚de‡
EOF


134 
	#EOF
 (-1)

	)

140 
	#SEEK_SET
 0

	)

141 
	#SEEK_CUR
 1

	)

142 
	#SEEK_END
 2

	)

143 #ifde‡
__USE_GNU


144 
	#SEEK_DATA
 3

	)

145 
	#SEEK_HOLE
 4

	)

149 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


151 
	#P_tmpdú
 "/tmp"

	)

164 
	~<bôs/°dio_lim.h
>

168 
_IO_FILE
 *
°dö
;

169 
_IO_FILE
 *
°dout
;

170 
_IO_FILE
 *
°dîr
;

172 
	#°dö
 
°dö


	)

173 
	#°dout
 
°dout


	)

174 
	#°dîr
 
°dîr


	)

176 
__BEGIN_NAMESPACE_STD


178 
	$ªmove
 (c⁄° *
__fûíame
Ë
__THROW
;

180 
	$ª«me
 (c⁄° *
__ﬁd
, c⁄° *
__√w
Ë
__THROW
;

181 
__END_NAMESPACE_STD


183 #ifde‡
__USE_ATFILE


185 
	$ª«mót
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

186 c⁄° *
__√w
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


194 #i‚de‡
__USE_FILE_OFFSET64


195 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

197 #ifde‡
__REDIRECT


198 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

200 
	#tmpfûe
 
tmpfûe64


	)

204 #ifde‡
__USE_LARGEFILE64


205 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

209 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

210 
__END_NAMESPACE_STD


212 #ifde‡
__USE_MISC


215 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

219 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


227 *
	$ãm≤am
 (c⁄° *
__dú
, c⁄° *
__pfx
)

228 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

232 
__BEGIN_NAMESPACE_STD


237 
	`f˛o£
 (
FILE
 *
__°ªam
);

242 
	`fÊush
 (
FILE
 *
__°ªam
);

243 
__END_NAMESPACE_STD


245 #ifde‡
__USE_MISC


252 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

255 #ifde‡
__USE_GNU


262 
	`f˛o£Æl
 ();

266 
__BEGIN_NAMESPACE_STD


267 #i‚de‡
__USE_FILE_OFFSET64


272 
FILE
 *
	$f›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

273 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

278 
FILE
 *
	$‰e›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

279 c⁄° *
__ª°ri˘
 
__modes
,

280 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

282 #ifde‡
__REDIRECT


283 
FILE
 *
	`__REDIRECT
 (
f›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

284 c⁄° *
__ª°ri˘
 
__modes
), 
f›í64
)

285 
__wur
;

286 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

287 c⁄° *
__ª°ri˘
 
__modes
,

288 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

289 
__wur
;

291 
	#f›í
 
f›í64


	)

292 
	#‰e›í
 
‰e›í64


	)

295 
__END_NAMESPACE_STD


296 #ifde‡
__USE_LARGEFILE64


297 
FILE
 *
	$f›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

298 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

299 
FILE
 *
	$‰e›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

300 c⁄° *
__ª°ri˘
 
__modes
,

301 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

304 #ifdef 
__USE_POSIX


306 
FILE
 *
	$fd›í
 (
__fd
, c⁄° *
__modes
Ë
__THROW
 
__wur
;

309 #ifdef 
__USE_GNU


312 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

313 c⁄° *
__ª°ri˘
 
__modes
,

314 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

317 #ifde‡
__USE_XOPEN2K8


319 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, c⁄° *
__modes
)

320 
__THROW
 
__wur
;

325 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

329 
__BEGIN_NAMESPACE_STD


332 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

336 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

337 
__modes
, 
size_t
 
__n
Ë
__THROW
;

338 
__END_NAMESPACE_STD


340 #ifdef 
__USE_BSD


343 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

344 
size_t
 
__size
Ë
__THROW
;

347 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

351 
__BEGIN_NAMESPACE_STD


356 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

357 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

362 
	`¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

364 
	$•rötf
 (*
__ª°ri˘
 
__s
,

365 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

371 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

372 
_G_va_li°
 
__¨g
);

377 
	`v¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

379 
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

380 
_G_va_li°
 
__¨g
Ë
__THROWNL
;

381 
__END_NAMESPACE_STD


383 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


384 
__BEGIN_NAMESPACE_C99


386 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

387 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

388 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

390 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

391 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

392 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

393 
__END_NAMESPACE_C99


396 #ifde‡
__USE_GNU


399 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__f
,

400 
_G_va_li°
 
__¨g
)

401 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

402 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

403 c⁄° *
__ª°ri˘
 
__fmt
, ...)

404 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

405 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

406 c⁄° *
__ª°ri˘
 
__fmt
, ...)

407 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

410 #ifde‡
__USE_XOPEN2K8


412 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
,

413 
_G_va_li°
 
__¨g
)

414 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

415 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

416 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

420 
__BEGIN_NAMESPACE_STD


425 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

426 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

431 
	$sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

433 
	$ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

434 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

436 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

437 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

438 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

439 #ifde‡
__REDIRECT


443 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

444 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

445 
__isoc99_fsˇnf
Ë
__wur
;

446 
	`__REDIRECT
 (
sˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

447 
__isoc99_sˇnf
Ë
__wur
;

448 
	`__REDIRECT_NTH
 (
ssˇnf
, (c⁄° *
__ª°ri˘
 
__s
,

449 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

450 
__isoc99_ssˇnf
);

452 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

453 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

454 
	$__isoc99_sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

455 
	$__isoc99_ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

456 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

457 
	#fsˇnf
 
__isoc99_fsˇnf


	)

458 
	#sˇnf
 
__isoc99_sˇnf


	)

459 
	#ssˇnf
 
__isoc99_ssˇnf


	)

463 
__END_NAMESPACE_STD


465 #ifdef 
__USE_ISOC99


466 
__BEGIN_NAMESPACE_C99


471 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

472 
_G_va_li°
 
__¨g
)

473 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

479 
	$vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

480 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

483 
	$vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

484 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

485 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

487 #i‡!
deföed
 
__USE_GNU
 \

488 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

489 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

490 #ifde‡
__REDIRECT


494 
	`__REDIRECT
 (
vfsˇnf
,

495 (
FILE
 *
__ª°ri˘
 
__s
,

496 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

497 
__isoc99_vfsˇnf
)

498 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

499 
	`__REDIRECT
 (
vsˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
,

500 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

501 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

502 
	`__REDIRECT_NTH
 (
vssˇnf
,

503 (c⁄° *
__ª°ri˘
 
__s
,

504 c⁄° *
__ª°ri˘
 
__f‹m©
,

505 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

506 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

508 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

509 c⁄° *
__ª°ri˘
 
__f‹m©
,

510 
_G_va_li°
 
__¨g
Ë
__wur
;

511 
	$__isoc99_vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
,

512 
_G_va_li°
 
__¨g
Ë
__wur
;

513 
	$__isoc99_vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

514 c⁄° *
__ª°ri˘
 
__f‹m©
,

515 
_G_va_li°
 
__¨g
Ë
__THROW
;

516 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

517 
	#vsˇnf
 
__isoc99_vsˇnf


	)

518 
	#vssˇnf
 
__isoc99_vssˇnf


	)

522 
__END_NAMESPACE_C99


526 
__BEGIN_NAMESPACE_STD


531 
	`fgëc
 (
FILE
 *
__°ªam
);

532 
	`gëc
 (
FILE
 *
__°ªam
);

538 
	`gëch¨
 ();

539 
__END_NAMESPACE_STD


543 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

545 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


550 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

551 
	`gëch¨_u∆ocked
 ();

554 #ifde‡
__USE_MISC


561 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

565 
__BEGIN_NAMESPACE_STD


573 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

574 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

580 
	`putch¨
 (
__c
);

581 
__END_NAMESPACE_STD


585 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

587 #ifde‡
__USE_MISC


594 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

597 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


602 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

603 
	`putch¨_u∆ocked
 (
__c
);

607 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

608 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

610 
	`gëw
 (
FILE
 *
__°ªam
);

613 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

617 
__BEGIN_NAMESPACE_STD


622 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

623 
__wur
;

625 #i‡!
deföed
 
__USE_ISOC11
 \

626 || (
deföed
 
__˝lu•lus
 && __cplusplus <= 201103L)

638 *
	$gës
 (*
__s
Ë
__wur
 
__©åibuã_dïªˇãd__
;

640 
__END_NAMESPACE_STD


642 #ifde‡
__USE_GNU


649 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

650 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

654 #ifdef 
__USE_XOPEN2K8


665 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

666 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

667 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

668 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

669 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

670 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

678 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

679 
size_t
 *
__ª°ri˘
 
__n
,

680 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

684 
__BEGIN_NAMESPACE_STD


689 
	`Âuts
 (c⁄° *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

695 
	`puts
 (c⁄° *
__s
);

702 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

709 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

710 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

715 
size_t
 
	`fwrôe
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

716 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

717 
__END_NAMESPACE_STD


719 #ifde‡
__USE_GNU


726 
	`Âuts_u∆ocked
 (c⁄° *
__ª°ri˘
 
__s
,

727 
FILE
 *
__ª°ri˘
 
__°ªam
);

730 #ifde‡
__USE_MISC


737 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

738 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

739 
size_t
 
	`fwrôe_u∆ocked
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

740 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

744 
__BEGIN_NAMESPACE_STD


749 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

754 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

759 
	`ªwöd
 (
FILE
 *
__°ªam
);

760 
__END_NAMESPACE_STD


767 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


768 #i‚de‡
__USE_FILE_OFFSET64


773 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

778 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

780 #ifde‡
__REDIRECT


781 
	`__REDIRECT
 (
f£eko
,

782 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

783 
f£eko64
);

784 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

786 
	#f£eko
 
f£eko64


	)

787 
	#·ñlo
 
·ñlo64


	)

792 
__BEGIN_NAMESPACE_STD


793 #i‚de‡
__USE_FILE_OFFSET64


798 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

803 
	`f£ços
 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
);

805 #ifde‡
__REDIRECT


806 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

807 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

808 
	`__REDIRECT
 (
f£ços
,

809 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
), 
f£ços64
);

811 
	#fgëpos
 
fgëpos64


	)

812 
	#f£ços
 
f£ços64


	)

815 
__END_NAMESPACE_STD


817 #ifde‡
__USE_LARGEFILE64


818 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

819 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

820 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

821 
	`f£ços64
 (
FILE
 *
__°ªam
, c⁄° 
Âos64_t
 *
__pos
);

824 
__BEGIN_NAMESPACE_STD


826 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

828 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

830 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

831 
__END_NAMESPACE_STD


833 #ifde‡
__USE_MISC


835 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

836 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

837 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

841 
__BEGIN_NAMESPACE_STD


846 
	`≥º‹
 (c⁄° *
__s
);

847 
__END_NAMESPACE_STD


853 
	~<bôs/sys_îæi°.h
>

856 #ifdef 
__USE_POSIX


858 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

861 #ifde‡
__USE_MISC


863 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

867 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

868 
deföed
 
__USE_MISC
)

873 
FILE
 *
	$p›í
 (c⁄° *
__comm™d
, c⁄° *
__modes
Ë
__wur
;

879 
	`p˛o£
 (
FILE
 *
__°ªam
);

883 #ifdef 
__USE_POSIX


885 *
	$˘îmid
 (*
__s
Ë
__THROW
;

889 #ifde‡
__USE_XOPEN


891 *
	`cu£rid
 (*
__s
);

895 #ifdef 
__USE_GNU


896 
ob°ack
;

899 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

900 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

901 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

902 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

903 c⁄° *
__ª°ri˘
 
__f‹m©
,

904 
_G_va_li°
 
__¨gs
)

905 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

909 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


913 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

917 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

920 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

923 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


927 
	#__√ed_gë›t


	)

928 
	~<gë›t.h
>

933 #ifde‡
__USE_EXTERN_INLINES


934 
	~<bôs/°dio.h
>

936 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


937 
	~<bôs/°dio2.h
>

939 #ifde‡
__LDBL_COMPAT


940 
	~<bôs/°dio-ldbl.h
>

943 
__END_DECLS


	@/usr/include/stdlib.h

22 #i‚def 
_STDLIB_H


24 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


29 
	#__√ed_wch¨_t


	)

30 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

34 
	g__BEGIN_DECLS


36 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


37 
	#_STDLIB_H
 1

	)

39 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


41 
	~<bôs/waôÊags.h
>

42 
	~<bôs/waô°©us.h
>

44 #ifde‡
__USE_BSD


49 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


50 
	#__WAIT_INT
(
°©us
) \

51 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

52 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

54 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

62 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


63 
	#__WAIT_STATUS
 *

	)

64 
	#__WAIT_STATUS_DEFN
 *

	)

69 
waô
 *
	m__u±r
;

70 *
	m__ùå
;

71 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

72 
	#__WAIT_STATUS_DEFN
 *

	)

77 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

78 
	#__WAIT_STATUS
 *

	)

79 
	#__WAIT_STATUS_DEFN
 *

	)

84 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

85 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

90 #ifde‡
__WIFCONTINUED


91 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

95 
__BEGIN_NAMESPACE_STD


99 
	mquŸ
;

100 
	mªm
;

101 } 
	tdiv_t
;

104 #i‚de‡
__ldiv_t_deföed


107 
	mquŸ
;

108 
	mªm
;

109 } 
	tldiv_t
;

110 
	#__ldiv_t_deföed
 1

	)

112 
	g__END_NAMESPACE_STD


114 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


115 
__BEGIN_NAMESPACE_C99


117 
__exãnsi⁄__
 struct

119 
	mquŸ
;

120 
	mªm
;

121 } 
	tŒdiv_t
;

122 
	#__Œdiv_t_deföed
 1

	)

123 
	g__END_NAMESPACE_C99


128 
	#RAND_MAX
 2147483647

	)

133 
	#EXIT_FAILURE
 1

	)

134 
	#EXIT_SUCCESS
 0

	)

138 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

139 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

142 
__BEGIN_NAMESPACE_STD


144 
	$©of
 (c⁄° *
__≈å
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

147 
	$©oi
 (c⁄° *
__≈å
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

150 
	$©ﬁ
 (c⁄° *
__≈å
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

152 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_MISC


155 
__BEGIN_NAMESPACE_C99


157 
__exãnsi⁄__
 
	$©ﬁl
 (c⁄° *
__≈å
)

158 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

159 
__END_NAMESPACE_C99


162 
__BEGIN_NAMESPACE_STD


164 
	$°πod
 (c⁄° *
__ª°ri˘
 
__≈å
,

165 **
__ª°ri˘
 
__íd±r
)

166 
__THROW
 
	`__n⁄nuŒ
 ((1));

167 
__END_NAMESPACE_STD


169 #ifdef 
__USE_ISOC99


170 
__BEGIN_NAMESPACE_C99


172 
	$°πof
 (c⁄° *
__ª°ri˘
 
__≈å
,

173 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

175 
	$°πﬁd
 (c⁄° *
__ª°ri˘
 
__≈å
,

176 **
__ª°ri˘
 
__íd±r
)

177 
__THROW
 
	`__n⁄nuŒ
 ((1));

178 
__END_NAMESPACE_C99


181 
__BEGIN_NAMESPACE_STD


183 
	$°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

184 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

185 
__THROW
 
	`__n⁄nuŒ
 ((1));

187 
	$°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

188 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

189 
__THROW
 
	`__n⁄nuŒ
 ((1));

190 
__END_NAMESPACE_STD


192 #ifde‡
__USE_BSD


194 
__exãnsi⁄__


195 
	$°πoq
 (c⁄° *
__ª°ri˘
 
__≈å
,

196 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

197 
__THROW
 
	`__n⁄nuŒ
 ((1));

199 
__exãnsi⁄__


200 
	$°πouq
 (c⁄° *
__ª°ri˘
 
__≈å
,

201 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

202 
__THROW
 
	`__n⁄nuŒ
 ((1));

205 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_MISC


206 
__BEGIN_NAMESPACE_C99


208 
__exãnsi⁄__


209 
	$°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

210 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

211 
__THROW
 
	`__n⁄nuŒ
 ((1));

213 
__exãnsi⁄__


214 
	$°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

215 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1));

217 
__END_NAMESPACE_C99


221 #ifde‡
__USE_GNU


235 
	~<xloˇÀ.h
>

239 
	$°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

240 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

241 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

243 
	$°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

244 **
__ª°ri˘
 
__íd±r
,

245 
__ba£
, 
__loˇÀ_t
 
__loc
)

246 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

248 
__exãnsi⁄__


249 
	$°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

250 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

251 
__loˇÀ_t
 
__loc
)

252 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

254 
__exãnsi⁄__


255 
	$°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

256 **
__ª°ri˘
 
__íd±r
,

257 
__ba£
, 
__loˇÀ_t
 
__loc
)

258 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

260 
	$°πod_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

261 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

262 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

264 
	$°πof_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

265 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

266 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

268 
	$°πﬁd_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

269 **
__ª°ri˘
 
__íd±r
,

270 
__loˇÀ_t
 
__loc
)

271 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

275 #ifde‡
__USE_EXTERN_INLINES


276 
__BEGIN_NAMESPACE_STD


277 
__exã∫_ölöe
 

278 
	`__NTH
 (
	$©oi
 (c⁄° *
__≈å
))

280  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

281 
	}
}

282 
__exã∫_ölöe
 

283 
__NTH
 (
	$©ﬁ
 (c⁄° *
__≈å
))

285  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

286 
	}
}

287 
	g__END_NAMESPACE_STD


289 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


290 
__BEGIN_NAMESPACE_C99


291 
__exãnsi⁄__
 
__exã∫_ölöe
 

292 
__NTH
 (
	$©ﬁl
 (c⁄° *
__≈å
))

294  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

295 
	}
}

296 
	g__END_NAMESPACE_C99


301 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


305 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

308 
	$a64l
 (c⁄° *
__s
)

309 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

313 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


314 
	~<sys/ty≥s.h
>

321 
	$øndom
 (Ë
__THROW
;

324 
	$§™dom
 (
__£ed
Ë
__THROW
;

330 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

331 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

335 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

338 #ifde‡
__USE_MISC


343 
	søndom_d©a


345 
öt32_t
 *
Âå
;

346 
öt32_t
 *
Ωå
;

347 
öt32_t
 *
°©e
;

348 
ønd_ty≥
;

349 
ønd_deg
;

350 
ønd_£p
;

351 
öt32_t
 *
íd_±r
;

354 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

355 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

357 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

358 
__THROW
 
	`__n⁄nuŒ
 ((2));

360 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

361 
size_t
 
__°©ñí
,

362 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

363 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

365 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

366 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

367 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

372 
__BEGIN_NAMESPACE_STD


374 
	$ønd
 (Ë
__THROW
;

376 
	$§™d
 (
__£ed
Ë
__THROW
;

377 
__END_NAMESPACE_STD


379 #ifde‡
__USE_POSIX


381 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

385 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


389 
	$dønd48
 (Ë
__THROW
;

390 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

393 
	$Ã™d48
 (Ë
__THROW
;

394 
	$ƒ™d48
 (
__xsubi
[3])

395 
__THROW
 
	`__n⁄nuŒ
 ((1));

398 
	$mønd48
 (Ë
__THROW
;

399 
	$jønd48
 (
__xsubi
[3])

400 
__THROW
 
	`__n⁄nuŒ
 ((1));

403 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

404 *
	$£ed48
 (
__£ed16v
[3])

405 
__THROW
 
	`__n⁄nuŒ
 ((1));

406 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

408 #ifde‡
__USE_MISC


412 
	sdønd48_d©a


414 
__x
[3];

415 
__ﬁd_x
[3];

416 
__c
;

417 
__öô
;

418 
__exãnsi⁄__
 
__a
;

423 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

424 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

425 
	$î™d48_r
 (
__xsubi
[3],

426 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

427 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

431 *
__ª°ri˘
 
__ªsu…
)

432 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

433 
	$ƒ™d48_r
 (
__xsubi
[3],

434 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

435 *
__ª°ri˘
 
__ªsu…
)

436 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

439 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

442 
	$jønd48_r
 (
__xsubi
[3],

443 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

444 *
__ª°ri˘
 
__ªsu…
)

445 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

448 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

449 
__THROW
 
	`__n⁄nuŒ
 ((2));

451 
	$£ed48_r
 (
__£ed16v
[3],

452 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

454 
	$lc⁄g48_r
 (
__∑øm
[7],

455 
dønd48_d©a
 *
__buf„r
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

462 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


463 
	#__mÆloc_™d_ˇŒoc_deföed


	)

464 
__BEGIN_NAMESPACE_STD


466 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

468 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

469 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

470 
__END_NAMESPACE_STD


473 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


474 
__BEGIN_NAMESPACE_STD


480 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

481 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

483 
	$‰ì
 (*
__±r
Ë
__THROW
;

484 
__END_NAMESPACE_STD


486 #ifdef 
__USE_MISC


488 
	$c‰ì
 (*
__±r
Ë
__THROW
;

491 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


492 
	~<Æloˇ.h
>

495 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

496 || 
deföed
 
__USE_BSD


498 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

501 #ifde‡
__USE_XOPEN2K


503 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

504 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

507 #ifde‡
__USE_ISOC11


509 *
	$Æig√d_Æloc
 (
size_t
 
__Æignmít
, size_à
__size
)

510 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_size__
 ((2)Ë
__wur
;

513 
__BEGIN_NAMESPACE_STD


515 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

519 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

521 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


523 #ifde‡
__˝lu•lus


524 "C++" 
	`©_quick_exô
 ((*
__func
) ())

525 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

527 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

530 
__END_NAMESPACE_STD


532 #ifdef 
__USE_MISC


535 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

536 
__THROW
 
	`__n⁄nuŒ
 ((1));

539 
__BEGIN_NAMESPACE_STD


543 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

545 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


549 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

551 
__END_NAMESPACE_STD


553 #ifde‡
__USE_ISOC99


554 
__BEGIN_NAMESPACE_C99


557 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

558 
__END_NAMESPACE_C99


562 
__BEGIN_NAMESPACE_STD


564 *
	$gëív
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

565 
__END_NAMESPACE_STD


567 #ifde‡
__USE_GNU


570 *
	$£cuª_gëív
 (c⁄° *
__«me
)

571 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

574 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


578 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

581 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


584 
	$£ãnv
 (c⁄° *
__«me
, c⁄° *
__vÆue
, 
__ª∂a˚
)

585 
__THROW
 
	`__n⁄nuŒ
 ((2));

588 
	$un£ãnv
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 #ifdef 
__USE_MISC


595 
	$˛óªnv
 (Ë
__THROW
;

599 #i‡
deföed
 
__USE_MISC
 \

600 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
)

606 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

609 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 \

610 || 
deföed
 
__USE_XOPEN2K8


619 #i‚de‡
__USE_FILE_OFFSET64


620 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

622 #ifde‡
__REDIRECT


623 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

624 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

626 
	#mk°emp
 
mk°emp64


	)

629 #ifde‡
__USE_LARGEFILE64


630 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

634 #ifde‡
__USE_MISC


641 #i‚de‡
__USE_FILE_OFFSET64


642 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

644 #ifde‡
__REDIRECT


645 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

646 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

648 
	#mk°emps
 
mk°emps64


	)

651 #ifde‡
__USE_LARGEFILE64


652 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

653 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

657 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K8


663 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

666 #ifde‡
__USE_GNU


673 #i‚de‡
__USE_FILE_OFFSET64


674 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

676 #ifde‡
__REDIRECT


677 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

678 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

680 
	#mko°emp
 
mko°emp64


	)

683 #ifde‡
__USE_LARGEFILE64


684 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

693 #i‚de‡
__USE_FILE_OFFSET64


694 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

695 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

697 #ifde‡
__REDIRECT


698 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

699 
__Êags
), 
mko°emps64
)

700 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

702 
	#mko°emps
 
mko°emps64


	)

705 #ifde‡
__USE_LARGEFILE64


706 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

707 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

712 
__BEGIN_NAMESPACE_STD


717 
	$sy°em
 (c⁄° *
__comm™d
Ë
__wur
;

718 
__END_NAMESPACE_STD


721 #ifdef 
__USE_GNU


724 *
	$ˇn⁄iˇlize_fûe_«me
 (c⁄° *
__«me
)

725 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

728 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


734 *
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
,

735 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

740 #i‚de‡
__COMPAR_FN_T


741 
	#__COMPAR_FN_T


	)

742 (*
	t__com∑r_‚_t
) (const *, const *);

744 #ifdef 
__USE_GNU


745 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

748 #ifde‡
__USE_GNU


749 (*
	t__com∑r_d_‚_t
) (const *, const *, *);

752 
__BEGIN_NAMESPACE_STD


755 *
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
,

756 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

757 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

759 #ifde‡
__USE_EXTERN_INLINES


760 
	~<bôs/°dlib-b£¨ch.h
>

765 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

766 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

767 #ifde‡
__USE_GNU


768 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

769 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

770 
	`__n⁄nuŒ
 ((1, 4));

775 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

776 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

777 
__END_NAMESPACE_STD


779 #ifde‡
__USE_ISOC99


780 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

781 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

785 
__BEGIN_NAMESPACE_STD


789 
div_t
 
	$div
 (
__numî
, 
__díom
)

790 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

791 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

792 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

793 
__END_NAMESPACE_STD


795 #ifde‡
__USE_ISOC99


796 
__BEGIN_NAMESPACE_C99


797 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

798 
__díom
)

799 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

800 
__END_NAMESPACE_C99


804 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

805 || 
deföed
 
__USE_SVID


812 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

813 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

818 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

819 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

824 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

825 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

828 #ifde‡
__USE_MISC


830 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

831 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

832 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

833 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

834 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

835 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

836 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

837 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

842 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

843 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

844 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

845 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

846 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

847 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

849 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

850 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

851 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

852 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

853 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

854 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

855 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

856 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

860 
__BEGIN_NAMESPACE_STD


863 
	$mbÀn
 (c⁄° *
__s
, 
size_t
 
__n
Ë
__THROW
;

866 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

867 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

870 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
;

874 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

875 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

877 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

878 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

879 
__THROW
;

880 
__END_NAMESPACE_STD


883 #ifde‡
__USE_SVID


888 
	$Ωm©ch
 (c⁄° *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

892 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


899 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

900 *c⁄° *
__ª°ri˘
 
__tokís
,

901 **
__ª°ri˘
 
__vÆuï
)

902 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

906 #ifde‡
__USE_XOPEN


908 
	$£tkey
 (c⁄° *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

914 #ifde‡
__USE_XOPEN2KXSI


916 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

919 #ifde‡
__USE_XOPEN


924 
	$gø¡±
 (
__fd
Ë
__THROW
;

928 
	$u∆ock±
 (
__fd
Ë
__THROW
;

933 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

936 #ifde‡
__USE_GNU


940 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

941 
__THROW
 
	`__n⁄nuŒ
 ((2));

944 
	`gë±
 ();

947 #ifde‡
__USE_BSD


951 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

952 
__THROW
 
	`__n⁄nuŒ
 ((1));

955 
	~<bôs/°dlib-Êﬂt.h
>

958 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


959 
	~<bôs/°dlib.h
>

961 #ifde‡
__LDBL_COMPAT


962 
	~<bôs/°dlib-ldbl.h
>

966 #unde‡
__√ed_mÆloc_™d_ˇŒoc


968 
__END_DECLS


	@/usr/include/string.h

22 #i‚def 
_STRING_H


23 
	#_STRING_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


30 
	#__√ed_size_t


	)

31 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

39 #i‡
deföed
 
__˝lu•lus
 && (__˝lu•lu†>199711L || 
__GNUC_PREREQ
 (4, 4))

40 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

44 
__BEGIN_NAMESPACE_STD


46 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

47 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

50 *
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

51 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

52 
__END_NAMESPACE_STD


57 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


58 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

59 
__c
, 
size_t
 
__n
)

60 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

64 
__BEGIN_NAMESPACE_STD


66 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

69 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

70 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

73 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


76 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

77 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

78 c⁄° *
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

79 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

81 #ifde‡
__OPTIMIZE__


82 
__exã∫_Æways_ölöe
 *

83 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


85  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

88 
__exã∫_Æways_ölöe
 const *

89 
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


91  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

94 
	}
}

96 *
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

97 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

99 
__END_NAMESPACE_STD


101 #ifde‡
__USE_GNU


104 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


105 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

106 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

107 "C++" c⁄° *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

108 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

110 *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

111 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

115 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


116 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

117 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

118 "C++" c⁄° *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

119 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

121 *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

122 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

127 
__BEGIN_NAMESPACE_STD


129 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

130 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

132 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

133 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

134 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

137 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

138 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

140 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

141 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

144 
	$°rcmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

147 
	$°∫cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

151 
	$°rcﬁl
 (c⁄° *
__s1
, c⁄° *
__s2
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

154 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

155 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

156 
__THROW
 
	`__n⁄nuŒ
 ((2));

157 
__END_NAMESPACE_STD


159 #ifde‡
__USE_XOPEN2K8


163 
	~<xloˇÀ.h
>

166 
	$°rcﬁl_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

167 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

169 
size_t
 
	$°rx‰m_l
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

170 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

173 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 \

174 || 
deföed
 
__USE_XOPEN2K8


176 *
	$°rdup
 (c⁄° *
__s
)

177 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

183 #i‡
deföed
 
__USE_XOPEN2K8


184 *
	$°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

185 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

188 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


190 
	#°rdu∑
(
s
) \

191 (
__exãnsi⁄__
 \

193 c⁄° *
__ﬁd
 = (
s
); \

194 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

195 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

196 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

197 
	}
}))

	)

200 
	#°∫du∑
(
s
, 
n
) \

201 (
__exãnsi⁄__
 \

203 c⁄° *
__ﬁd
 = (
s
); \

204 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

205 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

206 
__√w
[
__Àn
] = '\0'; \

207 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

208 }))

	)

211 
	g__BEGIN_NAMESPACE_STD


213 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


216 *
°rchr
 (*
__s
, 
__c
)

217 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

218 c⁄° *
°rchr
 (c⁄° *
__s
, 
__c
)

219 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

221 #ifde‡
__OPTIMIZE__


222 
__exã∫_Æways_ölöe
 *

223 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


225  
__buûtö_°rchr
 (
__s
, 
__c
);

228 
__exã∫_Æways_ölöe
 const *

229 
°rchr
 (c⁄° *
__s
, 
__c
Ë
	g__THROW


231  
__buûtö_°rchr
 (
__s
, 
__c
);

236 *
	$°rchr
 (c⁄° *
__s
, 
__c
)

237 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

240 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


243 *
	`°ºchr
 (*
__s
, 
__c
)

244 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

245 c⁄° *
	`°ºchr
 (c⁄° *
__s
, 
__c
)

246 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

248 #ifde‡
__OPTIMIZE__


249 
__exã∫_Æways_ölöe
 *

250 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


252  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

255 
__exã∫_Æways_ölöe
 const *

256 
	`°ºchr
 (c⁄° *
__s
, 
__c
Ë
__THROW


258  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

261 
	}
}

263 *
	$°ºchr
 (c⁄° *
__s
, 
__c
)

264 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

266 
__END_NAMESPACE_STD


268 #ifde‡
__USE_GNU


271 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


272 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

273 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

274 "C++" c⁄° *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

275 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

277 *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

278 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

282 
__BEGIN_NAMESPACE_STD


285 
size_t
 
	$°rc•n
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

286 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

289 
size_t
 
	$°r•n
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

290 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

292 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


295 *
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
)

296 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

297 c⁄° *
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

298 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

300 #ifde‡
__OPTIMIZE__


301 
__exã∫_Æways_ölöe
 *

302 
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
Ë
__THROW


304  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

307 
__exã∫_Æways_ölöe
 const *

308 
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
Ë
__THROW


310  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

313 
	}
}

315 *
	$°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

316 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

319 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


322 *
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

323 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

324 c⁄° *
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

325 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

327 #ifde‡
__OPTIMIZE__


328 
__exã∫_Æways_ölöe
 *

329 
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


331  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

334 
__exã∫_Æways_ölöe
 const *

335 
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


337  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

340 
	}
}

342 *
	$°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

343 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

348 *
	$°πok
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
)

349 
__THROW
 
	`__n⁄nuŒ
 ((2));

350 
__END_NAMESPACE_STD


354 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

355 c⁄° *
__ª°ri˘
 
__dñim
,

356 **
__ª°ri˘
 
__ßve_±r
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

358 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


359 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
,

360 **
__ª°ri˘
 
__ßve_±r
)

361 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

364 #ifde‡
__USE_GNU


366 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


367 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

368 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

369 "C++" c⁄° *
	$°rˇ£°r
 (c⁄° *
__hay°ack
,

370 c⁄° *
__√edÀ
)

371 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 *
	$°rˇ£°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

374 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

378 #ifde‡
__USE_GNU


382 *
	$memmem
 (c⁄° *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

383 c⁄° *
__√edÀ
, 
size_t
 
__√edÀÀn
)

384 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

388 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

389 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

391 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

392 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

393 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

397 
__BEGIN_NAMESPACE_STD


399 
size_t
 
	$°æí
 (c⁄° *
__s
)

400 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

401 
__END_NAMESPACE_STD


403 #ifdef 
__USE_XOPEN2K8


406 
size_t
 
	$°∫Àn
 (c⁄° *
__°rög
, 
size_t
 
__maxÀn
)

407 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

411 
__BEGIN_NAMESPACE_STD


413 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

414 
__END_NAMESPACE_STD


415 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


423 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


426 #ifde‡
__REDIRECT_NTH


427 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

428 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

429 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

431 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

433 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

438 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

439 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

443 #ifde‡
__USE_XOPEN2K8


445 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

451 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

453 #ifde‡
__USE_BSD


455 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

462 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

463 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

466 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


469 *
	`ödex
 (*
__s
, 
__c
)

470 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

471 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

472 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

474 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


475 
__exã∫_Æways_ölöe
 *

476 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


478  
	`__buûtö_ödex
 (
__s
, 
__c
);

481 
__exã∫_Æways_ölöe
 const *

482 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


484  
	`__buûtö_ödex
 (
__s
, 
__c
);

487 
	}
}

489 *
	$ödex
 (c⁄° *
__s
, 
__c
)

490 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


497 *
	`rödex
 (*
__s
, 
__c
)

498 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

499 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

500 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

502 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


503 
__exã∫_Æways_ölöe
 *

504 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


506  
	`__buûtö_rödex
 (
__s
, 
__c
);

509 
__exã∫_Æways_ölöe
 const *

510 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


512  
	`__buûtö_rödex
 (
__s
, 
__c
);

515 
	}
}

517 *
	$rödex
 (c⁄° *
__s
, 
__c
)

518 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

523 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

527 #ifdef 
__USE_GNU


528 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

530 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

534 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

535 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

538 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

539 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

542 #ifdef 
__USE_GNU


545 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

546 
__loˇÀ_t
 
__loc
)

547 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

549 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

550 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

551 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

554 #ifdef 
__USE_BSD


557 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

558 c⁄° *
__ª°ri˘
 
__dñim
)

559 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

562 #ifdef 
__USE_XOPEN2K8


564 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

567 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

568 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

569 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

574 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

575 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

576 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

577 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

578 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

579 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

582 #ifdef 
__USE_GNU


584 
	$°rvîscmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

585 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

588 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

593 #i‚de‡
ba£«me


598 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


599 "C++" *
	$ba£«me
 (*
__fûíame
)

600 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

601 "C++" c⁄° *
	$ba£«me
 (c⁄° *
__fûíame
)

602 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

604 *
	$ba£«me
 (c⁄° *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

610 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

611 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

612 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


632 
	~<bôs/°rög.h
>

635 
	~<bôs/°rög2.h
>

638 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


640 
	~<bôs/°rög3.h
>

644 
__END_DECLS


	@/usr/include/alloca.h

18 #i‚def 
_ALLOCA_H


19 
	#_ALLOCA_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

26 
	g__BEGIN_DECLS


29 #unde‡
Æloˇ


32 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

34 #ifdef 
__GNUC__


35 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

38 
__END_DECLS


	@/usr/include/bits/stdio-ldbl.h

19 #i‚de‡
_STDIO_H


23 
__BEGIN_NAMESPACE_STD


24 
	$__LDBL_REDIR_DECL
 (
Ârötf
)

25 
	$__LDBL_REDIR_DECL
 (
¥ötf
)

26 
	$__LDBL_REDIR_DECL
 (
•rötf
)

27 
	$__LDBL_REDIR_DECL
 (
vÂrötf
)

28 
	$__LDBL_REDIR_DECL
 (
v¥ötf
)

29 
	$__LDBL_REDIR_DECL
 (
v•rötf
)

30 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

31 && !
deföed
 
__REDIRECT
 \

32 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

33 
	$__LDBL_REDIR1_DECL
 (
fsˇnf
, 
__∆dbl___isoc99_fsˇnf
)

34 
	$__LDBL_REDIR1_DECL
 (
sˇnf
, 
__∆dbl___isoc99_sˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
ssˇnf
, 
__∆dbl___isoc99_ssˇnf
)

37 
	$__LDBL_REDIR_DECL
 (
fsˇnf
)

38 
	$__LDBL_REDIR_DECL
 (
sˇnf
)

39 
	$__LDBL_REDIR_DECL
 (
ssˇnf
)

41 
__END_NAMESPACE_STD


43 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


44 
__BEGIN_NAMESPACE_C99


45 
	$__LDBL_REDIR_DECL
 (
¢¥ötf
)

46 
	$__LDBL_REDIR_DECL
 (
v¢¥ötf
)

47 
__END_NAMESPACE_C99


50 #ifdef 
__USE_ISOC99


51 
__BEGIN_NAMESPACE_C99


52 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

53 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

54 
	$__LDBL_REDIR1_DECL
 (
vfsˇnf
, 
__∆dbl___isoc99_vfsˇnf
)

55 
	$__LDBL_REDIR1_DECL
 (
vsˇnf
, 
__∆dbl___isoc99_vsˇnf
)

56 
	$__LDBL_REDIR1_DECL
 (
vssˇnf
, 
__∆dbl___isoc99_vssˇnf
)

58 
	$__LDBL_REDIR_DECL
 (
vfsˇnf
)

59 
	$__LDBL_REDIR_DECL
 (
vssˇnf
)

60 
	$__LDBL_REDIR_DECL
 (
vsˇnf
)

62 
__END_NAMESPACE_C99


65 #ifde‡
__USE_XOPEN2K8


66 
	$__LDBL_REDIR_DECL
 (
vd¥ötf
)

67 
	$__LDBL_REDIR_DECL
 (
d¥ötf
)

70 #ifde‡
__USE_GNU


71 
	$__LDBL_REDIR_DECL
 (
va•rötf
)

72 
	$__LDBL_REDIR_DECL
 (
__a•rötf
)

73 
	$__LDBL_REDIR_DECL
 (
a•rötf
)

74 
	$__LDBL_REDIR_DECL
 (
ob°ack_¥ötf
)

75 
	$__LDBL_REDIR_DECL
 (
ob°ack_v¥ötf
)

78 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


79 
	$__LDBL_REDIR_DECL
 (
__•rötf_chk
)

80 
	$__LDBL_REDIR_DECL
 (
__v•rötf_chk
)

81 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


82 
	$__LDBL_REDIR_DECL
 (
__¢¥ötf_chk
)

83 
	$__LDBL_REDIR_DECL
 (
__v¢¥ötf_chk
)

85 #i‡
__USE_FORTIFY_LEVEL
 > 1

86 
	$__LDBL_REDIR_DECL
 (
__Ârötf_chk
)

87 
	$__LDBL_REDIR_DECL
 (
__¥ötf_chk
)

88 
	$__LDBL_REDIR_DECL
 (
__vÂrötf_chk
)

89 
	$__LDBL_REDIR_DECL
 (
__v¥ötf_chk
)

90 #ifde‡
__USE_XOPEN2K8


91 
	$__LDBL_REDIR_DECL
 (
__d¥ötf_chk
)

92 
	$__LDBL_REDIR_DECL
 (
__vd¥ötf_chk
)

94 #ifde‡
__USE_GNU


95 
	$__LDBL_REDIR_DECL
 (
__a•rötf_chk
)

96 
	$__LDBL_REDIR_DECL
 (
__va•rötf_chk
)

97 
	$__LDBL_REDIR_DECL
 (
__ob°ack_¥ötf_chk
)

98 
	$__LDBL_REDIR_DECL
 (
__ob°ack_v¥ötf_chk
)

	@/usr/include/bits/stdio.h

19 #i‚de‡
_STDIO_H


23 #i‚de‡
__exã∫_ölöe


24 
	#__STDIO_INLINE
 
ölöe


	)

26 
	#__STDIO_INLINE
 
__exã∫_ölöe


	)

30 #ifde‡
__USE_EXTERN_INLINES


33 #i‡!(
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄
)

35 
__STDIO_INLINE
 

36 
	$v¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

38  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

39 
	}
}

43 
__STDIO_INLINE
 

44 
	$gëch¨
 ()

46  
	`_IO_gëc
 (
°dö
);

47 
	}
}

50 #ifde‡
__USE_MISC


52 
__STDIO_INLINE
 

53 
	$fgëc_u∆ocked
 (
FILE
 *
__Â
)

55  
	`_IO_gëc_u∆ocked
 (
__Â
);

56 
	}
}

60 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


62 
__STDIO_INLINE
 

63 
	$gëc_u∆ocked
 (
FILE
 *
__Â
)

65  
	`_IO_gëc_u∆ocked
 (
__Â
);

66 
	}
}

69 
__STDIO_INLINE
 

70 
	$gëch¨_u∆ocked
 ()

72  
	`_IO_gëc_u∆ocked
 (
°dö
);

73 
	}
}

78 
__STDIO_INLINE
 

79 
	$putch¨
 (
__c
)

81  
	`_IO_putc
 (
__c
, 
°dout
);

82 
	}
}

85 #ifde‡
__USE_MISC


87 
__STDIO_INLINE
 

88 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

90  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

91 
	}
}

95 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


97 
__STDIO_INLINE
 

98 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

100  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

101 
	}
}

104 
__STDIO_INLINE
 

105 
	$putch¨_u∆ocked
 (
__c
)

107  
	`_IO_putc_u∆ocked
 (
__c
, 
°dout
);

108 
	}
}

112 #ifdef 
__USE_GNU


114 
__STDIO_INLINE
 
_IO_ssize_t


115 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
)

117  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

118 
	}
}

122 #ifde‡
__USE_MISC


124 
__STDIO_INLINE
 

125 
__NTH
 (
	$„of_u∆ocked
 (
FILE
 *
__°ªam
))

127  
	`_IO_„of_u∆ocked
 (
__°ªam
);

128 
	}
}

131 
__STDIO_INLINE
 

132 
__NTH
 (
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
))

134  
	`_IO_„º‹_u∆ocked
 (
__°ªam
);

135 
	}
}

141 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__
 \

142 && !
deföed
 
	g__˝lu•lus


144 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

145 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

146 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

147 && (
size_t
Ë(
size
) != 0) \

148 ? ({ *
__±r
 = (*Ë(
±r
); \

149 
FILE
 *
__°ªam
 = (
°ªam
); \

150 
size_t
 
__˙t
; \

151 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

152 
__˙t
 > 0; --__cnt) \

154 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
); \

155 i‡(
__c
 =
EOF
) \

157 *
__±r
++ = 
__c
; \

159 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

160 / (
size_t
Ë(
size
); }) \

161 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

162 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

164 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

165 (Ë(
n
), (
size_t
) 0) \

166 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

168 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

169 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

170 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

171 && (
size_t
Ë(
size
) != 0) \

172 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

173 
FILE
 *
__°ªam
 = (
°ªam
); \

174 
size_t
 
__˙t
; \

175 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

176 
__˙t
 > 0; --__cnt) \

177 i‡(
	`_IO_putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

179 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

180 / (
size_t
Ë(
size
); }) \

181 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

182 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

184 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

185 (Ë(
n
), (
size_t
) 0) \

186 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

190 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio2.h

19 #i‚de‡
_STDIO_H


23 
	$__•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

24 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

25 
	$__v•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

26 c⁄° *
__ª°ri˘
 
__f‹m©
,

27 
_G_va_li°
 
__≠
Ë
__THROW
;

29 #ifde‡
__va_¨g_∑ck


30 
__f‹tify_fun˘i⁄
 

31 
	`__NTH
 (
	$•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__fmt
, ...))

33  
	`__buûtö___•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

34 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

35 
	}
}

36 #ñi‡!
deföed
 
__˝lu•lus


37 
	#•rötf
(
°r
, ...) \

38 
	`__buûtö___•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

39 
__VA_ARGS__
)

	)

42 
__f‹tify_fun˘i⁄
 

43 
__NTH
 (
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__fmt
,

44 
_G_va_li°
 
__≠
))

46  
	`__buûtö___v•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

47 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

48 
	}
}

50 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


52 
	$__¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

53 
size_t
 
__¶í
, c⁄° *
__ª°ri˘
 
__f‹m©
,

54 ...Ë
__THROW
;

55 
	$__v¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

56 
size_t
 
__¶í
, c⁄° *
__ª°ri˘
 
__f‹m©
,

57 
_G_va_li°
 
__≠
Ë
__THROW
;

59 #ifde‡
__va_¨g_∑ck


60 
__f‹tify_fun˘i⁄
 

61 
	`__NTH
 (
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

62 c⁄° *
__ª°ri˘
 
__fmt
, ...))

64  
	`__buûtö___¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

65 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

66 
	}
}

67 #ñi‡!
deföed
 
__˝lu•lus


68 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

69 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

70 
__VA_ARGS__
)

	)

73 
__f‹tify_fun˘i⁄
 

74 
__NTH
 (
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

75 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

77  
	`__buûtö___v¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

78 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

79 
	}
}

83 #i‡
__USE_FORTIFY_LEVEL
 > 1

85 
__Ârötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

86 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

87 
__¥ötf_chk
 (
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

88 
__vÂrötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

89 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__≠
);

90 
__v¥ötf_chk
 (
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
,

91 
_G_va_li°
 
__≠
);

93 #ifde‡
__va_¨g_∑ck


94 
__f‹tify_fun˘i⁄
 

95 
	$Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, c⁄° *__ª°ri˘ 
__fmt
, ...)

97  
	`__Ârötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

98 
	`__va_¨g_∑ck
 ());

99 
	}
}

101 
__f‹tify_fun˘i⁄
 

102 
	$¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, ...)

104  
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

105 
	}
}

106 #ñi‡!
deföed
 
__˝lu•lus


107 
	#¥ötf
(...) \

108 
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

109 
	#Ârötf
(
°ªam
, ...) \

110 
	`__Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

113 
__f‹tify_fun˘i⁄
 

114 
	$v¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

116 #ifde‡
__USE_EXTERN_INLINES


117  
	`__vÂrötf_chk
 (
°dout
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

119  
	`__v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

121 
	}
}

123 
__f‹tify_fun˘i⁄
 

124 
	$vÂrötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

125 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

127  
	`__vÂrötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

128 
	}
}

130 #ifde‡
__USE_XOPEN2K8


131 
	$__d¥ötf_chk
 (
__fd
, 
__Êag
, c⁄° *
__ª°ri˘
 
__fmt
,

132 ...Ë
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

133 
	$__vd¥ötf_chk
 (
__fd
, 
__Êag
,

134 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

135 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

137 #ifde‡
__va_¨g_∑ck


138 
__f‹tify_fun˘i⁄
 

139 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

141  
	`__d¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

142 
	`__va_¨g_∑ck
 ());

143 
	}
}

144 #ñi‡!
deföed
 
__˝lu•lus


145 
	#d¥ötf
(
fd
, ...) \

146 
	`__d¥ötf_chk
 (
fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

149 
__f‹tify_fun˘i⁄
 

150 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

152  
	`__vd¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

153 
	}
}

156 #ifde‡
__USE_GNU


158 
	$__a•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

159 c⁄° *
__ª°ri˘
 
__fmt
, ...)

160 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 4))Ë
__wur
;

161 
	$__va•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

162 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

163 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 0))Ë
__wur
;

164 
	$__ob°ack_¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

165 
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
,

167 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

168 
	$__ob°ack_v¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

169 
__Êag
,

170 c⁄° *
__ª°ri˘
 
__f‹m©
,

171 
_G_va_li°
 
__¨gs
)

172 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

174 #ifde‡
__va_¨g_∑ck


175 
__f‹tify_fun˘i⁄
 

176 
	`__NTH
 (
	$a•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
, ...))

178  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

179 
	`__va_¨g_∑ck
 ());

180 
	}
}

182 
__f‹tify_fun˘i⁄
 

183 
__NTH
 (
	$__a•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
,

186  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

187 
	`__va_¨g_∑ck
 ());

188 
	}
}

190 
__f‹tify_fun˘i⁄
 

191 
__NTH
 (
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

192 c⁄° *
__ª°ri˘
 
__fmt
, ...))

194  
	`__ob°ack_¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

195 
	`__va_¨g_∑ck
 ());

196 
	}
}

197 #ñi‡!
deföed
 
__˝lu•lus


198 
	#a•rötf
(
±r
, ...) \

199 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

200 
	#__a•rötf
(
±r
, ...) \

201 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

202 
	#ob°ack_¥ötf
(
ob°ack
, ...) \

203 
	`__ob°ack_¥ötf_chk
 (
ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

206 
__f‹tify_fun˘i⁄
 

207 
__NTH
 (
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
,

208 
_G_va_li°
 
__≠
))

210  
	`__va•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

211 
	}
}

213 
__f‹tify_fun˘i⁄
 

214 
__NTH
 (
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

215 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

217  
	`__ob°ack_v¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

218 
__≠
);

219 
	}
}

225 #i‡!
deföed
 
__USE_ISOC11
 \

226 || (
deföed
 
	g__˝lu•lus
 && __˝lu•lu†<201103L && !deföed 
__USE_GNU
)

227 *
	$__gës_chk
 (*
__°r
, 
size_t
Ë
__wur
;

228 *
	`__REDIRECT
 (
__gës_w¨n
, (*
__°r
), 
gës
)

229 
__wur
 
	`__w¨«âr
 ("please use fgets or getline instead, gets can't "

232 
__f‹tify_fun˘i⁄
 
__wur
 *

233 
	$gës
 (*
__°r
)

235 i‡(
	`__bos
 (
__°r
Ë!(
size_t
) -1)

236  
	`__gës_chk
 (
__°r
, 
	`__bos
 (__str));

237  
	`__gës_w¨n
 (
__°r
);

238 
	}
}

241 *
	$__fgës_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

242 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

243 *
	`__REDIRECT
 (
__fgës_Æüs
,

244 (*
__ª°ri˘
 
__s
, 
__n
,

245 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës
Ë
__wur
;

246 *
	`__REDIRECT
 (
__fgës_chk_w¨n
,

247 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

248 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_chk
)

249 
__wur
 
	`__w¨«âr
 ("fgets called with bigger sizeÅhanÜength "

252 
__f‹tify_fun˘i⁄
 
__wur
 *

253 
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

255 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

257 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

258  
	`__fgës_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

260 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

261  
	`__fgës_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

263  
	`__fgës_Æüs
 (
__s
, 
__n
, 
__°ªam
);

264 
	}
}

266 
size_t
 
	$__‰ód_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

267 
size_t
 
__size
, size_à
__n
,

268 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

269 
size_t
 
	`__REDIRECT
 (
__‰ód_Æüs
,

270 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

271 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

272 
‰ód
Ë
__wur
;

273 
size_t
 
	`__REDIRECT
 (
__‰ód_chk_w¨n
,

274 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

275 
size_t
 
__size
, size_à
__n
,

276 
FILE
 *
__ª°ri˘
 
__°ªam
),

277 
__‰ód_chk
)

278 
__wur
 
	`__w¨«âr
 ("fread called with bigger size *ÇmembÅhanÜength "

281 
__f‹tify_fun˘i⁄
 
__wur
 
size_t


282 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

283 
FILE
 *
__ª°ri˘
 
__°ªam
)

285 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

287 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

288 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

289 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

290  
	`__‰ód_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

292 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

293  
	`__‰ód_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

295  
	`__‰ód_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

296 
	}
}

298 #ifde‡
__USE_GNU


299 *
	$__fgës_u∆ocked_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
,

300 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

301 *
	`__REDIRECT
 (
__fgës_u∆ocked_Æüs
,

302 (*
__ª°ri˘
 
__s
, 
__n
,

303 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës_u∆ocked
Ë
__wur
;

304 *
	`__REDIRECT
 (
__fgës_u∆ocked_chk_w¨n
,

305 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

306 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_u∆ocked_chk
)

307 
__wur
 
	`__w¨«âr
 ("fgets_unlocked called with bigger sizeÅhanÜength "

310 
__f‹tify_fun˘i⁄
 
__wur
 *

311 
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

313 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

315 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

316  
	`__fgës_u∆ocked_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

318 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

319  
	`__fgës_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

321  
	`__fgës_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

322 
	}
}

325 #ifde‡
__USE_MISC


326 #unde‡
‰ód_u∆ocked


327 
size_t
 
	$__‰ód_u∆ocked_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

328 
size_t
 
__size
, size_à
__n
,

329 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

330 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_Æüs
,

331 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

332 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

333 
‰ód_u∆ocked
Ë
__wur
;

334 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_chk_w¨n
,

335 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

336 
size_t
 
__size
, size_à
__n
,

337 
FILE
 *
__ª°ri˘
 
__°ªam
),

338 
__‰ód_u∆ocked_chk
)

339 
__wur
 
	`__w¨«âr
 ("fread_unlocked called with bigger size *ÇmembÅhan "

342 
__f‹tify_fun˘i⁄
 
__wur
 
size_t


343 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

344 
FILE
 *
__ª°ri˘
 
__°ªam
)

346 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

348 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

349 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

350 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

351  
	`__‰ód_u∆ocked_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

352 
__°ªam
);

354 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

355  
	`__‰ód_u∆ocked_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

356 
__°ªam
);

359 #ifde‡
__USE_EXTERN_INLINES


360 i‡(
	`__buûtö_c⁄°™t_p
 (
__size
)

361 && 
	`__buûtö_c⁄°™t_p
 (
__n
)

362 && (
__size
 | 
__n
Ë< (((
size_t
) 1) << (8 *  (size_t) / 2))

363 && 
__size
 * 
__n
 <= 8)

365 
size_t
 
__˙t
 = 
__size
 * 
__n
;

366 *
__˝å
 = (*Ë
__±r
;

367 i‡(
__˙t
 == 0)

370 ; 
__˙t
 > 0; --__cnt)

372 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
);

373 i‡(
__c
 =
EOF
)

375 *
__˝å
++ = 
__c
;

377  (
__˝å
 - (*Ë
__±r
Ë/ 
__size
;

380  
	`__‰ód_u∆ocked_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

381 
	}
}

	@/usr/include/bits/stdio_lim.h

18 #i‡!
deföed
 
_STDIO_H
 && !deföed 
__√ed_FOPEN_MAX
 && !deföed 
__√ed_IOV_MAX


22 #ifde‡
_STDIO_H


23 
	#L_tm≤am
 20

	)

24 
	#TMP_MAX
 238328

	)

25 
	#FILENAME_MAX
 4096

	)

27 #ifde‡
__USE_POSIX


28 
	#L_˘îmid
 9

	)

29 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


30 
	#L_cu£rid
 9

	)

35 #i‡
deföed
 
__√ed_FOPEN_MAX
 || deföed 
_STDIO_H


36 #unde‡
FOPEN_MAX


37 
	#FOPEN_MAX
 16

	)

40 #i‡
deföed
 
__√ed_IOV_MAX
 && !deföed 
IOV_MAX


41 
	#IOV_MAX
 1024

	)

	@/usr/include/bits/stdlib-bsearch.h

19 
__exã∫_ölöe
 *

20 
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

21 
__com∑r_‚_t
 
__com∑r
)

23 
size_t
 
__l
, 
__u
, 
__idx
;

24 c⁄° *
__p
;

25 
__com∑ris⁄
;

27 
__l
 = 0;

28 
__u
 = 
__nmemb
;

29 
__l
 < 
__u
)

31 
__idx
 = (
__l
 + 
__u
) / 2;

32 
__p
 = (*Ë(((c⁄° *Ë
__ba£
Ë+ (
__idx
 * 
__size
));

33 
__com∑ris⁄
 = (*
__com∑r
Ë(
__key
, 
__p
);

34 i‡(
__com∑ris⁄
 < 0)

35 
__u
 = 
__idx
;

36 i‡(
__com∑ris⁄
 > 0)

37 
__l
 = 
__idx
 + 1;

39  (*Ë
__p
;

42  
NULL
;

43 
	}
}

	@/usr/include/bits/stdlib-float.h

19 #i‚de‡
_STDLIB_H


23 #ifde‡
__USE_EXTERN_INLINES


24 
__BEGIN_NAMESPACE_STD


25 
__exã∫_ölöe
 

26 
__NTH
 (
	$©of
 (c⁄° *
__≈å
))

28  
	`°πod
 (
__≈å
, (**Ë
NULL
);

29 
	}
}

30 
	g__END_NAMESPACE_STD


	@/usr/include/bits/stdlib-ldbl.h

19 #i‚de‡
_STDLIB_H


23 #ifdef 
__USE_ISOC99


24 
__BEGIN_NAMESPACE_C99


25 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

26 
__END_NAMESPACE_C99


29 #ifde‡
__USE_GNU


30 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

33 #ifde‡
__USE_MISC


34 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

35 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

36 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

37 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

38 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

	@/usr/include/bits/stdlib.h

19 #i‚de‡
_STDLIB_H


23 *
	$__ªÆ∑th_chk
 (c⁄° *
__ª°ri˘
 
__«me
,

24 *
__ª°ri˘
 
__ªsﬁved
,

25 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

26 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

27 (c⁄° *
__ª°ri˘
 
__«me
,

28 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

29 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_chk_w¨n
,

30 (c⁄° *
__ª°ri˘
 
__«me
,

31 *
__ª°ri˘
 
__ªsﬁved
,

32 
size_t
 
__ªsﬁvedÀn
), 
__ªÆ∑th_chk
Ë
__wur


33 
	`__w¨«âr
 ("secondárgument ofÑealpath must beÉither NULL orát "

36 
__f‹tify_fun˘i⁄
 
__wur
 *

37 
	`__NTH
 (
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

39 i‡(
	`__bos
 (
__ªsﬁved
Ë!(
size_t
) -1)

41 #i‡
deföed
 
_LIBC_LIMITS_H_
 && deföed 
PATH_MAX


42 i‡(
	`__bos
 (
__ªsﬁved
Ë< 
PATH_MAX
)

43  
	`__ªÆ∑th_chk_w¨n
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

45  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

48  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

49 
	}
}

52 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

53 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

54 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

55 
size_t
 
__buÊí
), 
±¢ame_r
)

56 
	`__n⁄nuŒ
 ((2));

57 
	`__REDIRECT_NTH
 (
__±¢ame_r_chk_w¨n
,

58 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

59 
size_t
 
__ƒól
), 
__±¢ame_r_chk
)

60 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ptsname_r called with buflen biggerÅhan "

63 
__f‹tify_fun˘i⁄
 

64 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

66 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

68 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

69  
	`__±¢ame_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

70 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

71  
	`__±¢ame_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

73  
	`__±¢ame_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

74 
	}
}

77 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

78 
__THROW
 
__wur
;

79 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

80 
w˘omb
Ë
__wur
;

82 
__f‹tify_fun˘i⁄
 
__wur
 

83 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

88 
	#__STDLIB_MB_LEN_MAX
 16

	)

89 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


92 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__STDLIB_MB_LEN_MAX
 > __bos (__s))

93  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__bos
 (__s));

94  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

95 
	}
}

98 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

99 c⁄° *
__ª°ri˘
 
__§c
,

100 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

101 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

102 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

103 c⁄° *
__ª°ri˘
 
__§c
,

104 
size_t
 
__Àn
), 
mb°owcs
);

105 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_chk_w¨n
,

106 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

107 c⁄° *
__ª°ri˘
 
__§c
,

108 
size_t
 
__Àn
, size_à
__d°Àn
), 
__mb°owcs_chk
)

109 
	`__w¨«âr
 ("mbstowcs called with dst buffer smallerÅhanÜen "

112 
__f‹tify_fun˘i⁄
 
size_t


113 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, c⁄° *__ª°ri˘ 
__§c
,

114 
size_t
 
__Àn
))

116 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

118 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

119  
	`__mb°owcs_chk
 (
__d°
, 
__§c
, 
__Àn
,

120 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

122 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

123  
	`__mb°owcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
,

124 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

126  
	`__mb°owcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

127 
	}
}

130 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

131 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

132 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

133 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

134 (*
__ª°ri˘
 
__d°
,

135 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

136 
size_t
 
__Àn
), 
wc°ombs
);

137 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_chk_w¨n
,

138 (*
__ª°ri˘
 
__d°
,

139 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

140 
size_t
 
__Àn
, size_à
__d°Àn
), 
__wc°ombs_chk
)

141 
	`__w¨«âr
 ("wcstombs called with dst buffer smallerÅhanÜen");

143 
__f‹tify_fun˘i⁄
 
size_t


144 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, c⁄° 
wch¨_t
 *__ª°ri˘ 
__§c
,

145 
size_t
 
__Àn
))

147 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

149 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

150  
	`__wc°ombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

151 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

152  
	`__wc°ombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

154  
	`__wc°ombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

155 
	}
}

	@/usr/include/bits/string.h

19 #i‚de‡
_STRING_H


24 
	#_STRING_ARCH_u«lig√d
 1

	)

28 #i‡!
deföed
 
__x86_64__
 && (deföed 
__i486__
 || deföed 
__≥¡ium__
 \

29 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

30 || 
deföed
 
	g__noc⁄a__
 || deföed 
	g__©om__
 \

31 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__c‹ei7__
 \

32 || 
deföed
 
	g__k6__
 || deföed 
	g__geode__
 \

33 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

34 || 
deföed
 
	g__amdÁm10__
)

38 #i‡!
deföed
 
__NO_STRING_INLINES
 && deföed 
__USE_STRING_INLINES
 \

39 && 
deföed
 
	g__GNUC__
 && __GNUC__ >= 2

41 #i‚de‡
__STRING_INLINE


42 #i‚de‡
__exã∫_ölöe


43 
	#__STRING_INLINE
 
ölöe


	)

45 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

50 
	#__STRING_SMALL_GET16
(
§c
, 
idx
) \

51 ((((c⁄° *Ë(
§c
))[
idx
 + 1] << 8) \

52 | ((c⁄° *Ë(
§c
))[
idx
])

	)

53 
	#__STRING_SMALL_GET32
(
§c
, 
idx
) \

54 (((((c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

55 | ((c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

56 | ((c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

57 | ((c⁄° *Ë(
§c
))[
idx
])

	)

61 
	#_HAVE_STRING_ARCH_mem˝y
 1

	)

62 
	#mem˝y
(
de°
, 
§c
, 
n
) \

63 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

64 ? 
	`__mem˝y_c
 ((
de°
), (
§c
), (
n
)) \

65 : 
	`__mem˝y_g
 ((
de°
), (
§c
), (
n
))))

	)

66 
	#__mem˝y_c
(
de°
, 
§c
, 
n
) \

67 ((
n
) == 0 \

68 ? (
de°
) \

69 : (((
n
) % 4 == 0) \

70 ? 
	`__mem˝y_by4
 (
de°
, 
§c
, 
n
) \

71 : (((
n
) % 2 == 0) \

72 ? 
	`__mem˝y_by2
 (
de°
, 
§c
, 
n
) \

73 : 
	`__mem˝y_g
 (
de°
, 
§c
, 
n
))))

	)

75 
__STRING_INLINE
 *
__mem˝y_by4
 (*
__de°
, c⁄° *
__§c
,

76 
size_t
 
__n
);

78 
__STRING_INLINE
 *

79 
	$__mem˝y_by4
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

81 
__d0
, 
__d1
;

82 *
__tmp
 = 
__de°
;

83 
__asm__
 
__vﬁ©ûe__


91 : "=&r" (
__d0
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

92 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
 / 4)

94  
__de°
;

95 
	}
}

97 
__STRING_INLINE
 *
__mem˝y_by2
 (*
__de°
, c⁄° *
__§c
,

98 
size_t
 
__n
);

100 
__STRING_INLINE
 *

101 
	$__mem˝y_by2
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

103 
__d0
, 
__d1
;

104 *
__tmp
 = 
__de°
;

105 
__asm__
 
__vﬁ©ûe__


118 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

119 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
 / 2)

121  
__de°
;

122 
	}
}

124 
__STRING_INLINE
 *
__mem˝y_g
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
);

126 
__STRING_INLINE
 *

127 
	$__mem˝y_g
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

129 
__d0
, 
__d1
, 
__d2
;

130 *
__tmp
 = 
__de°
;

131 
__asm__
 
__vﬁ©ûe__


142 : "=&c" (
__d0
), "=&D" (
__d1
), "=&S" (
__d2
),

143 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

144 : "0" (
__n
), "1" (
__tmp
), "2" (
__§c
),

145 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
)

147  
__de°
;

148 
	}
}

150 
	#_HAVE_STRING_ARCH_memmove
 1

	)

151 #i‚de‡
_FORCE_INLINES


154 
	#memmove
(
de°
, 
§c
, 
n
Ë
	`__memmove_g
 (de°, src,Ç)

	)

156 
__STRING_INLINE
 *
	$__memmove_g
 (*, c⁄° *, 
size_t
)

157 
	`__asm__
 ("memmove");

159 
__STRING_INLINE
 *

160 
	$__memmove_g
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

162 
__d0
, 
__d1
, 
__d2
;

163 *
__tmp
 = 
__de°
;

164 i‡(
__de°
 < 
__§c
)

165 
__asm__
 
__vﬁ©ûe__


168 : "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
),

169 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

170 : "0" (
__n
), "1" (
__§c
), "2" (
__tmp
),

171 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
));

173 
__asm__
 
__vﬁ©ûe__


177 : "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
),

178 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

179 : "0" (
__n
), "1" (__¿- 1 + (c⁄° *Ë
__§c
),

180 "2" (
__n
 - 1 + (*Ë
__tmp
),

181 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
));

182  
__de°
;

183 
	}
}

187 
	#_HAVE_STRING_ARCH_memcmp
 1

	)

188 #i‚de‡
_FORCE_INLINES


189 #i‚de‡
__PIC__


191 
__STRING_INLINE
 

192 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

194 
__d0
, 
__d1
, 
__d2
;

195 
__ªs
;

196 
__asm__
 
__vﬁ©ûe__


204 : "=&a" (
__ªs
), "=&S" (
__d0
), "=&D" (
__d1
), "=&c" (
__d2
)

205 : "0" (0), "1" (
__s1
), "2" (
__s2
), "3" (
__n
),

206 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s1
),

207 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s2
)

209  
__ªs
;

210 
	}
}

215 
	#_HAVE_STRING_ARCH_mem£t
 1

	)

216 
	#_USE_STRING_ARCH_mem£t
 1

	)

217 
	#mem£t
(
s
, 
c
, 
n
) \

218 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

219 ? ((
n
) == 1 \

220 ? 
	`__mem£t_c1
 ((
s
), (
c
)) \

221 : 
	`__mem£t_gc
 ((
s
), (
c
), (
n
))) \

222 : (
	`__buûtö_c⁄°™t_p
 (
c
) \

223 ? (
	`__buûtö_c⁄°™t_p
 (
n
) \

224 ? 
	`__mem£t_c˙
 ((
s
), (
c
), (
n
)) \

225 : 
	`mem£t
 ((
s
), (
c
), (
n
))) \

226 : (
	`__buûtö_c⁄°™t_p
 (
n
) \

227 ? 
	`__mem£t_g˙
 ((
s
), (
c
), (
n
)) \

228 : 
	`mem£t
 ((
s
), (
c
), (
n
))))))

	)

230 
	#__mem£t_c1
(
s
, 
c
Ë({ *
__s
 = (s); \

231 *((*Ë
__s
Ë(Ë(
c
); \

232 
__s
; })

	)

234 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

235 ({ *
__s
 = (
s
); \

237 
__ui
; \

238 
__usi
; \

239 
__uc
; \

240 } *
__u
 = 
__s
; \

241 
__c
 = ((Ë((Ë(
c
))) * 0x01010101; \

247 i‡((
n
) == 3 || (n) >= 5) \

248 
__asm__
 
	`__vﬁ©ûe__
 ("" : "Ù" (
__c
) : "0" (__c)); \

251 
n
) \

254 
__u
->
__ui
 = 
__c
; \

255 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

257 
__u
->
__ui
 = 
__c
; \

258 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

260 
__u
->
__ui
 = 
__c
; \

261 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

263 
__u
->
__usi
 = (Ë
__c
; \

264 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

265 
__u
->
__uc
 = (Ë
__c
; \

269 
__u
->
__ui
 = 
__c
; \

270 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

272 
__u
->
__ui
 = 
__c
; \

273 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

275 
__u
->
__ui
 = 
__c
; \

276 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

278 
__u
->
__usi
 = (Ë
__c
; \

282 
__u
->
__ui
 = 
__c
; \

283 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

285 
__u
->
__ui
 = 
__c
; \

286 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

288 
__u
->
__ui
 = 
__c
; \

289 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

291 
__u
->
__uc
 = (Ë
__c
; \

295 
__u
->
__ui
 = 
__c
; \

296 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

298 
__u
->
__ui
 = 
__c
; \

299 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

301 
__u
->
__ui
 = 
__c
; \

302 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

304 
__u
->
__ui
 = 
__c
; \

309 
__s
; })

	)

311 
	#__mem£t_c˙
(
s
, 
c
, 
n
) \

312 (((
n
) % 4 == 0) \

313 ? 
	`__mem£t_c˙_by4
 (
s
, ((Ë((Ë(
c
))) * 0x01010101,\

314 
n
) \

315 : (((
n
) % 2 == 0) \

316 ? 
	`__mem£t_c˙_by2
 (
s
, \

317 ((Ë((Ë(
c
))) * 0x01010101,\

318 
n
) \

319 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

321 
__STRING_INLINE
 *
__mem£t_c˙_by4
 (*
__s
, 
__c
,

322 
size_t
 
__n
);

324 
__STRING_INLINE
 *

325 
	$__mem£t_c˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
)

327 *
__tmp
 = 
__s
;

328 
__d0
;

329 #ifde‡
__i686__


330 
__asm__
 
__vﬁ©ûe__


333 : "=&a" (
__c
), "=&D" (
__tmp
), "=&c" (
__d0
),

334 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

335 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

338 
__asm__
 
__vﬁ©ûe__


344 : "=&r" (
__c
), "=&r" (
__tmp
), "=&r" (
__d0
),

345 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

346 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

349  
__s
;

350 
	}
}

352 
__STRING_INLINE
 *
__mem£t_c˙_by2
 (*
__s
, 
__c
,

353 
size_t
 
__n
);

355 
__STRING_INLINE
 *

356 
	$__mem£t_c˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
)

358 
__d0
, 
__d1
;

359 *
__tmp
 = 
__s
;

360 #ifde‡
__i686__


361 
__asm__
 
__vﬁ©ûe__


365 : "=&a" (
__d0
), "=&D" (
__tmp
), "=&c" (
__d1
),

366 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

367 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

370 
__asm__
 
__vﬁ©ûe__


376 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__d1
),

377 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

378 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

381  
__s
;

382 
	}
}

384 
	#__mem£t_g˙
(
s
, 
c
, 
n
) \

385 (((
n
) % 4 == 0) \

386 ? 
	`__mem£t_g˙_by4
 (
s
, 
c
, 
n
) \

387 : (((
n
) % 2 == 0) \

388 ? 
	`__mem£t_g˙_by2
 (
s
, 
c
, 
n
) \

389 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

391 
__STRING_INLINE
 *
__mem£t_g˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
);

393 
__STRING_INLINE
 *

394 
	$__mem£t_g˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
)

396 *
__tmp
 = 
__s
;

397 
__d0
;

398 
__asm__
 
__vﬁ©ûe__


408 : "=&q" (
__c
), "=&r" (
__tmp
), "=&r" (
__d0
),

409 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

410 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

412  
__s
;

413 
	}
}

415 
__STRING_INLINE
 *
__mem£t_g˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
);

417 
__STRING_INLINE
 *

418 
	$__mem£t_g˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
)

420 
__d0
, 
__d1
;

421 *
__tmp
 = 
__s
;

422 
__asm__
 
__vﬁ©ûe__


433 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__d1
),

434 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

435 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

437  
__s
;

438 
	}
}

442 
	#_HAVE_STRING_ARCH_memchr
 1

	)

443 #i‚de‡
_FORCE_INLINES


444 
__STRING_INLINE
 *

445 
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

447 
__d0
;

448 #ifde‡
__i686__


449 
__d1
;

451 *
__ªs
;

452 i‡(
__n
 == 0)

453  
NULL
;

454 #ifde‡
__i686__


455 
__asm__
 
__vﬁ©ûe__


459 : "=D" (
__ªs
), "=&c" (
__d0
), "=&r" (
__d1
)

460 : "a" (
__c
), "0" (
__s
), "1" (
__n
), "2" (1),

461 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

464 
__asm__
 
__vﬁ©ûe__


470 : "=D" (
__ªs
), "=&c" (
__d0
)

471 : "a" (
__c
), "0" (
__s
), "1" (
__n
),

472 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

475  
__ªs
 - 1;

476 
	}
}

479 
	#_HAVE_STRING_ARCH_memrchr
 1

	)

480 #i‚de‡
_FORCE_INLINES


481 
__STRING_INLINE
 *
__memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
);

483 
__STRING_INLINE
 *

484 
	$__memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

486 
__d0
;

487 #ifde‡
__i686__


488 
__d1
;

490 *
__ªs
;

491 i‡(
__n
 == 0)

492  
NULL
;

493 #ifde‡
__i686__


494 
__asm__
 
__vﬁ©ûe__


500 : "=D" (
__ªs
), "=&c" (
__d0
), "=&r" (
__d1
)

501 : "a" (
__c
), "0" (
__s
 + 
__n
 - 1), "1" (__n), "2" (-1),

502 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

505 
__asm__
 
__vﬁ©ûe__


512 : "=D" (
__ªs
), "=&c" (
__d0
)

513 : "a" (
__c
), "0" (
__s
 + 
__n
 - 1), "1" (__n),

514 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

517  
__ªs
;

518 
	}
}

519 #ifde‡
__USE_GNU


520 
	#memrchr
(
s
, 
c
, 
n
Ë
	`__memrchr
 ((s), (c), (n))

	)

525 
	#_HAVE_STRING_ARCH_øwmemchr
 1

	)

526 
__STRING_INLINE
 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

528 #i‚de‡
_FORCE_INLINES


529 
__STRING_INLINE
 *

530 
	$__øwmemchr
 (c⁄° *
__s
, 
__c
)

532 
__d0
;

533 *
__ªs
;

534 
__asm__
 
__vﬁ©ûe__


537 : "=D" (
__ªs
), "=&c" (
__d0
)

538 : "a" (
__c
), "0" (
__s
), "1" (0xffffffff),

539 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

541  
__ªs
 - 1;

542 
	}
}

543 #ifde‡
__USE_GNU


544 
__STRING_INLINE
 *

545 
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

547  
	`__øwmemchr
 (
__s
, 
__c
);

548 
	}
}

554 
	#_HAVE_STRING_ARCH_°æí
 1

	)

555 
	#°æí
(
°r
) \

556 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
°r
) \

557 ? 
	`__buûtö_°æí
 (
°r
) \

558 : 
	`__°æí_g
 (
°r
)))

	)

559 
__STRING_INLINE
 
size_t
 
__°æí_g
 (c⁄° *
__°r
);

561 
__STRING_INLINE
 
size_t


562 
	$__°æí_g
 (c⁄° *
__°r
)

564 
__dummy
;

565 c⁄° *
__tmp
 = 
__°r
;

566 
__asm__
 
__vﬁ©ûe__


572 : "Ù" (
__tmp
), "=&q" (
__dummy
)

573 : "0" (
__°r
),

574 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__°r
)

576  
__tmp
 - 
__°r
 - 1;

577 
	}
}

581 
	#_HAVE_STRING_ARCH_°r˝y
 1

	)

582 
	#°r˝y
(
de°
, 
§c
) \

583 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

584 ? ( ((
§c
)[0]Ë=1 && 
	`°æí
 (src) + 1 <= 8 \

585 ? 
	`__°r˝y_a_smÆl
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

586 : (*Ë
	`mem˝y
 ((*Ë(
de°
), \

587 (c⁄° *Ë(
§c
), \

588 
	`°æí
 (
§c
) + 1)) \

589 : 
	`__°r˝y_g
 ((
de°
), (
§c
))))

	)

591 
	#__°r˝y_a_smÆl
(
de°
, 
§c
, 
§˛í
) \

592 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

594 
__ui
; \

595 
__usi
; \

596 
__uc
; \

597 
__c
; \

598 } *
__u
 = (*Ë
__de°
; \

599 
§˛í
) \

602 
__u
->
__uc
 = '\0'; \

605 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

608 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

609 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

610 
__u
->
__uc
 = '\0'; \

613 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

616 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

617 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

618 
__u
->
__uc
 = '\0'; \

621 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

622 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

623 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

626 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

627 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

628 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

629 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

630 
__u
->
__uc
 = '\0'; \

633 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

634 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

635 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 4); \

638 (*Ë
__de°
; }))

	)

640 
__STRING_INLINE
 *
__°r˝y_g
 (*
__de°
, c⁄° *
__§c
);

642 
__STRING_INLINE
 *

643 
	$__°r˝y_g
 (*
__de°
, c⁄° *
__§c
)

645 *
__tmp
 = 
__de°
;

646 
__dummy
;

647 
__asm__
 
__vﬁ©ûe__


656 : "=&r" (
__§c
), "=&r" (
__tmp
), "=&q" (
__dummy
),

657 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

658 : "0" (
__§c
), "1" (
__tmp
),

659 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

661  
__de°
;

662 
	}
}

665 #ifde‡
__USE_GNU


666 
	#_HAVE_STRING_ARCH_°p˝y
 1

	)

668 
	#__°p˝y
(
de°
, 
§c
) \

669 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

670 ? (
	`°æí
 (
§c
) + 1 <= 8 \

671 ? 
	`__°p˝y_a_smÆl
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

672 : 
	`__°p˝y_c
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1)) \

673 : 
	`__°p˝y_g
 ((
de°
), (
§c
))))

	)

674 
	#__°p˝y_c
(
de°
, 
§c
, 
§˛í
) \

675 ((
§˛í
) % 4 == 0 \

676 ? 
	`__memp˝y_by4
 (
de°
, 
§c
, 
§˛í
) - 1 \

677 : ((
§˛í
) % 2 == 0 \

678 ? 
	`__memp˝y_by2
 (
de°
, 
§c
, 
§˛í
) - 1 \

679 : 
	`__memp˝y_byn
 (
de°
, 
§c
, 
§˛í
Ë- 1))

	)

682 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 ((de°), (§c))

	)

684 
	#__°p˝y_a_smÆl
(
de°
, 
§c
, 
§˛í
) \

685 (
	`__exãnsi⁄__
 ({ union { \

686 
__ui
; \

687 
__usi
; \

688 
__uc
; \

689 
__c
; \

690 } *
__u
 = (*Ë(
de°
); \

691 
§˛í
) \

694 
__u
->
__uc
 = '\0'; \

697 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

698 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1); \

701 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

702 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

703 
__u
->
__uc
 = '\0'; \

706 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

707 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3); \

710 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

711 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

712 
__u
->
__uc
 = '\0'; \

715 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

716 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

717 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

718 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1); \

721 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

722 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

723 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

724 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

725 
__u
->
__uc
 = '\0'; \

728 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

729 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

730 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 4); \

731 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3); \

734 (*Ë
__u
; }))

	)

736 
__STRING_INLINE
 *
__memp˝y_by4
 (*
__de°
, c⁄° *
__§c
,

737 
size_t
 
__§˛í
);

739 
__STRING_INLINE
 *

740 
	$__memp˝y_by4
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__§˛í
)

742 *
__tmp
 = 
__de°
;

743 
__d0
, 
__d1
;

744 
__asm__
 
__vﬁ©ûe__


752 : "=&r" (
__d0
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

753 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 4)

755  
__tmp
;

756 
	}
}

758 
__STRING_INLINE
 *
__memp˝y_by2
 (*
__de°
, c⁄° *
__§c
,

759 
size_t
 
__§˛í
);

761 
__STRING_INLINE
 *

762 
	$__memp˝y_by2
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__§˛í
)

764 *
__tmp
 = 
__de°
;

765 
__d0
, 
__d1
;

766 
__asm__
 
__vﬁ©ûe__


779 : "=&q" (
__d0
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
),

780 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

781 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 2),

782 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

784  
__tmp
 + 2;

785 
	}
}

787 
__STRING_INLINE
 *
__memp˝y_byn
 (*
__de°
, c⁄° *
__§c
,

788 
size_t
 
__§˛í
);

790 
__STRING_INLINE
 *

791 
	$__memp˝y_byn
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__§˛í
)

793 
__d0
, 
__d1
;

794 *
__tmp
 = 
__de°
;

795 
__asm__
 
__vﬁ©ûe__


806 : "=D" (
__tmp
), "=&c" (
__d0
), "=&S" (
__d1
),

807 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

808 : "0" (
__tmp
), "1" (
__§˛í
), "2" (
__§c
),

809 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

811  
__tmp
;

812 
	}
}

814 
__STRING_INLINE
 *
__°p˝y_g
 (*
__de°
, c⁄° *
__§c
);

816 
__STRING_INLINE
 *

817 
	$__°p˝y_g
 (*
__de°
, c⁄° *
__§c
)

819 *
__tmp
 = 
__de°
;

820 
__dummy
;

821 
__asm__
 
__vﬁ©ûe__


830 : "=&r" (
__§c
), "Ù" (
__tmp
), "=&q" (
__dummy
),

831 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

832 : "0" (
__§c
), "1" (
__tmp
),

833 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

835  
__tmp
 - 1;

836 
	}
}

841 
	#_HAVE_STRING_ARCH_°∫˝y
 1

	)

842 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

843 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

844 ? ((
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

845 ? (*Ë
	`mem˝y
 ((*Ë(
de°
), \

846 (c⁄° *Ë(
§c
), 
n
) \

847 : 
	`__°∫˝y_cg
 ((
de°
), (
§c
), 
	`°æí
 (§cË+ 1, 
n
))) \

848 : 
	`__°∫˝y_gg
 ((
de°
), (
§c
), 
n
)))

	)

849 
	#__°∫˝y_cg
(
de°
, 
§c
, 
§˛í
, 
n
) \

850 (((
§˛í
) % 4 == 0) \

851 ? 
	`__°∫˝y_by4
 (
de°
, 
§c
, 
§˛í
, 
n
) \

852 : (((
§˛í
) % 2 == 0) \

853 ? 
	`__°∫˝y_by2
 (
de°
, 
§c
, 
§˛í
, 
n
) \

854 : 
	`__°∫˝y_byn
 (
de°
, 
§c
, 
§˛í
, 
n
)))

	)

856 
__STRING_INLINE
 *
__°∫˝y_by4
 (*
__de°
, c⁄° 
__§c
[],

857 
size_t
 
__§˛í
, size_à
__n
);

859 
__STRING_INLINE
 *

860 
	$__°∫˝y_by4
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

862 *
__tmp
 = 
__de°
;

863 
__dummy1
, 
__dummy2
;

864 
__asm__
 
__vﬁ©ûe__


872 : "=&r" (
__dummy1
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__dummy2
),

873 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

874 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 4),

875 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

877 (Ë
	`mem£t
 (
__tmp
, '\0', 
__n
 - 
__§˛í
);

878  
__de°
;

879 
	}
}

881 
__STRING_INLINE
 *
__°∫˝y_by2
 (*
__de°
, c⁄° 
__§c
[],

882 
size_t
 
__§˛í
, size_à
__n
);

884 
__STRING_INLINE
 *

885 
	$__°∫˝y_by2
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

887 *
__tmp
 = 
__de°
;

888 
__dummy1
, 
__dummy2
;

889 
__asm__
 
__vﬁ©ûe__


902 : "=&q" (
__dummy1
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__dummy2
),

903 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

904 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 2),

905 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

907 (Ë
	`mem£t
 (
__tmp
 + 2, '\0', 
__n
 - 
__§˛í
);

908  
__de°
;

909 
	}
}

911 
__STRING_INLINE
 *
__°∫˝y_byn
 (*
__de°
, c⁄° 
__§c
[],

912 
size_t
 
__§˛í
, size_à
__n
);

914 
__STRING_INLINE
 *

915 
	$__°∫˝y_byn
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

917 
__d0
, 
__d1
;

918 *
__tmp
 = 
__de°
;

919 
__asm__
 
__vﬁ©ûe__


930 : "=D" (
__tmp
), "=&c" (
__d0
), "=&S" (
__d1
),

931 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

932 : "1" (
__§˛í
), "0" (
__tmp
),"2" (
__§c
),

933 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

935 (Ë
	`mem£t
 (
__tmp
, '\0', 
__n
 - 
__§˛í
);

936  
__de°
;

937 
	}
}

939 
__STRING_INLINE
 *
__°∫˝y_gg
 (*
__de°
, c⁄° *
__§c
,

940 
size_t
 
__n
);

942 
__STRING_INLINE
 *

943 
	$__°∫˝y_gg
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

945 *
__tmp
 = 
__de°
;

946 
__dummy
;

947 i‡(
__n
 > 0)

948 
__asm__
 
__vﬁ©ûe__


964 : "=&r" (
__§c
), "=&r" (
__tmp
), "=&q" (
__dummy
), "=&r" (
__n
)

965 : "0" (
__§c
), "1" (
__tmp
), "3" (
__n
)

968  
__de°
;

969 
	}
}

973 
	#_HAVE_STRING_ARCH_°rˇt
 1

	)

974 
	#°rˇt
(
de°
, 
§c
) \

975 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

976 ? 
	`__°rˇt_c
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

977 : 
	`__°rˇt_g
 ((
de°
), (
§c
))))

	)

979 
__STRING_INLINE
 *
__°rˇt_c
 (*
__de°
, c⁄° 
__§c
[],

980 
size_t
 
__§˛í
);

982 
__STRING_INLINE
 *

983 
	$__°rˇt_c
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__§˛í
)

985 #ifde‡
__i686__


986 
__d0
;

987 *
__tmp
;

988 
__asm__
 
__vﬁ©ûe__


990 : "=D" (
__tmp
), "=&c" (
__d0
),

991 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

992 : "0" (
__de°
), "1" (0xffffffff), "a" (0),

993 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

995 --
__tmp
;

997 *
__tmp
 = 
__de°
 - 1;

998 
__asm__
 
__vﬁ©ûe__


1003 : "Ù" (
__tmp
),

1004 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

1005 : "0" (
__tmp
),

1006 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

1009 (Ë
	`mem˝y
 (
__tmp
, 
__§c
, 
__§˛í
);

1010  
__de°
;

1011 
	}
}

1013 
__STRING_INLINE
 *
__°rˇt_g
 (*
__de°
, c⁄° *
__§c
);

1015 
__STRING_INLINE
 *

1016 
	$__°rˇt_g
 (*
__de°
, c⁄° *
__§c
)

1018 *
__tmp
 = 
__de°
 - 1;

1019 
__dummy
;

1020 
__asm__
 
__vﬁ©ûe__


1032 : "=&q" (
__dummy
), "=&r" (
__tmp
), "=&r" (
__§c
),

1033 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

1034 : "1" (
__tmp
), "2" (
__§c
),

1035 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

1037  
__de°
;

1038 
	}
}

1042 
	#_HAVE_STRING_ARCH_°∫ˇt
 1

	)

1043 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

1044 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

1045 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

1046 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

1047 ? 
	`°rˇt
 (
__de°
, (
§c
)) \

1048 : (*(*)
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

1049 (c⁄° *Ë(
§c
), \

1050 (
n
)Ë0, 
__de°
)) \

1051 : 
	`__°∫ˇt_g
 (
__de°
, (
§c
), (
n
)); }))

	)

1053 
__STRING_INLINE
 *
__°∫ˇt_g
 (*
__de°
, c⁄° 
__§c
[],

1054 
size_t
 
__n
);

1056 
__STRING_INLINE
 *

1057 
	$__°∫ˇt_g
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__n
)

1059 *
__tmp
 = 
__de°
;

1060 
__dummy
;

1061 #ifde‡
__i686__


1062 
__asm__
 
__vﬁ©ûe__


1076 : "=&a" (
__dummy
), "=&D" (
__tmp
), "=&S" (
__§c
), "=&c" (
__n
)

1077 : "g" (
__n
), "0" (0), "1" (
__tmp
), "2" (
__§c
), "3" (0xffffffff)

1080 --
__tmp
;

1081 
__asm__
 
__vﬁ©ûe__


1098 : "=&q" (
__dummy
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__n
)

1099 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
)

1102  
__de°
;

1103 
	}
}

1107 
	#_HAVE_STRING_ARCH_°rcmp
 1

	)

1108 
	#°rcmp
(
s1
, 
s2
) \

1109 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

1110 && ( ((
s1
)[0]Ë!1 || 
	`°æí
 (s1) >= 4) \

1111 && ( ((
s2
)[0]Ë!1 || 
	`°æí
 (s2) >= 4) \

1112 ? 
	`memcmp
 ((c⁄° *Ë(
s1
), (c⁄° *Ë(
s2
), \

1113 (
	`°æí
 (
s1
Ë< såÀ¿(
s2
) \

1114 ? 
	`°æí
 (
s1
Ë: såÀ¿(
s2
)) + 1) \

1115 : (
	`__buûtö_c⁄°™t_p
 (
s1
) &&  ((s1)[0]) == 1 \

1116 &&  ((
s2
)[0]Ë=1 && 
	`°æí
 (
s1
) < 4 \

1117 ? (
	`__buûtö_c⁄°™t_p
 (
s2
) &&  ((s2)[0]) == 1 \

1118 ? 
	`__°rcmp_cc
 ((c⁄° *Ë(
s1
), \

1119 (c⁄° *Ë(
s2
), \

1120 
	`°æí
 (
s1
)) \

1121 : 
	`__°rcmp_cg
 ((c⁄° *Ë(
s1
), \

1122 (c⁄° *Ë(
s2
), \

1123 
	`°æí
 (
s1
))) \

1124 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&&  ((
s1
)[0]) == 1 \

1125 &&  ((
s2
)[0]Ë=1 && 
	`°æí
 (s2) < 4 \

1126 ? (
	`__buûtö_c⁄°™t_p
 (
s1
) \

1127 ? 
	`__°rcmp_cc
 ((c⁄° *Ë(
s1
), \

1128 (c⁄° *Ë(
s2
), \

1129 
	`°æí
 (
s2
)) \

1130 : 
	`__°rcmp_gc
 ((c⁄° *Ë(
s1
), \

1131 (c⁄° *Ë(
s2
), \

1132 
	`°æí
 (
s2
))) \

1133 : 
	`__°rcmp_gg
 ((
s1
), (
s2
))))))

	)

1135 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

1136 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = (
s1
)[0] - (
s2
)[0]; \

1137 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

1139 
__ªsu…
 = (
s1
)[1] - (
s2
)[1]; \

1140 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

1142 
__ªsu…
 = (
s1
)[2] - (
s2
)[2]; \

1143 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

1144 
__ªsu…
 = (
s1
)[3] - (
s2
)[3]; \

1147 
__ªsu…
; }))

	)

1149 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

1150 (
	`__exãnsi⁄__
 ({ c⁄° *
__s2
 = (
s2
); \

1151 
__ªsu…
 = (
s1
)[0] - 
__s2
[0]; \

1152 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

1154 
__ªsu…
 = (
s1
)[1] - 
__s2
[1]; \

1155 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

1157 
__ªsu…
 = (
s1
)[2] - 
__s2
[2]; \

1158 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

1159 
__ªsu…
 = (
s1
)[3] - 
__s2
[3]; \

1162 
__ªsu…
; }))

	)

1164 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

1165 (
	`__exãnsi⁄__
 ({ c⁄° *
__s1
 = (
s1
); \

1166 
__ªsu…
 = 
__s1
[0] - (
s2
)[0]; \

1167 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

1169 
__ªsu…
 = 
__s1
[1] - (
s2
)[1]; \

1170 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

1172 
__ªsu…
 = 
__s1
[2] - (
s2
)[2]; \

1173 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

1174 
__ªsu…
 = 
__s1
[3] - (
s2
)[3]; \

1177 
__ªsu…
; }))

	)

1179 
__STRING_INLINE
 
__°rcmp_gg
 (c⁄° *
__s1
, c⁄° *
__s2
);

1181 
__STRING_INLINE
 

1182 
	$__°rcmp_gg
 (c⁄° *
__s1
, c⁄° *
__s2
)

1184 
__ªs
;

1185 
__asm__
 
__vﬁ©ûe__


1201 : "=q" (
__ªs
), "=&r" (
__s1
), "=&r" (
__s2
)

1202 : "1" (
__s1
), "2" (
__s2
),

1203 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s1
),

1204 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s2
)

1206  
__ªs
;

1207 
	}
}

1211 
	#_HAVE_STRING_ARCH_°∫cmp
 1

	)

1212 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

1213 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`°æí
 (s1Ë< ((
size_t
Ë(
n
)) \

1214 ? 
	`°rcmp
 ((
s1
), (
s2
)) \

1215 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`°æí
 (s2Ë< ((
size_t
Ë(
n
))\

1216 ? 
	`°rcmp
 ((
s1
), (
s2
)) \

1217 : 
	`__°∫cmp_g
 ((
s1
), (
s2
), (
n
)))))

	)

1219 
__STRING_INLINE
 
__°∫cmp_g
 (c⁄° *
__s1
, c⁄° *
__s2
,

1220 
size_t
 
__n
);

1222 
__STRING_INLINE
 

1223 
	$__°∫cmp_g
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

1225 
__ªs
;

1226 
__asm__
 
__vﬁ©ûe__


1245 : "=q" (
__ªs
), "=&r" (
__s1
), "=&r" (
__s2
), "=&r" (
__n
)

1246 : "1" (
__s1
), "2" (
__s2
), "3" (
__n
),

1247 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s1
),

1248 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s2
)

1250  
__ªs
;

1251 
	}
}

1255 
	#_HAVE_STRING_ARCH_°rchr
 1

	)

1256 
	#_USE_STRING_ARCH_°rchr
 1

	)

1257 
	#°rchr
(
s
, 
c
) \

1258 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1259 ? ((
c
) == '\0' \

1260 ? (*Ë
	`__øwmemchr
 ((
s
), (
c
)) \

1261 : 
	`__°rchr_c
 ((
s
), ((
c
) & 0xff) << 8)) \

1262 : 
	`__°rchr_g
 ((
s
), (
c
))))

	)

1264 
__STRING_INLINE
 *
__°rchr_c
 (c⁄° *
__s
, 
__c
);

1266 
__STRING_INLINE
 *

1267 
	$__°rchr_c
 (c⁄° *
__s
, 
__c
)

1269 
__d0
;

1270 *
__ªs
;

1271 
__asm__
 
__vﬁ©ûe__


1281 : "Ù" (
__ªs
), "=&a" (
__d0
)

1282 : "0" (
__s
), "1" (
__c
),

1283 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1285  
__ªs
;

1286 
	}
}

1288 
__STRING_INLINE
 *
__°rchr_g
 (c⁄° *
__s
, 
__c
);

1290 
__STRING_INLINE
 *

1291 
	$__°rchr_g
 (c⁄° *
__s
, 
__c
)

1293 
__d0
;

1294 *
__ªs
;

1295 
__asm__
 
__vﬁ©ûe__


1306 : "Ù" (
__ªs
), "=&a" (
__d0
)

1307 : "0" (
__s
), "1" (
__c
),

1308 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1310  
__ªs
;

1311 
	}
}

1315 
	#_HAVE_STRING_ARCH_°rch∫ul
 1

	)

1316 
	#__°rch∫ul
(
s
, 
c
) \

1317 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1318 ? ((
c
) == '\0' \

1319 ? (*Ë
	`__øwmemchr
 ((
s
), 
c
) \

1320 : 
	`__°rch∫ul_c
 ((
s
), ((
c
) & 0xff) << 8)) \

1321 : 
	`__°rch∫ul_g
 ((
s
), 
c
)))

	)

1323 
__STRING_INLINE
 *
__°rch∫ul_c
 (c⁄° *
__s
, 
__c
);

1325 
__STRING_INLINE
 *

1326 
	$__°rch∫ul_c
 (c⁄° *
__s
, 
__c
)

1328 
__d0
;

1329 *
__ªs
;

1330 
__asm__
 
__vﬁ©ûe__


1340 : "Ù" (
__ªs
), "=&a" (
__d0
)

1341 : "0" (
__s
), "1" (
__c
),

1342 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1344  
__ªs
;

1345 
	}
}

1347 
__STRING_INLINE
 *
__°rch∫ul_g
 (c⁄° *
__s
, 
__c
);

1349 
__STRING_INLINE
 *

1350 
	$__°rch∫ul_g
 (c⁄° *
__s
, 
__c
)

1352 
__d0
;

1353 *
__ªs
;

1354 
__asm__
 
__vﬁ©ûe__


1365 : "Ù" (
__ªs
), "=&a" (
__d0
)

1366 : "0" (
__s
), "1" (
__c
),

1367 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1369  
__ªs
;

1370 
	}
}

1371 #ifde‡
__USE_GNU


1372 
	#°rch∫ul
(
s
, 
c
Ë
	`__°rch∫ul
 ((s), (c))

	)

1376 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1378 
	#_HAVE_STRING_ARCH_ödex
 1

	)

1379 
	#ödex
(
s
, 
c
) \

1380 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1381 ? 
	`__°rchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1382 : 
	`__°rchr_g
 ((
s
), (
c
))))

	)

1387 
	#_HAVE_STRING_ARCH_°ºchr
 1

	)

1388 
	#°ºchr
(
s
, 
c
) \

1389 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1390 ? 
	`__°ºchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1391 : 
	`__°ºchr_g
 ((
s
), (
c
))))

	)

1393 #ifde‡
__i686__


1394 
__STRING_INLINE
 *
__°ºchr_c
 (c⁄° *
__s
, 
__c
);

1396 
__STRING_INLINE
 *

1397 
	$__°ºchr_c
 (c⁄° *
__s
, 
__c
)

1399 
__d0
, 
__d1
;

1400 *
__ªs
;

1401 
__asm__
 
__vﬁ©ûe__


1409 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1410 : "0" (1), "1" (
__s
), "2" (
__c
),

1411 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1413  
__ªs
 - 1;

1414 
	}
}

1416 
__STRING_INLINE
 *
__°ºchr_g
 (c⁄° *
__s
, 
__c
);

1418 
__STRING_INLINE
 *

1419 
	$__°ºchr_g
 (c⁄° *
__s
, 
__c
)

1421 
__d0
, 
__d1
;

1422 *
__ªs
;

1423 
__asm__
 
__vﬁ©ûe__


1432 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1433 : "0" (1), "1" (
__s
), "2" (
__c
),

1434 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1436  
__ªs
 - 1;

1437 
	}
}

1439 
__STRING_INLINE
 *
__°ºchr_c
 (c⁄° *
__s
, 
__c
);

1441 
__STRING_INLINE
 *

1442 
	$__°ºchr_c
 (c⁄° *
__s
, 
__c
)

1444 
__d0
, 
__d1
;

1445 *
__ªs
;

1446 
__asm__
 
__vﬁ©ûe__


1456 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1457 : "0" (0), "1" (
__s
), "2" (
__c
),

1458 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1460  
__ªs
;

1461 
	}
}

1463 
__STRING_INLINE
 *
__°ºchr_g
 (c⁄° *
__s
, 
__c
);

1465 
__STRING_INLINE
 *

1466 
	$__°ºchr_g
 (c⁄° *
__s
, 
__c
)

1468 
__d0
, 
__d1
;

1469 *
__ªs
;

1470 
__asm__
 
__vﬁ©ûe__


1481 : "Ù" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1482 : "0" (0), "1" (
__s
), "2" (
__c
),

1483 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1485  
__ªs
;

1486 
	}
}

1490 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1492 
	#_HAVE_STRING_ARCH_rödex
 1

	)

1493 
	#rödex
(
s
, 
c
) \

1494 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1495 ? 
	`__°ºchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1496 : 
	`__°ºchr_g
 ((
s
), (
c
))))

	)

1502 
	#_HAVE_STRING_ARCH_°rc•n
 1

	)

1503 
	#°rc•n
(
s
, 
ªje˘
) \

1504 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
) &&  ((reject)[0]) == 1 \

1505 ? ((
ªje˘
)[0] == '\0' \

1506 ? 
	`°æí
 (
s
) \

1507 : ((
ªje˘
)[1] == '\0' \

1508 ? 
	`__°rc•n_c1
 ((
s
), (((
ªje˘
)[0] << 8) & 0xff00)) \

1509 : 
	`__°rc•n_cg
 ((
s
), (
ªje˘
), 
	`°æí
 (reject)))) \

1510 : 
	`__°rc•n_g
 ((
s
), (
ªje˘
))))

	)

1512 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (c⁄° *
__s
, 
__ªje˘
);

1514 #i‚de‡
_FORCE_INLINES


1515 
__STRING_INLINE
 
size_t


1516 
	$__°rc•n_c1
 (c⁄° *
__s
, 
__ªje˘
)

1518 
__d0
;

1519 *
__ªs
;

1520 
__asm__
 
__vﬁ©ûe__


1529 : "Ù" (
__ªs
), "=&a" (
__d0
)

1530 : "0" (
__s
), "1" (
__ªje˘
),

1531 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1533  (
__ªs
 - 1Ë- 
__s
;

1534 
	}
}

1537 
__STRING_INLINE
 
size_t
 
__°rc•n_cg
 (c⁄° *
__s
, c⁄° 
__ªje˘
[],

1538 
size_t
 
__ªje˘_Àn
);

1540 
__STRING_INLINE
 
size_t


1541 
	$__°rc•n_cg
 (c⁄° *
__s
, c⁄° 
__ªje˘
[], 
size_t
 
__ªje˘_Àn
)

1543 
__d0
, 
__d1
, 
__d2
;

1544 c⁄° *
__ªs
;

1545 
__asm__
 
__vﬁ©ûe__


1556 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1557 : "0" (
__s
), "d" (
__ªje˘
), "g" (
__ªje˘_Àn
)

1559  (
__ªs
 - 1Ë- 
__s
;

1560 
	}
}

1562 
__STRING_INLINE
 
size_t
 
__°rc•n_g
 (c⁄° *
__s
, c⁄° *
__ªje˘
);

1563 #ifde‡
__PIC__


1565 
__STRING_INLINE
 
size_t


1566 
	$__°rc•n_g
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

1568 
__d0
, 
__d1
, 
__d2
;

1569 c⁄° *
__ªs
;

1570 
__asm__
 
__vﬁ©ûe__


1587 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1588 : "r" (
__ªje˘
), "0" (
__s
), "1" (0), "2" (0xffffffff)

1590  (
__ªs
 - 1Ë- 
__s
;

1591 
	}
}

1593 
__STRING_INLINE
 
size_t


1594 
	$__°rc•n_g
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

1596 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1597 c⁄° *
__ªs
;

1598 
__asm__
 
__vﬁ©ûe__


1612 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1613 : "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (
__ªje˘
), "b" (__reject)

1616  (
__ªs
 - 1Ë- 
__s
;

1617 
	}
}

1623 
	#_HAVE_STRING_ARCH_°r•n
 1

	)

1624 
	#°r•n
(
s
, 
ac˚±
) \

1625 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
) &&  ((accept)[0]) == 1 \

1626 ? ((
ac˚±
)[0] == '\0' \

1627 ? ((Ë(
s
), 0) \

1628 : ((
ac˚±
)[1] == '\0' \

1629 ? 
	`__°r•n_c1
 ((
s
), (((
ac˚±
)[0] << 8 ) & 0xff00)) \

1630 : 
	`__°r•n_cg
 ((
s
), (
ac˚±
), 
	`°æí
 (accept)))) \

1631 : 
	`__°r•n_g
 ((
s
), (
ac˚±
))))

	)

1633 #i‚de‡
_FORCE_INLINES


1634 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (c⁄° *
__s
, 
__ac˚±
);

1636 
__STRING_INLINE
 
size_t


1637 
	$__°r•n_c1
 (c⁄° *
__s
, 
__ac˚±
)

1639 
__d0
;

1640 *
__ªs
;

1642 
__asm__
 
__vﬁ©ûe__


1648 : "Ù" (
__ªs
), "=&q" (
__d0
)

1649 : "0" (
__s
), "1" (
__ac˚±
),

1650 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1652  (
__ªs
 - 1Ë- 
__s
;

1653 
	}
}

1656 
__STRING_INLINE
 
size_t
 
__°r•n_cg
 (c⁄° *
__s
, c⁄° 
__ac˚±
[],

1657 
size_t
 
__ac˚±_Àn
);

1659 
__STRING_INLINE
 
size_t


1660 
	$__°r•n_cg
 (c⁄° *
__s
, c⁄° 
__ac˚±
[], 
size_t
 
__ac˚±_Àn
)

1662 
__d0
, 
__d1
, 
__d2
;

1663 c⁄° *
__ªs
;

1664 
__asm__
 
__vﬁ©ûe__


1675 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1676 : "0" (
__s
), "g" (
__ac˚±
), "g" (
__ac˚±_Àn
),

1679 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
),

1680 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__ac˚±_Àn
]; } *)
__ac˚±
)

1682  (
__ªs
 - 1Ë- 
__s
;

1683 
	}
}

1685 
__STRING_INLINE
 
size_t
 
__°r•n_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
);

1686 #ifde‡
__PIC__


1688 
__STRING_INLINE
 
size_t


1689 
	$__°r•n_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

1691 
__d0
, 
__d1
, 
__d2
;

1692 c⁄° *
__ªs
;

1693 
__asm__
 
__vﬁ©ûe__


1709 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1710 : "d" (
__ac˚±
), "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (__accept)

1712  (
__ªs
 - 1Ë- 
__s
;

1713 
	}
}

1715 
__STRING_INLINE
 
size_t


1716 
	$__°r•n_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

1718 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1719 c⁄° *
__ªs
;

1720 
__asm__
 
__vﬁ©ûe__


1734 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1735 : "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (
__ac˚±
), "b" (__accept)

1737  (
__ªs
 - 1Ë- 
__s
;

1738 
	}
}

1743 
	#_HAVE_STRING_ARCH_°Ωbrk
 1

	)

1744 
	#°Ωbrk
(
s
, 
ac˚±
) \

1745 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
) &&  ((accept)[0]) == 1 \

1746 ? ((
ac˚±
)[0] == '\0' \

1747 ? ((Ë(
s
), (*) 0) \

1748 : ((
ac˚±
)[1] == '\0' \

1749 ? 
	`°rchr
 ((
s
), (
ac˚±
)[0]) \

1750 : 
	`__°Ωbrk_cg
 ((
s
), (
ac˚±
), 
	`°æí
 (accept)))) \

1751 : 
	`__°Ωbrk_g
 ((
s
), (
ac˚±
))))

	)

1753 
__STRING_INLINE
 *
__°Ωbrk_cg
 (c⁄° *
__s
, c⁄° 
__ac˚±
[],

1754 
size_t
 
__ac˚±_Àn
);

1756 
__STRING_INLINE
 *

1757 
	$__°Ωbrk_cg
 (c⁄° *
__s
, c⁄° 
__ac˚±
[], 
size_t
 
__ac˚±_Àn
)

1759 
__d0
, 
__d1
, 
__d2
;

1760 *
__ªs
;

1761 
__asm__
 
__vﬁ©ûe__


1776 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1777 : "0" (
__s
), "d" (
__ac˚±
), "g" (
__ac˚±_Àn
)

1779  
__ªs
;

1780 
	}
}

1782 
__STRING_INLINE
 *
__°Ωbrk_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
);

1783 #ifde‡
__PIC__


1785 
__STRING_INLINE
 *

1786 
	$__°Ωbrk_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

1788 
__d0
, 
__d1
, 
__d2
;

1789 *
__ªs
;

1790 
__asm__
 
__vﬁ©ûe__


1811 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1812 : "d" (
__ac˚±
), "0" (
__s
), "1" (0), "2" (0xffffffff)

1814  
__ªs
;

1815 
	}
}

1817 
__STRING_INLINE
 *

1818 
	$__°Ωbrk_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

1820 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1821 *
__ªs
;

1822 
__asm__
 
__vﬁ©ûe__


1841 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&d" (
__d2
), "=&D" (
__d3
)

1842 : "0" (
__s
), "1" (0), "2" (0xffffffff), "b" (
__ac˚±
)

1844  
__ªs
;

1845 
	}
}

1850 
	#_HAVE_STRING_ARCH_°r°r
 1

	)

1851 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1852 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
) &&  ((needle)[0]) == 1 \

1853 ? ((
√edÀ
)[0] == '\0' \

1854 ? (
hay°ack
) \

1855 : ((
√edÀ
)[1] == '\0' \

1856 ? 
	`°rchr
 ((
hay°ack
), (
√edÀ
)[0]) \

1857 : 
	`__°r°r_cg
 ((
hay°ack
), (
√edÀ
), \

1858 
	`°æí
 (
√edÀ
)))) \

1859 : 
	`__°r°r_g
 ((
hay°ack
), (
√edÀ
))))

	)

1863 
__STRING_INLINE
 *
__°r°r_cg
 (c⁄° *
__hay°ack
,

1864 c⁄° 
__√edÀ
[],

1865 
size_t
 
__√edÀ_Àn
);

1867 
__STRING_INLINE
 *

1868 
	$__°r°r_cg
 (c⁄° *
__hay°ack
, c⁄° 
__√edÀ
[],

1869 
size_t
 
__√edÀ_Àn
)

1871 
__d0
, 
__d1
, 
__d2
;

1872 *
__ªs
;

1873 
__asm__
 
__vﬁ©ûe__


1886 : "=&a" (
__ªs
), "=&S" (
__d0
), "=&D" (
__d1
), "=&c" (
__d2
)

1887 : "g" (
__√edÀ_Àn
), "1" (
__hay°ack
), "d" (
__√edÀ
)

1889  
__ªs
;

1890 
	}
}

1892 
__STRING_INLINE
 *
__°r°r_g
 (c⁄° *
__hay°ack
,

1893 c⁄° *
__√edÀ
);

1894 #ifde‡
__PIC__


1896 
__STRING_INLINE
 *

1897 
	$__°r°r_g
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

1899 
__d0
, 
__d1
, 
__d2
;

1900 *
__ªs
;

1901 
__asm__
 
__vﬁ©ûe__


1920 : "=&a" (
__ªs
), "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
)

1921 : "0" (0), "1" (0xffffffff), "2" (
__hay°ack
), "3" (
__√edÀ
),

1922 "d" (
__√edÀ
)

1924  
__ªs
;

1925 
	}
}

1927 
__STRING_INLINE
 *

1928 
	$__°r°r_g
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

1930 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1931 *
__ªs
;

1932 
__asm__
 
__vﬁ©ûe__


1949 : "=&a" (
__ªs
), "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1950 : "0" (0), "1" (0xffffffff), "2" (
__hay°ack
), "3" (
__√edÀ
),

1951 "b" (
__√edÀ
)

1953  
__ªs
;

1954 
	}
}

1960 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1961 #ifde‡
__i686__


1962 
	#_HAVE_STRING_ARCH_ffs
 1

	)

1963 
	#ffs
(
w‹d
Ë(
	`__buûtö_c⁄°™t_p
 (word) \

1964 ? 
	`__buûtö_ffs
 (
w‹d
) \

1965 : ({ 
__˙t
, 
__tmp
; \

1966 
__asm__
 
__vﬁ©ûe__
 \

1969 : "=&r" (
__˙t
), "Ù" (
__tmp
) \

1970 : "rm" (
w‹d
), "1" (-1)); \

1971 
__˙t
 + 1; }))

	)

1973 #i‚de‡
ff¶


1974 
	#ff¶
(
w‹d
Ë
	`ffs
(w‹d)

	)

1979 #i‚de‡
_FORCE_INLINES


1980 #unde‡
__STRING_INLINE


	@/usr/include/bits/string2.h

20 #i‚de‡
_STRING_H


24 #i‚de‡
__NO_STRING_INLINES


41 #i‚de‡
__STRING_INLINE


42 #ifde‡
__˝lu•lus


43 
	#__STRING_INLINE
 
ölöe


	)

45 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

49 #i‡
_STRING_ARCH_u«lig√d


51 
	~<ídün.h
>

52 
	~<bôs/ty≥s.h
>

54 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


55 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

56 (((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 1] << 8 \

57 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
])

	)

58 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

59 (((((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

60 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

61 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

62 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
])

	)

64 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

65 (((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
] << 8 \

66 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 1])

	)

67 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

68 (((((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
] << 8 \

69 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

70 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

71 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 3])

	)

76 
	#__STRING2_COPY_TYPE
(
N
) \

77 °ru˘ { 
__¨r
[
N
]; } \

78 
	t__©åibuã__
 ((
	t__∑cked__
)Ë
	t__STRING2_COPY_ARR
##
	tN


	)

79 
	t__STRING2_COPY_TYPE
 (2);

80 
__STRING2_COPY_TYPE
 (3);

81 
__STRING2_COPY_TYPE
 (4);

82 
__STRING2_COPY_TYPE
 (5);

83 
__STRING2_COPY_TYPE
 (6);

84 
__STRING2_COPY_TYPE
 (7);

85 
__STRING2_COPY_TYPE
 (8);

86 #unde‡
__STRING2_COPY_TYPE


92 
	#__°rög2_1b±r_p
(
__x
) \

93 ((
size_t
)(c⁄° *)((
__x
Ë+ 1Ë- (size_t)(c⁄° *)(__xË=1)

	)

96 #i‡!
deföed
 
_HAVE_STRING_ARCH_mem£t


97 #i‡!
__GNUC_PREREQ
 (3, 0)

98 #i‡
_STRING_ARCH_u«lig√d


99 
	#mem£t
(
s
, 
c
, 
n
) \

100 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

101 ? ((
n
) == 1 \

102 ? 
	`__mem£t_1
 (
s
, 
c
) \

103 : 
	`__mem£t_gc
 (
s
, 
c
, 
n
)) \

104 : (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

105 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

106 : 
	`mem£t
 (
s
, 
c
, 
n
))))

	)

108 
	#__mem£t_1
(
s
, 
c
Ë({ *
__s
 = (s); \

109 *((
__uöt8_t
 *Ë
__s
Ë(__uöt8_tË
c
; __s; })

	)

111 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

112 ({ *
__s
 = (
s
); \

114 
__ui
; \

115 
__usi
; \

116 
__uc
; \

117 } *
__u
 = 
__s
; \

118 
__uöt8_t
 
__c
 = (__uöt8_tË(
c
); \

121 (Ë(
n
)) \

124 
__u
->
__ui
 = 
__c
 * 0x01010101; \

125 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

127 
__u
->
__ui
 = 
__c
 * 0x01010101; \

128 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

130 
__u
->
__ui
 = 
__c
 * 0x01010101; \

131 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

133 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

134 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

135 
__u
->
__uc
 = (Ë
__c
; \

139 
__u
->
__ui
 = 
__c
 * 0x01010101; \

140 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

142 
__u
->
__ui
 = 
__c
 * 0x01010101; \

143 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

145 
__u
->
__ui
 = 
__c
 * 0x01010101; \

146 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

148 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

152 
__u
->
__ui
 = 
__c
 * 0x01010101; \

153 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

155 
__u
->
__ui
 = 
__c
 * 0x01010101; \

156 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

158 
__u
->
__ui
 = 
__c
 * 0x01010101; \

159 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

161 
__u
->
__uc
 = (Ë
__c
; \

165 
__u
->
__ui
 = 
__c
 * 0x01010101; \

166 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

168 
__u
->
__ui
 = 
__c
 * 0x01010101; \

169 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

171 
__u
->
__ui
 = 
__c
 * 0x01010101; \

172 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

174 
__u
->
__ui
 = 
__c
 * 0x01010101; \

179 
__s
; })

	)

181 
	#mem£t
(
s
, 
c
, 
n
) \

182 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

183 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

184 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

193 #i‡
__GNUC_PREREQ
 (2, 91)

194 
	#__bzîo
(
s
, 
n
Ë
	`__buûtö_mem£t
 (s, '\0',Ç)

	)

202 #ifde‡
__USE_GNU


203 #i‡!
deföed
 
_HAVE_STRING_ARCH_memp˝y
 || deföed 
_FORCE_INLINES


204 #i‚de‡
_HAVE_STRING_ARCH_memp˝y


205 #i‡
__GNUC_PREREQ
 (3, 4)

206 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_memp˝y
 (de°, src,Ç)

	)

207 #ñi‡
__GNUC_PREREQ
 (3, 0)

208 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

209 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

210 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

211 ? 
	`__buûtö_mem˝y
 (
de°
, 
§c
, 
n
) + (n) \

212 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

214 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

215 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

216 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

217 ? 
	`__memp˝y_smÆl
 (
de°
, 
	`__memp˝y_¨gs
 (
§c
), 
n
) \

218 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

222 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y
 (de°, src,Ç)

	)

225 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


226 #i‡
_STRING_ARCH_u«lig√d


227 #i‚de‡
_FORCE_INLINES


228 
	#__memp˝y_¨gs
(
§c
) \

229 ((c⁄° *Ë(
§c
))[0], ((const *) (src))[2], \

230 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[6], \

231 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

232 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

233 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

234 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

236 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , , , ,

237 
__uöt16_t
, __uöt16_t, 
__uöt32_t
,

238 
__uöt32_t
, 
size_t
);

239 
__STRING_INLINE
 *

240 
	$__memp˝y_smÆl
 (*
__de°1
,

241 
__§c0_1
, 
__§c2_1
, 
__§c4_1
, 
__§c6_1
,

242 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

243 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

244 
size_t
 
__§˛í
)

247 
__uöt32_t
 
__ui
;

248 
__uöt16_t
 
__usi
;

249 
__uc
;

250 
__c
;

251 } *
__u
 = 
__de°1
;

252 (Ë
__§˛í
)

255 
__u
->
__c
 = 
__§c0_1
;

256 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

259 
__u
->
__usi
 = 
__§c0_2
;

260 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

263 
__u
->
__usi
 = 
__§c0_2
;

264 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

265 
__u
->
__c
 = 
__§c2_1
;

266 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

269 
__u
->
__ui
 = 
__§c0_4
;

270 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

273 
__u
->
__ui
 = 
__§c0_4
;

274 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

275 
__u
->
__c
 = 
__§c4_1
;

276 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

279 
__u
->
__ui
 = 
__§c0_4
;

280 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

281 
__u
->
__usi
 = 
__§c4_2
;

282 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

285 
__u
->
__ui
 = 
__§c0_4
;

286 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

287 
__u
->
__usi
 = 
__§c4_2
;

288 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

289 
__u
->
__c
 = 
__§c6_1
;

290 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

293 
__u
->
__ui
 = 
__§c0_4
;

294 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

295 
__u
->
__ui
 = 
__§c4_4
;

296 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

299  (*Ë
__u
;

300 
	}
}

302 #i‚de‡
_FORCE_INLINES


303 
	#__memp˝y_¨gs
(
§c
) \

304 ((c⁄° *Ë(
§c
))[0], \

305 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

306 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1] } }), \

307 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

308 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

309 ((c⁄° *Ë(
§c
))[2] } }), \

310 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

311 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

312 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3] } }), \

313 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

314 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

315 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

316 ((c⁄° *Ë(
§c
))[4] } }), \

317 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

318 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

319 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

320 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5] } }), \

321 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

322 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

323 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

324 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

325 ((c⁄° *Ë(
§c
))[6] } }), \

326 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

327 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

328 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

329 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

330 ((c⁄° *Ë(
§c
))[6], ((c⁄° *Ë(§c))[7] } })

	)

332 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , 
__STRING2_COPY_ARR2
,

333 
__STRING2_COPY_ARR3
,

334 
__STRING2_COPY_ARR4
,

335 
__STRING2_COPY_ARR5
,

336 
__STRING2_COPY_ARR6
,

337 
__STRING2_COPY_ARR7
,

338 
__STRING2_COPY_ARR8
, 
size_t
);

339 
__STRING_INLINE
 *

340 
	$__memp˝y_smÆl
 (*
__de°
, 
__§c1
,

341 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

342 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

343 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

344 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

347 
__c
;

348 
__STRING2_COPY_ARR2
 
__sˇ2
;

349 
__STRING2_COPY_ARR3
 
__sˇ3
;

350 
__STRING2_COPY_ARR4
 
__sˇ4
;

351 
__STRING2_COPY_ARR5
 
__sˇ5
;

352 
__STRING2_COPY_ARR6
 
__sˇ6
;

353 
__STRING2_COPY_ARR7
 
__sˇ7
;

354 
__STRING2_COPY_ARR8
 
__sˇ8
;

355 } *
__u
 = 
__de°
;

356 (Ë
__§˛í
)

359 
__u
->
__c
 = 
__§c1
;

362 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

365 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

368 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

371 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

374 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

377 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

380 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

383  
	`__exãnsi⁄__
 ((*Ë
__u
 + 
__§˛í
);

384 
	}
}

392 #i‚de‡
_HAVE_STRING_ARCH_°rchr


393 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

394 #i‡
__GNUC_PREREQ
 (3, 2)

395 
	#°rchr
(
s
, 
c
) \

396 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
Ë&& !__buûtö_c⁄°™t_∞(
s
) \

397 && (
c
) == '\0' \

398 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

399 : 
	`__buûtö_°rchr
 (
s
, 
c
)))

	)

401 
	#°rchr
(
s
, 
c
) \

402 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

403 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

404 : 
	`°rchr
 (
s
, 
c
)))

	)

410 #i‡(!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)) \

411 || 
deföed
 
	g_FORCE_INLINES


412 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)

413 
	#°r˝y
(
de°
, 
§c
) \

414 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

415 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

416 ? 
	`__°r˝y_smÆl
 (
de°
, 
	`__°r˝y_¨gs
 (
§c
), \

417 
	`°æí
 (
§c
) + 1) \

418 : (*Ë
	`mem˝y
 (
de°
, 
§c
, 
	`°æí
 (src) + 1)) \

419 : 
	`°r˝y
 (
de°
, 
§c
)))

	)

422 #i‡
_STRING_ARCH_u«lig√d


423 #i‚de‡
_FORCE_INLINES


424 
	#__°r˝y_¨gs
(
§c
) \

425 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

426 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

427 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

428 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

430 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

431 
__uöt32_t
, __uöt32_t, 
size_t
);

432 
__STRING_INLINE
 *

433 
	$__°r˝y_smÆl
 (*
__de°
,

434 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

435 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

436 
size_t
 
__§˛í
)

439 
__uöt32_t
 
__ui
;

440 
__uöt16_t
 
__usi
;

441 
__uc
;

442 } *
__u
 = (*Ë
__de°
;

443 (Ë
__§˛í
)

446 
__u
->
__uc
 = '\0';

449 
__u
->
__usi
 = 
__§c0_2
;

452 
__u
->
__usi
 = 
__§c0_2
;

453 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

454 
__u
->
__uc
 = '\0';

457 
__u
->
__ui
 = 
__§c0_4
;

460 
__u
->
__ui
 = 
__§c0_4
;

461 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

462 
__u
->
__uc
 = '\0';

465 
__u
->
__ui
 = 
__§c0_4
;

466 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

467 
__u
->
__usi
 = 
__§c4_2
;

470 
__u
->
__ui
 = 
__§c0_4
;

471 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

472 
__u
->
__usi
 = 
__§c4_2
;

473 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

474 
__u
->
__uc
 = '\0';

477 
__u
->
__ui
 = 
__§c0_4
;

478 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

479 
__u
->
__ui
 = 
__§c4_4
;

482  
__de°
;

483 
	}
}

485 #i‚de‡
_FORCE_INLINES


486 
	#__°r˝y_¨gs
(
§c
) \

487 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

488 { { ((c⁄° *Ë(
§c
))[0], '\0' } }), \

489 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

490 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

492 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

493 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

494 ((c⁄° *Ë(
§c
))[2], '\0' } }), \

495 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

496 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

497 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

499 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

500 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

501 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

502 ((c⁄° *Ë(
§c
))[4], '\0' } }), \

503 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

504 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

505 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

506 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

508 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

509 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

510 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

511 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

512 ((c⁄° *Ë(
§c
))[6], '\0' } })

	)

514 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

515 
__STRING2_COPY_ARR3
,

516 
__STRING2_COPY_ARR4
,

517 
__STRING2_COPY_ARR5
,

518 
__STRING2_COPY_ARR6
,

519 
__STRING2_COPY_ARR7
,

520 
__STRING2_COPY_ARR8
, 
size_t
);

521 
__STRING_INLINE
 *

522 
	$__°r˝y_smÆl
 (*
__de°
,

523 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

524 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

525 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

526 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

529 
__c
;

530 
__STRING2_COPY_ARR2
 
__sˇ2
;

531 
__STRING2_COPY_ARR3
 
__sˇ3
;

532 
__STRING2_COPY_ARR4
 
__sˇ4
;

533 
__STRING2_COPY_ARR5
 
__sˇ5
;

534 
__STRING2_COPY_ARR6
 
__sˇ6
;

535 
__STRING2_COPY_ARR7
 
__sˇ7
;

536 
__STRING2_COPY_ARR8
 
__sˇ8
;

537 } *
__u
 = (*Ë
__de°
;

538 (Ë
__§˛í
)

541 
__u
->
__c
 = '\0';

544 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

547 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

550 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

553 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

556 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

559 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

562 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

565  
__de°
;

566 
	}
}

572 #ifde‡
__USE_GNU


573 #i‡!
deföed
 
_HAVE_STRING_ARCH_°p˝y
 || deföed 
_FORCE_INLINES


574 #i‚de‡
_HAVE_STRING_ARCH_°p˝y


575 #i‡
__GNUC_PREREQ
 (3, 4)

576 
	#__°p˝y
(
de°
, 
§c
Ë
	`__buûtö_°p˝y
 (de°, src)

	)

577 #ñi‡
__GNUC_PREREQ
 (3, 0)

578 
	#__°p˝y
(
de°
, 
§c
) \

579 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

580 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

581 ? 
	`__buûtö_°r˝y
 (
de°
, 
§c
Ë+ 
	`°æí
 (src) \

582 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

584 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

586 
	#__°p˝y
(
de°
, 
§c
) \

587 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

588 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

589 ? 
	`__°p˝y_smÆl
 (
de°
, 
	`__°p˝y_¨gs
 (
§c
), \

590 
	`°æí
 (
§c
) + 1) \

591 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

593 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

597 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 (de°, src)

	)

600 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


601 #i‡
_STRING_ARCH_u«lig√d


602 #i‚de‡
_FORCE_INLINES


603 
	#__°p˝y_¨gs
(
§c
) \

604 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

605 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

606 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

607 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

609 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

610 
__uöt32_t
, __uöt32_t, 
size_t
);

611 
__STRING_INLINE
 *

612 
	$__°p˝y_smÆl
 (*
__de°
,

613 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

614 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

615 
size_t
 
__§˛í
)

618 
__ui
;

619 
__usi
;

620 
__uc
;

621 
__c
;

622 } *
__u
 = (*Ë
__de°
;

623 (Ë
__§˛í
)

626 
__u
->
__uc
 = '\0';

629 
__u
->
__usi
 = 
__§c0_2
;

630 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

633 
__u
->
__usi
 = 
__§c0_2
;

634 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

635 
__u
->
__uc
 = '\0';

638 
__u
->
__ui
 = 
__§c0_4
;

639 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

642 
__u
->
__ui
 = 
__§c0_4
;

643 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

644 
__u
->
__uc
 = '\0';

647 
__u
->
__ui
 = 
__§c0_4
;

648 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

649 
__u
->
__usi
 = 
__§c4_2
;

650 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

653 
__u
->
__ui
 = 
__§c0_4
;

654 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

655 
__u
->
__usi
 = 
__§c4_2
;

656 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

657 
__u
->
__uc
 = '\0';

660 
__u
->
__ui
 = 
__§c0_4
;

661 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

662 
__u
->
__ui
 = 
__§c4_4
;

663 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

666  &
__u
->
__c
;

667 
	}
}

669 #i‚de‡
_FORCE_INLINES


670 
	#__°p˝y_¨gs
(
§c
) \

671 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

672 { { ((c⁄° *Ë(
§c
))[0], '\0' } }), \

673 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

674 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

676 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

677 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

678 ((c⁄° *Ë(
§c
))[2], '\0' } }), \

679 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

680 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

681 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

683 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

684 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

685 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

686 ((c⁄° *Ë(
§c
))[4], '\0' } }), \

687 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

688 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

689 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

690 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

692 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

693 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

694 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

695 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

696 ((c⁄° *Ë(
§c
))[6], '\0' } })

	)

698 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

699 
__STRING2_COPY_ARR3
,

700 
__STRING2_COPY_ARR4
,

701 
__STRING2_COPY_ARR5
,

702 
__STRING2_COPY_ARR6
,

703 
__STRING2_COPY_ARR7
,

704 
__STRING2_COPY_ARR8
, 
size_t
);

705 
__STRING_INLINE
 *

706 
	$__°p˝y_smÆl
 (*
__de°
,

707 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

708 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

709 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

710 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

713 
__c
;

714 
__STRING2_COPY_ARR2
 
__sˇ2
;

715 
__STRING2_COPY_ARR3
 
__sˇ3
;

716 
__STRING2_COPY_ARR4
 
__sˇ4
;

717 
__STRING2_COPY_ARR5
 
__sˇ5
;

718 
__STRING2_COPY_ARR6
 
__sˇ6
;

719 
__STRING2_COPY_ARR7
 
__sˇ7
;

720 
__STRING2_COPY_ARR8
 
__sˇ8
;

721 } *
__u
 = (*Ë
__de°
;

722 (Ë
__§˛í
)

725 
__u
->
__c
 = '\0';

728 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

731 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

734 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

737 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

740 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

743 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

746 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

749  
__de°
 + 
__§˛í
 - 1;

750 
	}
}

758 #i‚de‡
_HAVE_STRING_ARCH_°∫˝y


759 #i‡
__GNUC_PREREQ
 (3, 2)

760 
	#°∫˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫˝y
 (de°, src,Ç)

	)

762 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

763 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

764 ? (
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

765 ? (*Ë
	`mem˝y
 (
de°
, 
§c
, 
n
) \

766 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)) \

767 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)))

	)

773 #i‚de‡
_HAVE_STRING_ARCH_°∫ˇt


774 #ifde‡
_USE_STRING_ARCH_°rchr


775 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

776 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

777 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

778 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

779 ? 
	`°rˇt
 (
__de°
, 
§c
) \

780 : (*((*Ë
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

781 
§c
, 
n
)Ë'\0', 
__de°
)) \

782 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
); }))

	)

783 #ñi‡
__GNUC_PREREQ
 (3, 2)

784 
	#°∫ˇt
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫ˇt
 (de°, src,Ç)

	)

786 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

787 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

788 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

789 ? 
	`°rˇt
 (
de°
, 
§c
) \

790 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)) \

791 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)))

	)

797 #i‚de‡
_HAVE_STRING_ARCH_°rcmp


798 #i‡
__GNUC_PREREQ
 (3, 2)

799 
	#°rcmp
(
s1
, 
s2
) \

800 
__exãnsi⁄__
 \

801 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

802 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

803 && (
__s1_Àn
 = 
	`__buûtö_°æí
 (
s1
), 
__s2_Àn
 = __buûtö_°æí (
s2
), \

804 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

805 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

806 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

807 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

808 && (
__s1_Àn
 = 
	`__buûtö_°æí
 (
s1
), __s1_len < 4) \

809 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

810 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

811 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

812 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

813 && (
__s2_Àn
 = 
	`__buûtö_°æí
 (
s2
), __s2_len < 4) \

814 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

815 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

816 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

817 : 
	`__buûtö_°rcmp
 (
s1
, 
s2
)))); })

	)

819 
	#°rcmp
(
s1
, 
s2
) \

820 
__exãnsi⁄__
 \

821 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

822 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

823 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

824 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

825 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

826 ? 
	`memcmp
 ((c⁄° *Ë(
s1
), (c⁄° *Ë(
s2
), \

827 (
__s1_Àn
 < 
__s2_Àn
 ? __s1_len : __s2_len) + 1) \

828 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

829 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

830 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

831 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s1_Àn
) \

832 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

833 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

834 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

835 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

836 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s2_Àn
) \

837 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

838 : 
	`°rcmp
 (
s1
, 
s2
)))); })

	)

841 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

842 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = \

843 (((c⁄° *Ë(c⁄° *Ë(
s1
))[0] \

844 - ((c⁄° *Ë(c⁄° *)(
s2
))[0]); \

845 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

847 
__ªsu…
 = (((const *) \

848 (c⁄° *Ë(
s1
))[1] \

850 (c⁄° *Ë(
s2
))[1]); \

851 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

853 
__ªsu…
 = \

855 (c⁄° *Ë(
s1
))[2] \

857 (c⁄° *Ë(
s2
))[2]); \

858 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

859 
__ªsu…
 = \

861 (c⁄° *Ë(
s1
))[3] \

863 (c⁄° *Ë(
s2
))[3]); \

866 
__ªsu…
; }))

	)

868 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

869 (
	`__exãnsi⁄__
 ({ c⁄° *
__s2
 = \

870 (c⁄° *Ë(c⁄° *Ë(
s2
); \

871 
__ªsu…
 = \

872 (((c⁄° *Ë(c⁄° *Ë(
s1
))[0] \

873 - 
__s2
[0]); \

874 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

876 
__ªsu…
 = (((const *) \

877 (c⁄° *Ë(
s1
))[1] - 
__s2
[1]); \

878 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

880 
__ªsu…
 = (((const *) \

881 (c⁄° *Ë(
s1
))[2] - 
__s2
[2]); \

882 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

883 
__ªsu…
 = (((const *) \

884 (c⁄° *Ë(
s1
))[3] \

885 - 
__s2
[3]); \

888 
__ªsu…
; }))

	)

890 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
Ë(- 
	`__°rcmp_cg
 (s2, s1,Ü2))

	)

895 #i‚de‡
_HAVE_STRING_ARCH_°∫cmp


896 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

897 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

898 && ((
	`__buûtö_c⁄°™t_p
 (
s1
) \

899 && 
	`°æí
 (
s1
Ë< ((
size_t
Ë(
n
))) \

900 || (
	`__buûtö_c⁄°™t_p
 (
s2
) \

901 && 
	`°æí
 (
s2
Ë< ((
size_t
Ë(
n
)))) \

902 ? 
	`°rcmp
 (
s1
, 
s2
Ë: 
	`°∫cmp
 (s1, s2, 
n
)))

	)

908 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rc•n
 || deföed 
_FORCE_INLINES


909 #i‚de‡
_HAVE_STRING_ARCH_°rc•n


910 #i‡
__GNUC_PREREQ
 (3, 2)

911 
	#°rc•n
(
s
, 
ªje˘
) \

912 
__exãnsi⁄__
 \

913 ({ 
__r0
, 
__r1
, 
__r2
; \

914 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

915 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

916 ? 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
) \

917 : ((
__r0
 = ((c⁄° *Ë(
ªje˘
))[0], __r0 == '\0') \

918 ? 
	`°æí
 (
s
) \

919 : ((
__r1
 = ((c⁄° *Ë(
ªje˘
))[1], __r1 == '\0') \

920 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

921 : ((
__r2
 = ((c⁄° *Ë(
ªje˘
))[2], __r2 == '\0') \

922 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

923 : (((c⁄° *Ë(
ªje˘
))[3] == '\0' \

924 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

925 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)))))) \

926 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)); })

	)

928 
	#°rc•n
(
s
, 
ªje˘
) \

929 
__exãnsi⁄__
 \

930 ({ 
__r0
, 
__r1
, 
__r2
; \

931 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

932 ? ((
__r0
 = ((c⁄° *Ë(
ªje˘
))[0], __r0 == '\0') \

933 ? 
	`°æí
 (
s
) \

934 : ((
__r1
 = ((c⁄° *Ë(
ªje˘
))[1], __r1 == '\0') \

935 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

936 : ((
__r2
 = ((c⁄° *Ë(
ªje˘
))[2], __r2 == '\0') \

937 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

938 : (((c⁄° *Ë(
ªje˘
))[3] == '\0' \

939 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

940 : 
	`°rc•n
 (
s
, 
ªje˘
))))) \

941 : 
	`°rc•n
 (
s
, 
ªje˘
)); })

	)

945 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (c⁄° *
__s
, 
__ªje˘
);

946 
__STRING_INLINE
 
size_t


947 
	$__°rc•n_c1
 (c⁄° *
__s
, 
__ªje˘
)

949 
size_t
 
__ªsu…
 = 0;

950 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘
)

951 ++
__ªsu…
;

952  
__ªsu…
;

953 
	}
}

955 
__STRING_INLINE
 
size_t
 
__°rc•n_c2
 (c⁄° *
__s
, 
__ªje˘1
,

956 
__ªje˘2
);

957 
__STRING_INLINE
 
size_t


958 
	$__°rc•n_c2
 (c⁄° *
__s
, 
__ªje˘1
, 
__ªje˘2
)

960 
size_t
 
__ªsu…
 = 0;

961 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


962 && 
__s
[
__ªsu…
] !
__ªje˘2
)

963 ++
__ªsu…
;

964  
__ªsu…
;

965 
	}
}

967 
__STRING_INLINE
 
size_t
 
__°rc•n_c3
 (c⁄° *
__s
, 
__ªje˘1
,

968 
__ªje˘2
, 
__ªje˘3
);

969 
__STRING_INLINE
 
size_t


970 
	$__°rc•n_c3
 (c⁄° *
__s
, 
__ªje˘1
, 
__ªje˘2
,

971 
__ªje˘3
)

973 
size_t
 
__ªsu…
 = 0;

974 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


975 && 
__s
[
__ªsu…
] !
__ªje˘2
 && __s[__ªsu…] !
__ªje˘3
)

976 ++
__ªsu…
;

977  
__ªsu…
;

978 
	}
}

984 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r•n
 || deföed 
_FORCE_INLINES


985 #i‚de‡
_HAVE_STRING_ARCH_°r•n


986 #i‡
__GNUC_PREREQ
 (3, 2)

987 
	#°r•n
(
s
, 
ac˚±
) \

988 
__exãnsi⁄__
 \

989 ({ 
__a0
, 
__a1
, 
__a2
; \

990 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

991 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

992 ? 
	`__buûtö_°r•n
 (
s
, 
ac˚±
) \

993 : ((
__a0
 = ((c⁄° *Ë(
ac˚±
))[0], __a0 == '\0') \

994 ? ((Ë(
s
), (
size_t
) 0) \

995 : ((
__a1
 = ((c⁄° *Ë(
ac˚±
))[1], __a1 == '\0') \

996 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

997 : ((
__a2
 = ((c⁄° *Ë(
ac˚±
))[2], __a2 == '\0') \

998 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

999 : (((c⁄° *Ë(
ac˚±
))[3] == '\0' \

1000 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1001 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)))))) \

1002 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)); })

	)

1004 
	#°r•n
(
s
, 
ac˚±
) \

1005 
__exãnsi⁄__
 \

1006 ({ 
__a0
, 
__a1
, 
__a2
; \

1007 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1008 ? ((
__a0
 = ((c⁄° *Ë(
ac˚±
))[0], __a0 == '\0') \

1009 ? ((Ë(
s
), (
size_t
) 0) \

1010 : ((
__a1
 = ((c⁄° *Ë(
ac˚±
))[1], __a1 == '\0') \

1011 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1012 : ((
__a2
 = ((c⁄° *Ë(
ac˚±
))[2], __a2 == '\0') \

1013 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1014 : (((c⁄° *Ë(
ac˚±
))[3] == '\0' \

1015 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1016 : 
	`°r•n
 (
s
, 
ac˚±
))))) \

1017 : 
	`°r•n
 (
s
, 
ac˚±
)); })

	)

1021 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (c⁄° *
__s
, 
__ac˚±
);

1022 
__STRING_INLINE
 
size_t


1023 
	$__°r•n_c1
 (c⁄° *
__s
, 
__ac˚±
)

1025 
size_t
 
__ªsu…
 = 0;

1027 
__s
[
__ªsu…
] =
__ac˚±
)

1028 ++
__ªsu…
;

1029  
__ªsu…
;

1030 
	}
}

1032 
__STRING_INLINE
 
size_t
 
__°r•n_c2
 (c⁄° *
__s
, 
__ac˚±1
,

1033 
__ac˚±2
);

1034 
__STRING_INLINE
 
size_t


1035 
	$__°r•n_c2
 (c⁄° *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1037 
size_t
 
__ªsu…
 = 0;

1039 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2
)

1040 ++
__ªsu…
;

1041  
__ªsu…
;

1042 
	}
}

1044 
__STRING_INLINE
 
size_t
 
__°r•n_c3
 (c⁄° *
__s
, 
__ac˚±1
,

1045 
__ac˚±2
, 
__ac˚±3
);

1046 
__STRING_INLINE
 
size_t


1047 
	$__°r•n_c3
 (c⁄° *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1049 
size_t
 
__ªsu…
 = 0;

1051 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2


1052 || 
__s
[
__ªsu…
] =
__ac˚±3
)

1053 ++
__ªsu…
;

1054  
__ªsu…
;

1055 
	}
}

1060 #i‡!
deföed
 
_HAVE_STRING_ARCH_°Ωbrk
 || deföed 
_FORCE_INLINES


1061 #i‚de‡
_HAVE_STRING_ARCH_°Ωbrk


1062 #i‡
__GNUC_PREREQ
 (3, 2)

1063 
	#°Ωbrk
(
s
, 
ac˚±
) \

1064 
__exãnsi⁄__
 \

1065 ({ 
__a0
, 
__a1
, 
__a2
; \

1066 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1067 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1068 ? 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
) \

1069 : ((
__a0
 = ((c⁄° *Ë(
ac˚±
))[0], __a0 == '\0') \

1070 ? ((Ë(
s
), (*Ë
NULL
) \

1071 : ((
__a1
 = ((c⁄° *Ë(
ac˚±
))[1], __a1 == '\0') \

1072 ? 
	`__buûtö_°rchr
 (
s
, 
__a0
) \

1073 : ((
__a2
 = ((c⁄° *Ë(
ac˚±
))[2], __a2 == '\0') \

1074 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1075 : (((c⁄° *Ë(
ac˚±
))[3] == '\0' \

1076 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1077 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)))))) \

1078 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1080 
	#°Ωbrk
(
s
, 
ac˚±
) \

1081 
__exãnsi⁄__
 \

1082 ({ 
__a0
, 
__a1
, 
__a2
; \

1083 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1084 ? ((
__a0
 = ((c⁄° *Ë(
ac˚±
))[0], __a0 == '\0') \

1085 ? ((Ë(
s
), (*Ë
NULL
) \

1086 : ((
__a1
 = ((c⁄° *Ë(
ac˚±
))[1], __a1 == '\0') \

1087 ? 
	`°rchr
 (
s
, 
__a0
) \

1088 : ((
__a2
 = ((c⁄° *Ë(
ac˚±
))[2], __a2 == '\0') \

1089 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1090 : (((c⁄° *Ë(
ac˚±
))[3] == '\0' \

1091 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1092 : 
	`°Ωbrk
 (
s
, 
ac˚±
))))) \

1093 : 
	`°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1097 
__STRING_INLINE
 *
__°Ωbrk_c2
 (c⁄° *
__s
, 
__ac˚±1
,

1098 
__ac˚±2
);

1099 
__STRING_INLINE
 *

1100 
	$__°Ωbrk_c2
 (c⁄° *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1103 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2
)

1104 ++
__s
;

1105  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1106 
	}
}

1108 
__STRING_INLINE
 *
__°Ωbrk_c3
 (c⁄° *
__s
, 
__ac˚±1
,

1109 
__ac˚±2
, 
__ac˚±3
);

1110 
__STRING_INLINE
 *

1111 
	$__°Ωbrk_c3
 (c⁄° *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1114 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2


1115 && *
__s
 !
__ac˚±3
)

1116 ++
__s
;

1117  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1118 
	}
}

1124 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r°r
 && !
__GNUC_PREREQ
 (2, 97)

1125 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1126 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
Ë&& 
	`__°rög2_1b±r_p
 (needle) \

1127 ? (((c⁄° *Ë(
√edÀ
))[0] == '\0' \

1128 ? (*Ë(
size_t
Ë(
hay°ack
) \

1129 : (((c⁄° *Ë(
√edÀ
))[1] == '\0' \

1130 ? 
	`°rchr
 (
hay°ack
, \

1131 ((c⁄° *Ë(
√edÀ
))[0]) \

1132 : 
	`°r°r
 (
hay°ack
, 
√edÀ
))) \

1133 : 
	`°r°r
 (
hay°ack
, 
√edÀ
)))

	)

1137 #i‡!
deföed
 
_HAVE_STRING_ARCH_°πok_r
 || deföed 
_FORCE_INLINES


1138 #i‚de‡
_HAVE_STRING_ARCH_°πok_r


1139 
	#__°πok_r
(
s
, 
£p
, 
√xç
) \

1140 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
£p
Ë&& 
	`__°rög2_1b±r_p
 (sep) \

1141 && ((c⁄° *Ë(
£p
))[0] != '\0' \

1142 && ((c⁄° *Ë(
£p
))[1] == '\0' \

1143 ? 
	`__°πok_r_1c
 (
s
, ((c⁄° *Ë(
£p
))[0], 
√xç
) \

1144 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)))

	)

1147 
__STRING_INLINE
 *
__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
);

1148 
__STRING_INLINE
 *

1149 
	$__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
)

1151 *
__ªsu…
;

1152 i‡(
__s
 =
NULL
)

1153 
__s
 = *
__√xç
;

1154 *
__s
 =
__£p
)

1155 ++
__s
;

1156 
__ªsu…
 = 
NULL
;

1157 i‡(*
__s
 != '\0')

1159 
__ªsu…
 = 
__s
++;

1160 *
__s
 != '\0')

1161 i‡(*
__s
++ =
__£p
)

1163 
__s
[-1] = '\0';

1167 *
__√xç
 = 
__s
;

1168  
__ªsu…
;

1169 
	}
}

1170 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


1171 
	#°πok_r
(
s
, 
£p
, 
√xç
Ë
	`__°πok_r
 (s, sï,Çexç)

	)

1176 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r£p
 || deföed 
_FORCE_INLINES


1177 #i‚de‡
_HAVE_STRING_ARCH_°r£p


1179 *
__°r£p_g
 (**
__°rögp
, c⁄° *
__dñim
);

1180 
	#__°r£p
(
s
, 
ªje˘
) \

1181 
__exãnsi⁄__
 \

1182 ({ 
__r0
, 
__r1
, 
__r2
; \

1183 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

1184 && (
__r0
 = ((c⁄° *Ë(
ªje˘
))[0], \

1185 ((c⁄° *Ë(
ªje˘
))[0] != '\0') \

1186 ? ((
__r1
 = ((c⁄° *Ë(
ªje˘
))[1], \

1187 ((c⁄° *Ë(
ªje˘
))[1] == '\0') \

1188 ? 
	`__°r£p_1c
 (
s
, 
__r0
) \

1189 : ((
__r2
 = ((c⁄° *Ë(
ªje˘
))[2], __r2 == '\0') \

1190 ? 
	`__°r£p_2c
 (
s
, 
__r0
, 
__r1
) \

1191 : (((c⁄° *Ë(
ªje˘
))[3] == '\0' \

1192 ? 
	`__°r£p_3c
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

1193 : 
	`__°r£p_g
 (
s
, 
ªje˘
)))) \

1194 : 
	`__°r£p_g
 (
s
, 
ªje˘
)); })

	)

1197 
__STRING_INLINE
 *
__°r£p_1c
 (**
__s
, 
__ªje˘
);

1198 
__STRING_INLINE
 *

1199 
	$__°r£p_1c
 (**
__s
, 
__ªje˘
)

1201 *
__ªtvÆ
 = *
__s
;

1202 i‡(
__ªtvÆ
 !
NULL
 && (*
__s
 = 
	`°rchr
 (__ªtvÆ, 
__ªje˘
)) != NULL)

1203 *(*
__s
)++ = '\0';

1204  
__ªtvÆ
;

1205 
	}
}

1207 
__STRING_INLINE
 *
__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
);

1208 
__STRING_INLINE
 *

1209 
	$__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
)

1211 *
__ªtvÆ
 = *
__s
;

1212 i‡(
__ªtvÆ
 !
NULL
)

1214 *
__˝
 = 
__ªtvÆ
;

1217 i‡(*
__˝
 == '\0')

1219 
__˝
 = 
NULL
;

1222 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
)

1224 *
__˝
++ = '\0';

1227 ++
__˝
;

1229 *
__s
 = 
__˝
;

1231  
__ªtvÆ
;

1232 
	}
}

1234 
__STRING_INLINE
 *
__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
,

1235 
__ªje˘3
);

1236 
__STRING_INLINE
 *

1237 
	$__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
, 
__ªje˘3
)

1239 *
__ªtvÆ
 = *
__s
;

1240 i‡(
__ªtvÆ
 !
NULL
)

1242 *
__˝
 = 
__ªtvÆ
;

1245 i‡(*
__˝
 == '\0')

1247 
__˝
 = 
NULL
;

1250 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
 || *__˝ =
__ªje˘3
)

1252 *
__˝
++ = '\0';

1255 ++
__˝
;

1257 *
__s
 = 
__˝
;

1259  
__ªtvÆ
;

1260 
	}
}

1261 #ifde‡
__USE_BSD


1262 
	#°r£p
(
s
, 
ªje˘
Ë
	`__°r£p
 (s,Ñeje˘)

	)

1269 #ifde‡
__USE_MISC


1271 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rdup
 || !deföed 
_HAVE_STRING_ARCH_°∫dup


1272 
	#__√ed_mÆloc_™d_ˇŒoc


	)

1273 
	~<°dlib.h
>

1276 #i‚de‡
_HAVE_STRING_ARCH_°rdup


1278 *
	$__°rdup
 (c⁄° *
__°rög
Ë
__THROW
 
__©åibuã_mÆloc__
;

1279 
	#__°rdup
(
s
) \

1280 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1281 ? (((c⁄° *Ë(
s
))[0] == '\0' \

1282 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1283 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1284 *
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1285 i‡(
__ªtvÆ
 !
NULL
) \

1286 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, 
__Àn
); \

1287 
__ªtvÆ
; 
	}
})) \

1288 : 
	`__°rdup
 (
s
)))

	)

1290 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1291 
	#°rdup
(
s
Ë
	`__°rdup
 (s)

	)

1295 #i‚de‡
_HAVE_STRING_ARCH_°∫dup


1297 *
	$__°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

1298 
__THROW
 
__©åibuã_mÆloc__
;

1299 
	#__°∫dup
(
s
, 
n
) \

1300 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1301 ? (((c⁄° *Ë(
s
))[0] == '\0' \

1302 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1303 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1304 
size_t
 
__n
 = (
n
); \

1305 *
__ªtvÆ
; \

1306 i‡(
__n
 < 
__Àn
) \

1307 
__Àn
 = 
__n
 + 1; \

1308 
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1309 i‡(
__ªtvÆ
 !
NULL
) \

1311 
__ªtvÆ
[
__Àn
 - 1] = '\0'; \

1312 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, \

1313 
__Àn
 - 1); \

1315 
__ªtvÆ
; 
	}
})) \

1316 : 
	`__°∫dup
 (
s
, 
n
)))

	)

1318 #ifde‡
__USE_GNU


1319 
	#°∫dup
(
s
, 
n
Ë
	`__°∫dup
 (s,Ç)

	)

1325 #i‚de‡
_FORCE_INLINES


1326 #unde‡
__STRING_INLINE


	@/usr/include/bits/string3.h

18 #i‚de‡
_STRING_H


22 
__w¨nde˛
 (
__w¨n_mem£t_zîo_Àn
,

25 #i‚de‡
__˝lu•lus


29 #unde‡
mem˝y


30 #unde‡
memmove


31 #unde‡
mem£t


32 #unde‡
°rˇt


33 #unde‡
°r˝y


34 #unde‡
°∫ˇt


35 #unde‡
°∫˝y


36 #ifde‡
__USE_GNU


37 #unde‡
memp˝y


38 #unde‡
°p˝y


40 #ifde‡
__USE_BSD


41 #unde‡
bc›y


42 #unde‡
bzîo


47 
__f‹tify_fun˘i⁄
 *

48 
__NTH
 (
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

49 
size_t
 
__Àn
))

51  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

52 
	}
}

54 
__f‹tify_fun˘i⁄
 *

55 
__NTH
 (
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__Àn
))

57  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

58 
	}
}

60 #ifde‡
__USE_GNU


61 
__f‹tify_fun˘i⁄
 *

62 
__NTH
 (
	$memp˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

63 
size_t
 
__Àn
))

65  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

66 
	}
}

75 
__f‹tify_fun˘i⁄
 *

76 
__NTH
 (
	$mem£t
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
))

78 i‡(
	`__buûtö_c⁄°™t_p
 (
__Àn
) && __len == 0

79 && (!
	`__buûtö_c⁄°™t_p
 (
__ch
) || __ch != 0))

81 
	`__w¨n_mem£t_zîo_Àn
 ();

82  
__de°
;

84  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
, 
	`__bos0
 (__dest));

85 
	}
}

87 #ifde‡
__USE_BSD


88 
__f‹tify_fun˘i⁄
 

89 
__NTH
 (
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__Àn
))

91 (Ë
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

92 
	}
}

94 
__f‹tify_fun˘i⁄
 

95 
__NTH
 (
	$bzîo
 (*
__de°
, 
size_t
 
__Àn
))

97 (Ë
	`__buûtö___mem£t_chk
 (
__de°
, '\0', 
__Àn
, 
	`__bos0
 (__dest));

98 
	}
}

101 
__f‹tify_fun˘i⁄
 *

102 
__NTH
 (
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

104  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

105 
	}
}

107 #ifde‡
__USE_GNU


108 
__f‹tify_fun˘i⁄
 *

109 
__NTH
 (
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

111  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

112 
	}
}

116 
__f‹tify_fun˘i⁄
 *

117 
__NTH
 (
	$°∫˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

118 
size_t
 
__Àn
))

120  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

121 
	}
}

124 *
	$__°≤˝y_chk
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

125 
size_t
 
__de°Àn
Ë
__THROW
;

126 *
	`__REDIRECT_NTH
 (
__°≤˝y_Æüs
, (*
__de°
, c⁄° *
__§c
,

127 
size_t
 
__n
), 
°≤˝y
);

129 
__f‹tify_fun˘i⁄
 *

130 
	`__NTH
 (
	$°≤˝y
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
))

132 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

133 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿<
	`__bos
 (
__de°
)))

134  
	`__°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__bos
 (__dest));

135  
	`__°≤˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

136 
	}
}

139 
__f‹tify_fun˘i⁄
 *

140 
__NTH
 (
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

142  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

143 
	}
}

146 
__f‹tify_fun˘i⁄
 *

147 
__NTH
 (
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

148 
size_t
 
__Àn
))

150  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

151 
	}
}

	@/usr/include/bits/sys_errlist.h

19 #i‚de‡
_STDIO_H


25 #ifde‡ 
__USE_BSD


26 
sys_√º
;

27 c⁄° *c⁄° 
sys_îæi°
[];

29 #ifde‡ 
__USE_GNU


30 
_sys_√º
;

31 c⁄° *c⁄° 
_sys_îæi°
[];

	@/usr/include/bits/types.h

23 #i‚def 
_BITS_TYPES_H


24 
	#_BITS_TYPES_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/w‹dsize.h
>

30 
	t__u_ch¨
;

31 
	t__u_sh‹t
;

32 
	t__u_öt
;

33 
	t__u_l⁄g
;

36 sig√d 
	t__öt8_t
;

37 
	t__uöt8_t
;

38 sig√d 
	t__öt16_t
;

39 
	t__uöt16_t
;

40 sig√d 
	t__öt32_t
;

41 
	t__uöt32_t
;

42 #i‡
__WORDSIZE
 == 64

43 sig√d 
	t__öt64_t
;

44 
	t__uöt64_t
;

46 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

47 
__exãnsi⁄__
 
	t__uöt64_t
;

51 #i‡
__WORDSIZE
 == 64

52 
	t__quad_t
;

53 
	t__u_quad_t
;

55 
__exãnsi⁄__
 
	t__quad_t
;

56 
__exãnsi⁄__
 
	t__u_quad_t
;

89 
	#__S16_TYPE
 

	)

90 
	#__U16_TYPE
 

	)

91 
	#__S32_TYPE
 

	)

92 
	#__U32_TYPE
 

	)

93 
	#__SLONGWORD_TYPE
 

	)

94 
	#__ULONGWORD_TYPE
 

	)

95 #i‡
__WORDSIZE
 == 32

96 
	#__SQUAD_TYPE
 
__quad_t


	)

97 
	#__UQUAD_TYPE
 
__u_quad_t


	)

98 
	#__SWORD_TYPE
 

	)

99 
	#__UWORD_TYPE
 

	)

100 
	#__SLONG32_TYPE
 

	)

101 
	#__ULONG32_TYPE
 

	)

102 
	#__S64_TYPE
 
__quad_t


	)

103 
	#__U64_TYPE
 
__u_quad_t


	)

106 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

107 #ñi‡
__WORDSIZE
 == 64

108 
	t__SQUAD_TYPE
 

	)

109 
	t__UQUAD_TYPE
 

	)

110 
	t__SWORD_TYPE
 

	)

111 
	t__UWORD_TYPE
 

	)

112 
	t__SLONG32_TYPE
 

	)

113 
	t__ULONG32_TYPE
 

	)

114 
	t__S64_TYPE
 

	)

115 
	t__U64_TYPE
 

	)

117 
	t__STD_TYPE
 

	)

121 
	~<bôs/ty≥sizes.h
>

124 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

125 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

126 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

127 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

128 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

129 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

130 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

131 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

132 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

133 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

134 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

135 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

136 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

137 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

138 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

139 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

140 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

141 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

143 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

144 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

147 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

150 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

153 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

158 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

159 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

162 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

163 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

166 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

167 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

170 
__STD_TYPE
 
__FSWORD_T_TYPE
 
	g__fsw‹d_t
;

172 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

175 
__STD_TYPE
 
__SYSCALL_SLONG_TYPE
 
	g__sysˇŒ_¶⁄g_t
;

177 
__STD_TYPE
 
__SYSCALL_ULONG_TYPE
 
	g__sysˇŒ_ul⁄g_t
;

181 
__off64_t
 
	t__loff_t
;

182 
__quad_t
 *
	t__qaddr_t
;

183 *
	t__ˇddr_t
;

186 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

189 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

192 #unde‡
__STD_TYPE


	@/usr/include/bits/waitflags.h

19 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


25 
	#WNOHANG
 1

	)

26 
	#WUNTRACED
 2

	)

29 
	#WSTOPPED
 2

	)

30 
	#WEXITED
 4

	)

31 
	#WCONTINUED
 8

	)

32 
	#WNOWAIT
 0x01000000

	)

34 
	#__WNOTHREAD
 0x20000000

	)

36 
	#__WALL
 0x40000000

	)

37 
	#__WCLONE
 0x80000000

	)

40 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


41 #i‚de‡
__ENUM_IDTYPE_T


42 
	#__ENUM_IDTYPE_T
 1

	)

46 #unde‡
P_ALL


47 #unde‡
P_PID


48 #unde‡
P_PGID


52 
	mP_ALL
,

53 
	mP_PID
,

54 
	mP_PGID


55 } 
	tidty≥_t
;

	@/usr/include/bits/waitstatus.h

19 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


28 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

31 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

34 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

37 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

40 
	#__WIFSIGNALED
(
°©us
) \

41 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

44 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

48 #ifde‡
WCONTINUED


49 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

53 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

56 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

57 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

58 
	#__W_CONTINUED
 0xffff

	)

59 
	#__WCOREFLAG
 0x80

	)

62 #ifdef 
__USE_BSD


64 
	~<ídün.h
>

66 
	uwaô


68 
	mw_°©us
;

71 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


72 
	m__w_ãrmsig
:7;

73 
	m__w_c‹edump
:1;

74 
	m__w_ªtcode
:8;

77 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


79 
	m__w_ªtcode
:8;

80 
	m__w_c‹edump
:1;

81 
	m__w_ãrmsig
:7;

83 } 
	m__waô_ãrmö©ed
;

86 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


87 
	m__w_°›vÆ
:8;

88 
	m__w_°›sig
:8;

91 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


93 
	m__w_°›sig
:8;

94 
	m__w_°›vÆ
:8;

96 } 
	m__waô_°›≥d
;

99 
	#w_ãrmsig
 
__waô_ãrmö©ed
.
__w_ãrmsig


	)

100 
	#w_c‹edump
 
__waô_ãrmö©ed
.
__w_c‹edump


	)

101 
	#w_ªtcode
 
__waô_ãrmö©ed
.
__w_ªtcode


	)

102 
	#w_°›sig
 
__waô_°›≥d
.
__w_°›sig


	)

103 
	#w_°›vÆ
 
__waô_°›≥d
.
__w_°›vÆ


	)

	@/usr/include/bits/wchar.h

19 #i‚de‡
_BITS_WCHAR_H


20 
	#_BITS_WCHAR_H
 1

	)

33 #ifde‡
__WCHAR_MAX__


34 
	#__WCHAR_MAX
 
__WCHAR_MAX__


	)

35 #ñi‡
L
'\0' - 1 > 0

36 
	#__WCHAR_MAX
 (0xffffffffu + 
L
'\0')

	)

38 
	#__WCHAR_MAX
 (0x7ffffff‡+ 
L
'\0')

	)

41 #ifde‡
__WCHAR_MIN__


42 
	#__WCHAR_MIN
 
__WCHAR_MIN__


	)

43 #ñi‡
L
'\0' - 1 > 0

44 
	#__WCHAR_MIN
 (
L
'\0' + 0)

	)

46 
	#__WCHAR_MIN
 (-
__WCHAR_MAX
 - 1)

	)

	@/usr/include/bits/wordsize.h

3 #i‡
deföed
 
__x86_64__
 && !deföed 
__ILP32__


4 
	#__WORDSIZE
 64

	)

6 
	#__WORDSIZE
 32

	)

9 #ifde‡
__x86_64__


10 
	#__WORDSIZE_TIME64_COMPAT32
 1

	)

12 
	#__SYSCALL_WORDSIZE
 64

	)

	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

101 #unde‡
__USE_ISOC11


102 #unde‡
__USE_ISOC99


103 #unde‡
__USE_ISOC95


104 #unde‡
__USE_ISOCXX11


105 #unde‡
__USE_POSIX


106 #unde‡
__USE_POSIX2


107 #unde‡
__USE_POSIX199309


108 #unde‡
__USE_POSIX199506


109 #unde‡
__USE_XOPEN


110 #unde‡
__USE_XOPEN_EXTENDED


111 #unde‡
__USE_UNIX98


112 #unde‡
__USE_XOPEN2K


113 #unde‡
__USE_XOPEN2KXSI


114 #unde‡
__USE_XOPEN2K8


115 #unde‡
__USE_XOPEN2K8XSI


116 #unde‡
__USE_LARGEFILE


117 #unde‡
__USE_LARGEFILE64


118 #unde‡
__USE_FILE_OFFSET64


119 #unde‡
__USE_BSD


120 #unde‡
__USE_SVID


121 #unde‡
__USE_MISC


122 #unde‡
__USE_ATFILE


123 #unde‡
__USE_GNU


124 #unde‡
__USE_REENTRANT


125 #unde‡
__USE_FORTIFY_LEVEL


126 #unde‡
__KERNEL_STRICT_NAMES


130 #i‚de‡
_LOOSE_KERNEL_NAMES


131 
	#__KERNEL_STRICT_NAMES


	)

141 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


142 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

143 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

145 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

150 #ifde‡
_GNU_SOURCE


151 #unde‡
_ISOC95_SOURCE


152 
	#_ISOC95_SOURCE
 1

	)

153 #unde‡
_ISOC99_SOURCE


154 
	#_ISOC99_SOURCE
 1

	)

155 #unde‡
_ISOC11_SOURCE


156 
	#_ISOC11_SOURCE
 1

	)

157 #unde‡
_POSIX_SOURCE


158 
	#_POSIX_SOURCE
 1

	)

159 #unde‡
_POSIX_C_SOURCE


160 
	#_POSIX_C_SOURCE
 200809L

	)

161 #unde‡
_XOPEN_SOURCE


162 
	#_XOPEN_SOURCE
 700

	)

163 #unde‡
_XOPEN_SOURCE_EXTENDED


164 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

165 #unde‡
_LARGEFILE64_SOURCE


166 
	#_LARGEFILE64_SOURCE
 1

	)

167 #unde‡
_DEFAULT_SOURCE


168 
	#_DEFAULT_SOURCE
 1

	)

169 #unde‡
_BSD_SOURCE


170 
	#_BSD_SOURCE
 1

	)

171 #unde‡
_SVID_SOURCE


172 
	#_SVID_SOURCE
 1

	)

173 #unde‡
_ATFILE_SOURCE


174 
	#_ATFILE_SOURCE
 1

	)

179 #i‡(
deföed
 
_DEFAULT_SOURCE
 \

180 || (!
deföed
 
	g__STRICT_ANSI__
 \

181 && !
deföed
 
	g_ISOC99_SOURCE
 \

182 && !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 \

183 && !
deföed
 
	g_XOPEN_SOURCE
 \

184 && !
deföed
 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
))

185 #unde‡
_DEFAULT_SOURCE


186 
	#_DEFAULT_SOURCE
 1

	)

187 #unde‡
_BSD_SOURCE


188 
	#_BSD_SOURCE
 1

	)

189 #unde‡
_SVID_SOURCE


190 
	#_SVID_SOURCE
 1

	)

194 #i‡(
deföed
 
_ISOC11_SOURCE
 \

195 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

196 
	#__USE_ISOC11
 1

	)

200 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

201 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

202 
	#__USE_ISOC99
 1

	)

206 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

207 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

208 
	#__USE_ISOC95
 1

	)

215 #i‡((
deföed
 
__˝lu•lus
 && __cplusplus >= 201103L) \

216 || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__
)

217 
	#__USE_ISOCXX11
 1

	)

223 #ifde‡
_DEFAULT_SOURCE


224 #i‡!
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE


225 
	#__USE_POSIX_IMPLICITLY
 1

	)

227 #unde‡
_POSIX_SOURCE


228 
	#_POSIX_SOURCE
 1

	)

229 #unde‡
_POSIX_C_SOURCE


230 
	#_POSIX_C_SOURCE
 200809L

	)

232 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

233 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

234 
	#_POSIX_SOURCE
 1

	)

235 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

236 
	#_POSIX_C_SOURCE
 2

	)

237 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

238 
	#_POSIX_C_SOURCE
 199506L

	)

239 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

240 
	#_POSIX_C_SOURCE
 200112L

	)

242 
	#_POSIX_C_SOURCE
 200809L

	)

244 
	#__USE_POSIX_IMPLICITLY
 1

	)

247 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


248 
	#__USE_POSIX
 1

	)

251 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


252 
	#__USE_POSIX2
 1

	)

255 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

256 
	#__USE_POSIX199309
 1

	)

259 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

260 
	#__USE_POSIX199506
 1

	)

263 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

264 
	#__USE_XOPEN2K
 1

	)

265 #unde‡
__USE_ISOC95


266 
	#__USE_ISOC95
 1

	)

267 #unde‡
__USE_ISOC99


268 
	#__USE_ISOC99
 1

	)

271 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

272 
	#__USE_XOPEN2K8
 1

	)

273 #unde‡
_ATFILE_SOURCE


274 
	#_ATFILE_SOURCE
 1

	)

277 #ifdef 
_XOPEN_SOURCE


278 
	#__USE_XOPEN
 1

	)

279 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

280 
	#__USE_XOPEN_EXTENDED
 1

	)

281 
	#__USE_UNIX98
 1

	)

282 #unde‡
_LARGEFILE_SOURCE


283 
	#_LARGEFILE_SOURCE
 1

	)

284 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

285 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

286 
	#__USE_XOPEN2K8
 1

	)

287 
	#__USE_XOPEN2K8XSI
 1

	)

289 
	#__USE_XOPEN2K
 1

	)

290 
	#__USE_XOPEN2KXSI
 1

	)

291 #unde‡
__USE_ISOC95


292 
	#__USE_ISOC95
 1

	)

293 #unde‡
__USE_ISOC99


294 
	#__USE_ISOC99
 1

	)

297 #ifde‡
_XOPEN_SOURCE_EXTENDED


298 
	#__USE_XOPEN_EXTENDED
 1

	)

303 #ifde‡
_LARGEFILE_SOURCE


304 
	#__USE_LARGEFILE
 1

	)

307 #ifde‡
_LARGEFILE64_SOURCE


308 
	#__USE_LARGEFILE64
 1

	)

311 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

312 
	#__USE_FILE_OFFSET64
 1

	)

315 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


316 
	#__USE_MISC
 1

	)

319 #ifdef 
_BSD_SOURCE


320 
	#__USE_BSD
 1

	)

323 #ifdef 
_SVID_SOURCE


324 
	#__USE_SVID
 1

	)

327 #ifdef 
_ATFILE_SOURCE


328 
	#__USE_ATFILE
 1

	)

331 #ifdef 
_GNU_SOURCE


332 
	#__USE_GNU
 1

	)

335 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


336 
	#__USE_REENTRANT
 1

	)

339 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

340 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

341 #i‡
_FORTIFY_SOURCE
 > 1

342 
	#__USE_FORTIFY_LEVEL
 2

	)

344 
	#__USE_FORTIFY_LEVEL
 1

	)

347 
	#__USE_FORTIFY_LEVEL
 0

	)

352 
	~<°dc-¥edef.h
>

360 #unde‡
__GNU_LIBRARY__


361 
	#__GNU_LIBRARY__
 6

	)

365 
	#__GLIBC__
 2

	)

366 
	#__GLIBC_MINOR__
 19

	)

368 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

369 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

372 #i‚de‡
__ASSEMBLER__


373 #i‚de‡
_SYS_CDEFS_H


374 
	~<sys/cdefs.h
>

379 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


380 
	#__USE_LARGEFILE
 1

	)

381 
	#__USE_LARGEFILE64
 1

	)

387 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

388 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

389 && 
deföed
 
	g__exã∫_ölöe


390 
	#__USE_EXTERN_INLINES
 1

	)

398 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

19 #i‚de‡
_GETOPT_H


21 #i‚de‡
__√ed_gë›t


22 
	#_GETOPT_H
 1

	)

32 #i‡!
deföed
 
__GNU_LIBRARY__


33 
	~<˘y≥.h
>

36 #i‚de‡
__THROW


37 #i‚de‡
__GNUC_PREREQ


38 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

40 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

41 
	#__THROW
 
	`throw
 ()

	)

43 
	#__THROW


	)

47 #ifdef 
__˝lu•lus


57 *
›èrg
;

71 
›töd
;

76 
›ãº
;

80 
›t›t
;

82 #i‚de‡
__√ed_gë›t


104 
	s›ti⁄


106 c⁄° *
	g«me
;

109 
	ghas_¨g
;

110 *
	gÊag
;

111 
	gvÆ
;

116 
	#no_¨gumít
 0

	)

117 
	#ªquúed_¨gumít
 1

	)

118 
	#›ti⁄Æ_¨gumít
 2

	)

146 #ifde‡
__GNU_LIBRARY__


150 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

151 
__THROW
;

153 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

154 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


158 #ifde‡
__REDIRECT


159 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

160 c⁄° *
__sh‹t›ts
),

161 
__posix_gë›t
);

163 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

164 c⁄° *
__sh‹t›ts
Ë
__THROW
;

165 
	#gë›t
 
__posix_gë›t


	)

169 
gë›t
 ();

172 #i‚de‡
__√ed_gë›t


173 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

174 c⁄° *
__sh‹t›ts
,

175 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

176 
__THROW
;

177 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

178 c⁄° *
__sh‹t›ts
,

179 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

180 
__THROW
;

184 #ifdef 
__˝lu•lus


189 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

28 #i‚de‡
_IO_STDIO_H


29 
	#_IO_STDIO_H


	)

31 
	~<_G_c⁄fig.h
>

33 
	#_IO_Âos_t
 
_G_Âos_t


	)

34 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

35 
	#_IO_size_t
 
size_t


	)

36 
	#_IO_ssize_t
 
__ssize_t


	)

37 
	#_IO_off_t
 
__off_t


	)

38 
	#_IO_off64_t
 
__off64_t


	)

39 
	#_IO_pid_t
 
__pid_t


	)

40 
	#_IO_uid_t
 
__uid_t


	)

41 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

42 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

43 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

44 
	#_IO_va_li°
 
_G_va_li°


	)

45 
	#_IO_wöt_t
 
wöt_t


	)

48 
	#__√ed___va_li°


	)

49 
	~<°d¨g.h
>

50 #ifde‡
__GNUC_VA_LIST


51 #unde‡
_IO_va_li°


52 
	#_IO_va_li°
 
__gnuc_va_li°


	)

55 #i‚de‡
__P


56 
	~<sys/cdefs.h
>

59 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

61 #i‚de‡
EOF


62 
	#EOF
 (-1)

	)

64 #i‚de‡
NULL


65 #i‡
deföed
 
__GNUG__
 && \

66 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

67 
	#NULL
 (
__nuŒ
)

	)

69 #i‡!
deföed
(
__˝lu•lus
)

70 
	#NULL
 ((*)0)

	)

72 
	#NULL
 (0)

	)

77 
	#_IOS_INPUT
 1

	)

78 
	#_IOS_OUTPUT
 2

	)

79 
	#_IOS_ATEND
 4

	)

80 
	#_IOS_APPEND
 8

	)

81 
	#_IOS_TRUNC
 16

	)

82 
	#_IOS_NOCREATE
 32

	)

83 
	#_IOS_NOREPLACE
 64

	)

84 
	#_IOS_BIN
 128

	)

92 
	#_IO_MAGIC
 0xFBAD0000

	)

93 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

94 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

95 
	#_IO_USER_BUF
 1

	)

96 
	#_IO_UNBUFFERED
 2

	)

97 
	#_IO_NO_READS
 4

	)

98 
	#_IO_NO_WRITES
 8

	)

99 
	#_IO_EOF_SEEN
 0x10

	)

100 
	#_IO_ERR_SEEN
 0x20

	)

101 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

102 
	#_IO_LINKED
 0x80

	)

103 
	#_IO_IN_BACKUP
 0x100

	)

104 
	#_IO_LINE_BUF
 0x200

	)

105 
	#_IO_TIED_PUT_GET
 0x400

	)

106 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

107 
	#_IO_IS_APPENDING
 0x1000

	)

108 
	#_IO_IS_FILEBUF
 0x2000

	)

109 
	#_IO_BAD_SEEN
 0x4000

	)

110 
	#_IO_USER_LOCK
 0x8000

	)

112 
	#_IO_FLAGS2_MMAP
 1

	)

113 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

114 #ifde‡
_LIBC


115 
	#_IO_FLAGS2_FORTIFY
 4

	)

117 
	#_IO_FLAGS2_USER_WBUF
 8

	)

118 #ifde‡
_LIBC


119 
	#_IO_FLAGS2_SCANF_STD
 16

	)

120 
	#_IO_FLAGS2_NOCLOSE
 32

	)

121 
	#_IO_FLAGS2_CLOEXEC
 64

	)

125 
	#_IO_SKIPWS
 01

	)

126 
	#_IO_LEFT
 02

	)

127 
	#_IO_RIGHT
 04

	)

128 
	#_IO_INTERNAL
 010

	)

129 
	#_IO_DEC
 020

	)

130 
	#_IO_OCT
 040

	)

131 
	#_IO_HEX
 0100

	)

132 
	#_IO_SHOWBASE
 0200

	)

133 
	#_IO_SHOWPOINT
 0400

	)

134 
	#_IO_UPPERCASE
 01000

	)

135 
	#_IO_SHOWPOS
 02000

	)

136 
	#_IO_SCIENTIFIC
 04000

	)

137 
	#_IO_FIXED
 010000

	)

138 
	#_IO_UNITBUF
 020000

	)

139 
	#_IO_STDIO
 040000

	)

140 
	#_IO_DONT_CLOSE
 0100000

	)

141 
	#_IO_BOOLALPHA
 0200000

	)

144 
_IO_jump_t
; 
	g_IO_FILE
;

147 #ifde‡
_IO_MTSAFE_IO


148 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

149 
	~<bôs/°dio-lock.h
>

154 
	t_IO_lock_t
;

160 
	s_IO_m¨kî
 {

161 
_IO_m¨kî
 *
	m_√xt
;

162 
_IO_FILE
 *
	m_sbuf
;

166 
	m_pos
;

168 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

169 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

170 
	mpublic
:

171 
°ªamm¨kî
(
°ªambuf
 *
sb
);

172 ~
°ªamm¨kî
();

173 
ßvög
(Ë{  
	m_•os
 == -2; }

174 
dñè
(
°ªamm¨kî
&);

175 
dñè
();

180 
	e__codecvt_ªsu…


182 
	m__codecvt_ok
,

183 
	m__codecvt_∑πül
,

184 
	m__codecvt_îr‹
,

185 
	m__codecvt_noc⁄v


188 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


191 
	s_IO_codecvt


193 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

194 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

195 
	m__mb°©e_t
 *,

196 c⁄° 
	mwch¨_t
 *,

197 c⁄° 
	mwch¨_t
 *,

198 c⁄° 
	mwch¨_t
 **, *,

200 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

201 
	m__mb°©e_t
 *, *,

203 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

204 
	m__mb°©e_t
 *,

206 c⁄° **, 
	mwch¨_t
 *,

207 
	mwch¨_t
 *, wchar_t **);

208 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

209 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

210 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

211 c⁄° *, c⁄° *, 
	m_IO_size_t
);

212 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

214 
_IO_ic⁄v_t
 
	m__cd_ö
;

215 
_IO_ic⁄v_t
 
	m__cd_out
;

219 
	s_IO_wide_d©a


221 
wch¨_t
 *
	m_IO_ªad_±r
;

222 
wch¨_t
 *
	m_IO_ªad_íd
;

223 
wch¨_t
 *
	m_IO_ªad_ba£
;

224 
wch¨_t
 *
	m_IO_wrôe_ba£
;

225 
wch¨_t
 *
	m_IO_wrôe_±r
;

226 
wch¨_t
 *
	m_IO_wrôe_íd
;

227 
wch¨_t
 *
	m_IO_buf_ba£
;

228 
wch¨_t
 *
	m_IO_buf_íd
;

230 
wch¨_t
 *
	m_IO_ßve_ba£
;

231 
wch¨_t
 *
	m_IO_backup_ba£
;

233 
wch¨_t
 *
	m_IO_ßve_íd
;

235 
__mb°©e_t
 
	m_IO_°©e
;

236 
__mb°©e_t
 
	m_IO_œ°_°©e
;

237 
_IO_codecvt
 
	m_codecvt
;

239 
wch¨_t
 
	m_sh‹tbuf
[1];

241 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

245 
	s_IO_FILE
 {

246 
	m_Êags
;

247 
	#_IO_fûe_Êags
 
_Êags


	)

251 * 
	m_IO_ªad_±r
;

252 * 
	m_IO_ªad_íd
;

253 * 
	m_IO_ªad_ba£
;

254 * 
	m_IO_wrôe_ba£
;

255 * 
	m_IO_wrôe_±r
;

256 * 
	m_IO_wrôe_íd
;

257 * 
	m_IO_buf_ba£
;

258 * 
	m_IO_buf_íd
;

260 *
	m_IO_ßve_ba£
;

261 *
	m_IO_backup_ba£
;

262 *
	m_IO_ßve_íd
;

264 
_IO_m¨kî
 *
	m_m¨kîs
;

266 
_IO_FILE
 *
	m_chaö
;

268 
	m_fûío
;

270 
	m_blksize
;

272 
	m_Êags2
;

274 
_IO_off_t
 
	m_ﬁd_off£t
;

276 
	#__HAVE_COLUMN


	)

278 
	m_cur_cﬁumn
;

279 sig√d 
	m_vèbÀ_off£t
;

280 
	m_sh‹tbuf
[1];

284 
_IO_lock_t
 *
	m_lock
;

285 #ifde‡
_IO_USE_OLD_IO_FILE


288 
	s_IO_FILE_com∂ëe


290 
_IO_FILE
 
	m_fûe
;

292 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

293 
_IO_off64_t
 
	m_off£t
;

294 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


296 
_IO_codecvt
 *
	m_codecvt
;

297 
_IO_wide_d©a
 *
	m_wide_d©a
;

298 
_IO_FILE
 *
	m_‰ìªs_li°
;

299 *
	m_‰ìªs_buf
;

300 
size_t
 
	m_‰ìªs_size
;

302 *
	m__∑d1
;

303 *
	m__∑d2
;

304 *
	m__∑d3
;

305 *
	m__∑d4
;

306 
size_t
 
	m__∑d5
;

308 
	m_mode
;

310 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

314 #i‚de‡
__˝lu•lus


315 
_IO_FILE
 
	t_IO_FILE
;

318 
	g_IO_FILE_∂us
;

320 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

321 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

322 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

323 #i‚de‡
_LIBC


324 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

325 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

326 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

328 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

329 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

330 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

338 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

346 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, c⁄° *
	t__buf
,

347 
	tsize_t
 
	t__n
);

355 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

358 
	t__io_˛o£_‚
 (*
	t__cookõ
);

361 #ifde‡
_GNU_SOURCE


363 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

364 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

365 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

366 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

371 
__io_ªad_‚
 *
	mªad
;

372 
__io_wrôe_‚
 *
	mwrôe
;

373 
__io_£ek_‚
 *
	m£ek
;

374 
__io_˛o£_‚
 *
	m˛o£
;

375 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

376 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

378 
	g_IO_cookõ_fûe
;

381 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

382 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

386 #ifde‡
__˝lu•lus


390 
__undîÊow
 (
_IO_FILE
 *);

391 
__uÊow
 (
_IO_FILE
 *);

392 
__ovîÊow
 (
_IO_FILE
 *, );

393 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


394 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

395 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

396 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

399 #i‡ 
__GNUC__
 >= 3

400 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

402 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

405 
	#_IO_gëc_u∆ocked
(
_Â
) \

406 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

407 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

408 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

409 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

410 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

411 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

412 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

413 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

414 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

415 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

417 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


418 
	#_IO_gëwc_u∆ocked
(
_Â
) \

419 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

420 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

421 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

422 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

423 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

424 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

425 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

426 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

427 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

428 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

431 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

432 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

434 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

435 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

436 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

437 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

439 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

442 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

443 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

445 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

446 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

447 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

449 #ifde‡
_IO_MTSAFE_IO


450 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

451 
	#_IO_Êockfûe
(
_Â
) \

452 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

453 
	#_IO_fu∆ockfûe
(
_Â
) \

454 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

456 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

457 
	#_IO_Êockfûe
(
_Â
Ë

	)

458 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

459 
	#_IO_·rylockfûe
(
_Â
Ë

	)

460 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

461 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

464 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

465 
_IO_va_li°
, *
__ª°ri˘
);

466 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

467 
_IO_va_li°
);

468 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

469 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

471 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

472 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

474 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

476 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


477 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

478 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

479 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

480 #i‡
__GNUC__
 >= 2

483 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


484 
	~<shlib-com∑t.h
>

485 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

486 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

487 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

488 c⁄° 
_IO_°dö_u£d
;

489 
wók_exã∫
 (
_IO_°dö_u£d
);

492 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


493 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

497 
	#_IO_fwide
(
__Â
, 
__mode
) \

498 ({ 
__ªsu…
 = (
__mode
); \

499 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

501 i‡((
__Â
)->
_mode
 == 0) \

503 (
__Â
)->
_mode
 = -1; \

504 
__ªsu…
 = (
__Â
)->
_mode
; \

506 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

507 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

509 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

510 
__ªsu…
; })

	)

513 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

514 
_IO_va_li°
, *
__ª°ri˘
);

515 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

516 
_IO_va_li°
);

517 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

518 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

521 #ifde‡
__LDBL_COMPAT


522 
	~<bôs/libio-ldbl.h
>

525 #ifde‡
__˝lu•lus


	@/usr/include/sys/types.h

22 #i‚def 
_SYS_TYPES_H


23 
	#_SYS_TYPES_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

31 #ifdef 
__USE_BSD


32 #i‚de‡
__u_ch¨_deföed


33 
__u_ch¨
 
	tu_ch¨
;

34 
__u_sh‹t
 
	tu_sh‹t
;

35 
__u_öt
 
	tu_öt
;

36 
__u_l⁄g
 
	tu_l⁄g
;

37 
__quad_t
 
	tquad_t
;

38 
__u_quad_t
 
	tu_quad_t
;

39 
__fsid_t
 
	tfsid_t
;

40 
	#__u_ch¨_deföed


	)

44 
__loff_t
 
	tloff_t
;

46 #i‚de‡
__öo_t_deföed


47 #i‚de‡
__USE_FILE_OFFSET64


48 
__öo_t
 
	töo_t
;

50 
__öo64_t
 
	töo_t
;

52 
	#__öo_t_deföed


	)

54 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


55 
__öo64_t
 
	töo64_t
;

56 
	#__öo64_t_deföed


	)

59 #i‚de‡
__dev_t_deföed


60 
__dev_t
 
	tdev_t
;

61 
	#__dev_t_deföed


	)

64 #i‚de‡
__gid_t_deföed


65 
__gid_t
 
	tgid_t
;

66 
	#__gid_t_deföed


	)

69 #i‚de‡
__mode_t_deföed


70 
__mode_t
 
	tmode_t
;

71 
	#__mode_t_deföed


	)

74 #i‚de‡
__∆ök_t_deföed


75 
__∆ök_t
 
	t∆ök_t
;

76 
	#__∆ök_t_deföed


	)

79 #i‚de‡
__uid_t_deföed


80 
__uid_t
 
	tuid_t
;

81 
	#__uid_t_deföed


	)

84 #i‚de‡
__off_t_deföed


85 #i‚de‡
__USE_FILE_OFFSET64


86 
__off_t
 
	toff_t
;

88 
__off64_t
 
	toff_t
;

90 
	#__off_t_deföed


	)

92 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


93 
__off64_t
 
	toff64_t
;

94 
	#__off64_t_deföed


	)

97 #i‚de‡
__pid_t_deföed


98 
__pid_t
 
	tpid_t
;

99 
	#__pid_t_deföed


	)

102 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
) \

103 && !
deföed
 
__id_t_deföed


104 
__id_t
 
	tid_t
;

105 
	#__id_t_deföed


	)

108 #i‚de‡
__ssize_t_deföed


109 
__ssize_t
 
	tssize_t
;

110 
	#__ssize_t_deföed


	)

113 #ifdef 
__USE_BSD


114 #i‚de‡
__daddr_t_deföed


115 
__daddr_t
 
	tdaddr_t
;

116 
__ˇddr_t
 
	tˇddr_t
;

117 
	#__daddr_t_deföed


	)

121 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


122 
__key_t
 
	tkey_t
;

123 
	#__key_t_deföed


	)

126 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


127 
	#__√ed_˛ock_t


	)

129 
	#__√ed_time_t


	)

130 
	#__√ed_timî_t


	)

131 
	#__√ed_˛ockid_t


	)

132 
	~<time.h
>

134 #ifde‡
__USE_XOPEN


135 #i‚de‡
__u£c⁄ds_t_deföed


136 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

137 
	#__u£c⁄ds_t_deföed


	)

139 #i‚de‡
__su£c⁄ds_t_deföed


140 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

141 
	#__su£c⁄ds_t_deföed


	)

145 
	#__√ed_size_t


	)

146 
	~<°ddef.h
>

148 #ifde‡
__USE_MISC


150 
	tul⁄g
;

151 
	tush‹t
;

152 
	tuöt
;

157 #i‡!
__GNUC_PREREQ
 (2, 7)

160 #i‚de‡
__öt8_t_deföed


161 
	#__öt8_t_deföed


	)

162 
	töt8_t
;

163 
	töt16_t
;

164 
	töt32_t
;

165 #i‡
__WORDSIZE
 == 64

166 
	töt64_t
;

168 
__exãnsi⁄__
 
	töt64_t
;

173 
	tu_öt8_t
;

174 
	tu_öt16_t
;

175 
	tu_öt32_t
;

176 #i‡
__WORDSIZE
 == 64

177 
	tu_öt64_t
;

179 
__exãnsi⁄__
 
	tu_öt64_t
;

182 
	tªgi°î_t
;

187 
	#__ötN_t
(
N
, 
MODE
) \

188 ##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

189 
	t__u_ötN_t
(
	tN
, 
	tMODE
) \

190 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

192 #i‚de‡
	t__öt8_t_deföed


193 
	t__öt8_t_deföed


	)

194 
	t__ötN_t
 (8, 
	t__QI__
);

195 
__ötN_t
 (16, 
__HI__
);

196 
__ötN_t
 (32, 
__SI__
);

197 
__ötN_t
 (64, 
__DI__
);

200 
__u_ötN_t
 (8, 
__QI__
);

201 
__u_ötN_t
 (16, 
__HI__
);

202 
__u_ötN_t
 (32, 
__SI__
);

203 
__u_ötN_t
 (64, 
__DI__
);

205 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

211 
	#__BIT_TYPES_DEFINED__
 1

	)

214 #ifdef 
__USE_BSD


216 
	~<ídün.h
>

219 
	~<sys/£À˘.h
>

222 
	~<sys/sysma¸os.h
>

226 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
) \

227 && !
deföed
 
__blksize_t_deföed


228 
__blksize_t
 
	tblksize_t
;

229 
	#__blksize_t_deföed


	)

233 #i‚de‡
__USE_FILE_OFFSET64


234 #i‚de‡
__blk˙t_t_deföed


235 
__blk˙t_t
 
	tblk˙t_t
;

236 
	#__blk˙t_t_deföed


	)

238 #i‚de‡
__fsblk˙t_t_deföed


239 
__fsblk˙t_t
 
	tfsblk˙t_t
;

240 
	#__fsblk˙t_t_deföed


	)

242 #i‚de‡
__fsfû˙t_t_deföed


243 
__fsfû˙t_t
 
	tfsfû˙t_t
;

244 
	#__fsfû˙t_t_deföed


	)

247 #i‚de‡
__blk˙t_t_deföed


248 
__blk˙t64_t
 
	tblk˙t_t
;

249 
	#__blk˙t_t_deföed


	)

251 #i‚de‡
__fsblk˙t_t_deföed


252 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

253 
	#__fsblk˙t_t_deföed


	)

255 #i‚de‡
__fsfû˙t_t_deföed


256 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

257 
	#__fsfû˙t_t_deföed


	)

261 #ifde‡
__USE_LARGEFILE64


262 
__blk˙t64_t
 
	tblk˙t64_t
;

263 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

264 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

269 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


270 
	~<bôs/±hªadty≥s.h
>

273 
	g__END_DECLS


	@/usr/include/xlocale.h

20 #i‚de‡
_XLOCALE_H


21 
	#_XLOCALE_H
 1

	)

27 
	s__loˇÀ_°ru˘


30 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

33 c⁄° *
	m__˘y≥_b
;

34 c⁄° *
	m__˘y≥_tﬁowî
;

35 c⁄° *
	m__˘y≥_touµî
;

38 c⁄° *
	m__«mes
[13];

39 } *
	t__loˇÀ_t
;

42 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

23 
__off_t
 
	m__pos
;

24 
__mb°©e_t
 
	m__°©e
;

25 } 
	t_G_Âos_t
;

28 
__off64_t
 
	m__pos
;

29 
__mb°©e_t
 
	m__°©e
;

30 } 
	t_G_Âos64_t
;

31 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


32 
	~<gc⁄v.h
>

35 
__gc⁄v_öfo
 
	m__cd
;

38 
__gc⁄v_öfo
 
	m__cd
;

39 
__gc⁄v_°ï_d©a
 
	m__d©a
;

40 } 
	m__comböed
;

41 } 
	t_G_ic⁄v_t
;

46 
	#_G_va_li°
 
__gnuc_va_li°


	)

48 
	#_G_HAVE_MMAP
 1

	)

49 
	#_G_HAVE_MREMAP
 1

	)

51 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

54 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

56 
	#_G_BUFSIZ
 8192

	)

	@/usr/include/bits/libio-ldbl.h

19 #i‚de‡
_IO_STDIO_H


23 
	$__LDBL_REDIR_DECL
 (
_IO_vfsˇnf
)

24 
	`__LDBL_REDIR_DECL
 (
_IO_vÂrötf
)

	@/usr/include/bits/pthreadtypes.h

18 #i‚de‡
_BITS_PTHREADTYPES_H


19 
	#_BITS_PTHREADTYPES_H
 1

	)

21 
	~<bôs/w‹dsize.h
>

23 #ifde‡
__x86_64__


24 #i‡
__WORDSIZE
 == 64

25 
	#__SIZEOF_PTHREAD_ATTR_T
 56

	)

26 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

27 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

28 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

29 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

30 
	#__SIZEOF_PTHREAD_RWLOCK_T
 56

	)

31 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

32 
	#__SIZEOF_PTHREAD_BARRIER_T
 32

	)

33 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

35 
	#__SIZEOF_PTHREAD_ATTR_T
 32

	)

36 
	#__SIZEOF_PTHREAD_MUTEX_T
 32

	)

37 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

38 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

39 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

40 
	#__SIZEOF_PTHREAD_RWLOCK_T
 44

	)

41 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

42 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

43 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

46 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

47 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

48 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

49 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

50 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

51 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

52 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

53 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

54 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

60 
	t±hªad_t
;

63 
	u±hªad_©å_t


65 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

66 
	m__Æign
;

68 #i‚de‡
__have_±hªad_©å_t


69 
±hªad_©å_t
 
	t±hªad_©å_t
;

70 
	#__have_±hªad_©å_t
 1

	)

74 #ifde‡
__x86_64__


75 
	s__±hªad_öã∫Æ_li°


77 
__±hªad_öã∫Æ_li°
 *
	m__¥ev
;

78 
__±hªad_öã∫Æ_li°
 *
	m__√xt
;

79 } 
	t__±hªad_li°_t
;

81 
	s__±hªad_öã∫Æ_¶i°


83 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

84 } 
	t__±hªad_¶i°_t
;

92 
	s__±hªad_muãx_s


94 
	m__lock
;

95 
	m__cou¡
;

96 
	m__ow√r
;

97 #ifde‡
__x86_64__


98 
	m__nu£rs
;

102 
	m__köd
;

103 #ifde‡
__x86_64__


104 
	m__•ös
;

105 
	m__ñisi⁄
;

106 
__±hªad_li°_t
 
	m__li°
;

107 
	#__PTHREAD_MUTEX_HAVE_PREV
 1

	)

108 
	#__PTHREAD_MUTEX_HAVE_ELISION
 1

	)

110 
	m__nu£rs
;

111 
__exãnsi⁄__
 union

115 
	m__e•ös
;

116 
	m__ñisi⁄
;

117 
	#__•ös
 
d
.
__e•ös


	)

118 
	#__ñisi⁄
 
d
.
__ñisi⁄


	)

119 
	#__PTHREAD_MUTEX_HAVE_ELISION
 2

	)

120 } 
	md
;

121 
__±hªad_¶i°_t
 
	m__li°
;

124 } 
	m__d©a
;

125 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

126 
	m__Æign
;

127 } 
	t±hªad_muãx_t
;

131 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

132 
	m__Æign
;

133 } 
	t±hªad_muãx©å_t
;

142 
	m__lock
;

143 
	m__fuãx
;

144 
__exãnsi⁄__
 
	m__tŸÆ_£q
;

145 
__exãnsi⁄__
 
	m__wakeup_£q
;

146 
__exãnsi⁄__
 
	m__wokí_£q
;

147 *
	m__muãx
;

148 
	m__nwaôîs
;

149 
	m__brﬂdˇ°_£q
;

150 } 
	m__d©a
;

151 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

152 
__exãnsi⁄__
 
	m__Æign
;

153 } 
	t±hªad_c⁄d_t
;

157 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

158 
	m__Æign
;

159 } 
	t±hªad_c⁄d©å_t
;

163 
	t±hªad_key_t
;

167 
	t±hªad_⁄˚_t
;

170 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


175 #ifde‡
__x86_64__


178 
	m__lock
;

179 
	m__ƒ_ªadîs
;

180 
	m__ªadîs_wakeup
;

181 
	m__wrôî_wakeup
;

182 
	m__ƒ_ªadîs_queued
;

183 
	m__ƒ_wrôîs_queued
;

184 
	m__wrôî
;

185 
	m__sh¨ed
;

186 
	m__∑d1
;

187 
	m__∑d2
;

190 
	m__Êags
;

191 
	#__PTHREAD_RWLOCK_INT_FLAGS_SHARED
 1

	)

192 } 
	m__d©a
;

196 
	m__lock
;

197 
	m__ƒ_ªadîs
;

198 
	m__ªadîs_wakeup
;

199 
	m__wrôî_wakeup
;

200 
	m__ƒ_ªadîs_queued
;

201 
	m__ƒ_wrôîs_queued
;

204 
	m__Êags
;

205 
	m__sh¨ed
;

206 
	m__∑d1
;

207 
	m__∑d2
;

208 
	m__wrôî
;

209 } 
	m__d©a
;

211 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

212 
	m__Æign
;

213 } 
	t±hªad_rwlock_t
;

217 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

218 
	m__Æign
;

219 } 
	t±hªad_rwlock©å_t
;

223 #ifde‡
__USE_XOPEN2K


225 vﬁ©ûê
	t±hªad_•ölock_t
;

232 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

233 
	m__Æign
;

234 } 
	t±hªad_b¨rõr_t
;

238 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

239 
	m__Æign
;

240 } 
	t±hªad_b¨rõøâr_t
;

244 #i‚de‡
__x86_64__


246 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/bits/stdio-lock.h

19 #i‚de‡
_BITS_STDIO_LOCK_H


20 
	#_BITS_STDIO_LOCK_H
 1

	)

22 
	~<bôs/libc-lock.h
>

23 
	~<lowÀvñlock.h
>

27 
	#_IO_lock_öex≥nsive
 1

	)

29 °ru˘ { 
	mlock
; 
	m˙t
; *
	mow√r
; } 
	t_IO_lock_t
;

31 
	#_IO_lock_öôülizî
 { 
LLL_LOCK_INITIALIZER
, 0, 
NULL
 }

	)

33 
	#_IO_lock_öô
(
_«me
) \

34 ((
_«me
Ë(
_IO_lock_t
Ë
_IO_lock_öôülizî
 , 0)

	)

36 
	#_IO_lock_föi
(
_«me
) \

37 ((Ë0)

	)

39 
	#_IO_lock_lock
(
_«me
) \

41 *
__£lf
 = 
THREAD_SELF
; \

42 i‡((
_«me
).
ow√r
 !
__£lf
) \

44 
	`Œl_lock
 ((
_«me
).
lock
, 
LLL_PRIVATE
); \

45 (
_«me
).
ow√r
 = 
__£lf
; \

47 ++(
_«me
).
˙t
; \

48 } 0)

	)

50 
	#_IO_lock_åylock
(
_«me
) \

52 
__ªsu…
 = 0; \

53 *
__£lf
 = 
THREAD_SELF
; \

54 i‡((
_«me
).
ow√r
 !
__£lf
) \

56 i‡(
	`Œl_åylock
 ((
_«me
).
lock
) == 0) \

58 (
_«me
).
ow√r
 = 
__£lf
; \

59 (
_«me
).
˙t
 = 1; \

62 
__ªsu…
 = 
EBUSY
; \

65 ++(
_«me
).
˙t
; \

66 
__ªsu…
; \

67 })

	)

69 
	#_IO_lock_u∆ock
(
_«me
) \

71 i‡(--(
_«me
).
˙t
 == 0) \

73 (
_«me
).
ow√r
 = 
NULL
; \

74 
	`Œl_u∆ock
 ((
_«me
).
lock
, 
LLL_PRIVATE
); \

76 } 0)

	)

80 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
) \

81 
	`__libc_˛ónup_ªgi⁄_°¨t
 (((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0, 
_f˘
, _Â)

	)

82 
	#_IO_˛ónup_ªgi⁄_°¨t_nﬂrg
(
_f˘
) \

83 
	`__libc_˛ónup_ªgi⁄_°¨t
 (1, 
_f˘
, 
NULL
)

	)

84 
	#_IO_˛ónup_ªgi⁄_íd
(
_doô
) \

85 
	`__libc_˛ónup_ªgi⁄_íd
 (
_doô
)

	)

87 #i‡
deföed
 
_LIBC
 && !deföed 
NOT_IN_libc


89 #ifde‡
__EXCEPTIONS


90 
	#_IO_acquúe_lock
(
_Â
) \

92 
_IO_FILE
 *
_IO_acquúe_lock_fûe
 \

93 
	`__©åibuã__
((
	`˛ónup
 (
_IO_acquúe_lock_f˘
))) \

94 (
_Â
); \

95 
	`_IO_Êockfûe
 (
_IO_acquúe_lock_fûe
);

	)

96 
	#_IO_acquúe_lock_˛ór_Êags2
(
_Â
) \

98 
_IO_FILE
 *
_IO_acquúe_lock_fûe
 \

99 
	`__©åibuã__
((
	`˛ónup
 (
_IO_acquúe_lock_˛ór_Êags2_f˘
))) \

100 (
_Â
); \

101 
	`_IO_Êockfûe
 (
_IO_acquúe_lock_fûe
);

	)

103 
	#_IO_acquúe_lock
(
_Â
Ë
_IO_acquúe_lock_√eds_ex˚±i⁄s_íabÀd


	)

104 
	#_IO_acquúe_lock_˛ór_Êags2
(
_Â
Ë
	`_IO_acquúe_lock
 (_Â)

	)

106 
	#_IO_ªÀa£_lock
(
_Â
Ë; } 0)

	)

	@/usr/include/bits/typesizes.h

19 #i‚de‡
_BITS_TYPES_H


23 #i‚def 
_BITS_TYPESIZES_H


24 
	#_BITS_TYPESIZES_H
 1

	)

30 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


31 
	#__SYSCALL_SLONG_TYPE
 
__SQUAD_TYPE


	)

32 
	#__SYSCALL_ULONG_TYPE
 
__UQUAD_TYPE


	)

34 
	#__SYSCALL_SLONG_TYPE
 
__SLONGWORD_TYPE


	)

35 
	#__SYSCALL_ULONG_TYPE
 
__ULONGWORD_TYPE


	)

38 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

39 
	#__UID_T_TYPE
 
__U32_TYPE


	)

40 
	#__GID_T_TYPE
 
__U32_TYPE


	)

41 
	#__INO_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

42 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

43 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

44 #ifde‡
__x86_64__


45 
	#__NLINK_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

46 
	#__FSWORD_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

48 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

49 
	#__FSWORD_T_TYPE
 
__SWORD_TYPE


	)

51 
	#__OFF_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

52 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

53 
	#__PID_T_TYPE
 
__S32_TYPE


	)

54 
	#__RLIM_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

55 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

56 
	#__BLKCNT_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

57 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

58 
	#__FSBLKCNT_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

59 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

60 
	#__FSFILCNT_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

61 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

62 
	#__ID_T_TYPE
 
__U32_TYPE


	)

63 
	#__CLOCK_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

64 
	#__TIME_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

65 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

66 
	#__SUSECONDS_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

67 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

68 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

69 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

70 
	#__TIMER_T_TYPE
 *

	)

71 
	#__BLKSIZE_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

72 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

73 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

75 #ifde‡
__x86_64__


79 
	#__OFF_T_MATCHES_OFF64_T
 1

	)

82 
	#__INO_T_MATCHES_INO64_T
 1

	)

86 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/ctype.h

22 #i‚def 
_CTYPE_H


23 
	#_CTYPE_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	g__BEGIN_DECLS


30 #i‚de‡
_ISbô


39 
	~<ídün.h
>

40 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


41 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

43 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

48 
	m_ISuµî
 = 
_ISbô
 (0),

49 
	m_ISlowî
 = 
_ISbô
 (1),

50 
	m_ISÆpha
 = 
_ISbô
 (2),

51 
	m_ISdigô
 = 
_ISbô
 (3),

52 
	m_ISxdigô
 = 
_ISbô
 (4),

53 
	m_IS•a˚
 = 
_ISbô
 (5),

54 
	m_IS¥öt
 = 
_ISbô
 (6),

55 
	m_ISgøph
 = 
_ISbô
 (7),

56 
	m_ISbœnk
 = 
_ISbô
 (8),

57 
	m_IS˙ål
 = 
_ISbô
 (9),

58 
	m_ISpun˘
 = 
_ISbô
 (10),

59 
	m_ISÆnum
 = 
_ISbô
 (11)

79 c⁄° **
	$__˘y≥_b_loc
 ()

80 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

81 c⁄° 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

83 c⁄° 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

87 #i‚de‡
__˝lu•lus


88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

90 #ñi‡
deföed
 
__USE_EXTERN_INLINES


91 
	#__is˘y≥_f
(
ty≥
) \

92 
__exã∫_ölöe
 \

93 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

95  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

96 
	}

	)
}

99 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

100 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

102 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

104 
__BEGIN_NAMESPACE_STD


110 
__ex˘y≥
 (
iß um
);

111 
__ex˘y≥
 (
ißÕha
);

112 
__ex˘y≥
 (
is˙ål
);

113 
__ex˘y≥
 (
isdigô
);

114 
__ex˘y≥
 (
i¶owî
);

115 
__ex˘y≥
 (
isgøph
);

116 
__ex˘y≥
 (
i•röt
);

117 
__ex˘y≥
 (
i•un˘
);

118 
__ex˘y≥
 (
is•a˚
);

119 
__ex˘y≥
 (
isuµî
);

120 
__ex˘y≥
 (
isxdigô
);

124 
	$tﬁowî
 (
__c
Ë
__THROW
;

127 
	$touµî
 (
__c
Ë
__THROW
;

129 
__END_NAMESPACE_STD


133 #ifdef 
__USE_ISOC99


134 
__BEGIN_NAMESPACE_C99


136 
	`__ex˘y≥
 (
isbœnk
);

138 
__END_NAMESPACE_C99


141 #ifde‡
__USE_GNU


143 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

146 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


150 
	$ißscii
 (
__c
Ë
__THROW
;

154 
	$tﬂscii
 (
__c
Ë
__THROW
;

158 
	`__ex˘y≥
 (
_touµî
);

159 
	`__ex˘y≥
 (
_tﬁowî
);

163 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

164 (
__exãnsi⁄__
 \

165 ({ 
__ªs
; \

166 i‡( (
c
) > 1) \

168 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

170 
__c
 = (
c
); \

171 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

174 
__ªs
 = 
f
 
¨gs
; \

177 
__ªs
 = (
a
)[(Ë(
c
)]; \

178 
__ªs
; 
	}
}))

	)

180 #i‡!
deföed
 
__NO_CTYPE


181 #ifde‡
__is˘y≥_f


182 
	$__is˘y≥_f
 (
Ænum
)

183 
	$__is˘y≥_f
 (
Æpha
)

184 
	$__is˘y≥_f
 (
˙ål
)

185 
	$__is˘y≥_f
 (
digô
)

186 
	$__is˘y≥_f
 (
lowî
)

187 
	$__is˘y≥_f
 (
gøph
)

188 
	$__is˘y≥_f
 (
¥öt
)

189 
	$__is˘y≥_f
 (
pun˘
)

190 
	$__is˘y≥_f
 (
•a˚
)

191 
	$__is˘y≥_f
 (
uµî
)

192 
	$__is˘y≥_f
 (
xdigô
)

193 #ifde‡
__USE_ISOC99


194 
	$__is˘y≥_f
 (
bœnk
)

196 #ñi‡
deföed
 
__is˘y≥


197 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

198 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

199 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

200 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

201 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

202 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

203 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

204 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

205 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

206 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

207 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

208 #ifde‡
__USE_ISOC99


209 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

213 #ifde‡
__USE_EXTERN_INLINES


214 
__exã∫_ölöe
 

215 
	`__NTH
 (
	$tﬁowî
 (
__c
))

217  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

218 
	}
}

220 
__exã∫_ölöe
 

221 
__NTH
 (
	$touµî
 (
__c
))

223  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

224 
	}
}

227 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


228 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

229 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

232 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


233 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

234 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

236 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

237 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

243 #ifde‡
__USE_XOPEN2K8


257 
	~<xloˇÀ.h
>

261 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

262 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

264 
	#__ex˘y≥_l
(
«me
) \

265 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

271 
__ex˘y≥_l
 (
iß um_l
);

272 
__ex˘y≥_l
 (
ißÕha_l
);

273 
__ex˘y≥_l
 (
is˙ål_l
);

274 
__ex˘y≥_l
 (
isdigô_l
);

275 
__ex˘y≥_l
 (
i¶owî_l
);

276 
__ex˘y≥_l
 (
isgøph_l
);

277 
__ex˘y≥_l
 (
i•röt_l
);

278 
__ex˘y≥_l
 (
i•un˘_l
);

279 
__ex˘y≥_l
 (
is•a˚_l
);

280 
__ex˘y≥_l
 (
isuµî_l
);

281 
__ex˘y≥_l
 (
isxdigô_l
);

283 
__ex˘y≥_l
 (
isbœnk_l
);

287 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

288 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

291 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

292 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

294 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


295 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

296 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

297 
	#__touµî_l
(
c
, 
loˇÀ
) \

298 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

299 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

300 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

304 #i‚de‡
__NO_CTYPE


305 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

306 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

307 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

308 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

309 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

310 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

311 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

312 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

313 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

314 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

315 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

317 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

319 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


320 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

321 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

324 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

325 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

326 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

327 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

328 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

329 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

330 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

331 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

332 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

333 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

334 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

336 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

338 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


339 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

340 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

347 
__END_DECLS


	@/usr/include/endian.h

18 #i‚def 
_ENDIAN_H


19 
	#_ENDIAN_H
 1

	)

21 
	~<„©uªs.h
>

31 
	#__LITTLE_ENDIAN
 1234

	)

32 
	#__BIG_ENDIAN
 4321

	)

33 
	#__PDP_ENDIAN
 3412

	)

36 
	~<bôs/ídün.h
>

40 #i‚de‡
__FLOAT_WORD_ORDER


41 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

44 #ifdef 
__USE_BSD


45 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

46 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

47 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

48 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

51 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


52 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

53 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


54 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

58 #i‡
deföed
 
__USE_BSD
 && !deföed 
__ASSEMBLER__


60 
	~<bôs/byãsw≠.h
>

62 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


63 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

64 
	#htﬁe16
(
x
Ë(x)

	)

65 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

66 
	#À16toh
(
x
Ë(x)

	)

68 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

69 
	#htﬁe32
(
x
Ë(x)

	)

70 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

71 
	#À32toh
(
x
Ë(x)

	)

73 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

74 
	#htﬁe64
(
x
Ë(x)

	)

75 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

76 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/gnu/stubs.h

6 #i‡!
deföed
 
__x86_64__


7 
	~<gnu/°ubs-32.h
>

9 #i‡
deföed
 
__x86_64__
 && deföed 
__LP64__


10 
	~<gnu/°ubs-64.h
>

12 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


13 
	~<gnu/°ubs-x32.h
>

	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

36 #ifde‡
__GCC_IEC_559


37 #i‡
__GCC_IEC_559
 > 0

38 
	#__STDC_IEC_559__
 1

	)

41 
	#__STDC_IEC_559__
 1

	)

44 #ifde‡
__GCC_IEC_559_COMPLEX


45 #i‡
__GCC_IEC_559_COMPLEX
 > 0

46 
	#__STDC_IEC_559_COMPLEX__
 1

	)

49 
	#__STDC_IEC_559_COMPLEX__
 1

	)

54 
	#__STDC_ISO_10646__
 201103L

	)

57 
	#__STDC_NO_THREADS__
 1

	)

	@/usr/include/sys/cdefs.h

18 #i‚def 
_SYS_CDEFS_H


19 
	#_SYS_CDEFS_H
 1

	)

22 #i‚de‡
_FEATURES_H


23 
	~<„©uªs.h
>

29 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


34 #unde‡
__P


35 #unde‡
__PMT


37 #ifde‡
__GNUC__


41 #i‡
__GNUC_PREREQ
 (4, 6Ë&& !
deföed
 
_LIBC


42 
	#__LEAF
 , 
__Àaf__


	)

43 
	#__LEAF_ATTR
 
	`__©åibuã__
 ((
__Àaf__
))

	)

45 
	#__LEAF


	)

46 
	#__LEAF_ATTR


	)

54 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

55 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
))

	)

56 
	#__THROWNL
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

57 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
)Ë
	)
fct

59 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

60 
	#__THROW
 
	`throw
 ()

	)

61 
	#__THROWNL
 
	`throw
 ()

	)

62 
	#__NTH
(
f˘
Ë
__LEAF_ATTR
 f˘ 
	`throw
 ()

	)

64 
	#__THROW


	)

65 
	#__THROWNL


	)

66 
	#__NTH
(
f˘
Ë
	)
fct

72 
	#__ölöe


	)

74 
	#__THROW


	)

75 
	#__THROWNL


	)

76 
	#__NTH
(
f˘
Ë
	)
fct

82 
	#__P
(
¨gs
Ë
	)
args

83 
	#__PMT
(
¨gs
Ë
	)
args

88 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

89 
	#__STRING
(
x
Ë#x

	)

92 
	#__±r_t
 *

	)

93 
	#__l⁄g_doubÀ_t
 

	)

97 #ifdef 
__˝lu•lus


98 
	#__BEGIN_DECLS
 "C" {

	)

99 
	#__END_DECLS
 }

	)

101 
	#__BEGIN_DECLS


	)

102 
	#__END_DECLS


	)

111 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES


112 
	#__BEGIN_NAMESPACE_STD
 
«me•a˚
 
°d
 {

	)

113 
	#__END_NAMESPACE_STD
 }

	)

114 
	#__USING_NAMESPACE_STD
(
«me
Ë
usög
 
°d
::«me;

	)

115 
	#__BEGIN_NAMESPACE_C99
 
«me•a˚
 
__c99
 {

	)

116 
	#__END_NAMESPACE_C99
 }

	)

117 
	#__USING_NAMESPACE_C99
(
«me
Ë
usög
 
__c99
::«me;

	)

122 
	#__BEGIN_NAMESPACE_STD


	)

123 
	#__END_NAMESPACE_STD


	)

124 
	#__USING_NAMESPACE_STD
(
«me
)

	)

125 
	#__BEGIN_NAMESPACE_C99


	)

126 
	#__END_NAMESPACE_C99


	)

127 
	#__USING_NAMESPACE_C99
(
«me
)

	)

132 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

133 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

134 
	#__f‹tify_fun˘i⁄
 
__exã∫_Æways_ölöe
 
__©åibuã_¨tificül__


	)

136 #i‡
__GNUC_PREREQ
 (4,3)

137 
	#__w¨nde˛
(
«me
, 
msg
) \

138 
	`«me
 (Ë
	`__©åibuã__
((
	`__w¨nög__
 (
msg
)))

	)

139 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

140 
	#__îr‹de˛
(
«me
, 
msg
) \

141 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

143 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

144 
	#__w¨«âr
(
msg
)

	)

145 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

149 #i‡
__GNUC_PREREQ
 (2,97)

151 
	#__Êex¨r
 []

	)

153 #ifde‡
__GNUC__


154 
	#__Êex¨r
 [0]

	)

156 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

157 
	#__Êex¨r
 []

	)

160 
	#__Êex¨r
 [1]

	)

176 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

178 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

179 #ifde‡
__˝lu•lus


180 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

181 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

182 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

183 
«me
 
¥Ÿo
 
__THROWNL
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

185 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

186 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

187 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

188 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROWNL


	)

190 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

191 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

204 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

205 
	#__©åibuã__
(
xyz
Ë

	)

211 #i‡
__GNUC_PREREQ
 (2,96)

212 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

214 
	#__©åibuã_mÆloc__


	)

219 #i‡
__GNUC_PREREQ
 (4, 3)

220 
	#__©åibuã_Æloc_size__
(
∑øms
) \

221 
	`__©åibuã__
 ((
__Æloc_size__
 
∑øms
))

	)

223 
	#__©åibuã_Æloc_size__
(
∑øms
Ë

	)

229 #i‡
__GNUC_PREREQ
 (2,96)

230 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

232 
	#__©åibuã_puª__


	)

236 #i‡
__GNUC_PREREQ
 (2,5)

237 
	#__©åibuã_c⁄°__
 
	`__©åibuã__
 ((
__c⁄°__
))

	)

239 
	#__©åibuã_c⁄°__


	)

245 #i‡
__GNUC_PREREQ
 (3,1)

246 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

247 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

249 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

250 
	#__©åibuã_noölöe__


	)

254 #i‡
__GNUC_PREREQ
 (3,2)

255 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

257 
	#__©åibuã_dïªˇãd__


	)

266 #i‡
__GNUC_PREREQ
 (2,8)

267 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

269 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

276 #i‡
__GNUC_PREREQ
 (2,97)

277 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

278 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

280 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

285 #i‡
__GNUC_PREREQ
 (3,3)

286 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

288 
	#__n⁄nuŒ
(
∑øms
)

	)

293 #i‡
__GNUC_PREREQ
 (3,4)

294 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

295 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

296 #i‡
__USE_FORTIFY_LEVEL
 > 0

297 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

300 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

302 #i‚de‡
__wur


303 
	#__wur


	)

307 #i‡
__GNUC_PREREQ
 (3,2)

308 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

310 
	#__Æways_ölöe
 
__ölöe


	)

315 #i‡
__GNUC_PREREQ
 (4,3)

316 
	#__©åibuã_¨tificül__
 
	`__©åibuã__
 ((
__¨tificül__
))

	)

318 
	#__©åibuã_¨tificül__


	)

321 #ifde‡
__GNUC__


326 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__GNUC_GNU_INLINE__


327 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

328 
	#__exã∫_Æways_ölöe
 \

329 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

331 
	#__exã∫_ölöe
 
__ölöe


	)

332 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

335 
	#__exã∫_ölöe


	)

336 
	#__exã∫_Æways_ölöe


	)

341 #i‡
__GNUC_PREREQ
 (4,3)

342 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

343 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

350 #i‡!
__GNUC_PREREQ
 (2,8)

351 
	#__exãnsi⁄__


	)

355 #i‡!
__GNUC_PREREQ
 (2,92)

356 
	#__ª°ri˘


	)

362 #i‡
__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


363 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

365 #ifde‡
__GNUC__


366 
	#__ª°ri˘_¨r


	)

368 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

369 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

372 
	#__ª°ri˘_¨r


	)

377 #i‡
__GNUC__
 >= 3

378 
	#__glibc_u∆ikñy
(
c⁄d
Ë
	`__buûtö_ex≥˘
 ((c⁄d), 0)

	)

379 
	#__glibc_likñy
(
c⁄d
Ë
	`__buûtö_ex≥˘
 ((c⁄d), 1)

	)

381 
	#__glibc_u∆ikñy
(
c⁄d
Ë(c⁄d)

	)

382 
	#__glibc_likñy
(
c⁄d
Ë(c⁄d)

	)

385 
	~<bôs/w‹dsize.h
>

387 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


388 
	#__LDBL_COMPAT
 1

	)

389 #ifde‡
__REDIRECT


390 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

391 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

392 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

393 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

394 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

395 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

396 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

397 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

398 
	#__LDBL_REDIR_DECL
(
«me
) \

399 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

400 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

401 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

402 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

403 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

406 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


407 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

408 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

409 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

410 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

411 
	#__LDBL_REDIR_DECL
(
«me
)

	)

412 #ifde‡
__REDIRECT


413 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

414 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

415 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

	@/usr/include/sys/select.h

21 #i‚de‡
_SYS_SELECT_H


22 
	#_SYS_SELECT_H
 1

	)

24 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

30 
	~<bôs/£À˘.h
>

33 
	~<bôs/sig£t.h
>

35 #i‚de‡
__sig£t_t_deföed


36 
	#__sig£t_t_deföed


	)

37 
__sig£t_t
 
	tsig£t_t
;

41 
	#__√ed_time_t


	)

42 
	#__√ed_time•ec


	)

43 
	~<time.h
>

44 
	#__√ed_timevÆ


	)

45 
	~<bôs/time.h
>

47 #i‚de‡
__su£c⁄ds_t_deföed


48 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

49 
	#__su£c⁄ds_t_deföed


	)

54 
	t__fd_mask
;

57 #unde‡
__NFDBITS


59 
	#__NFDBITS
 (8 * (Ë (
__fd_mask
))

	)

60 
	#__FD_ELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

61 
	#__FD_MASK
(
d
Ë((
__fd_mask
Ë1 << ((dË% 
__NFDBITS
))

	)

68 #ifde‡
__USE_XOPEN


69 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

70 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

72 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

73 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

75 } 
	tfd_£t
;

78 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

80 #ifde‡
__USE_MISC


82 
__fd_mask
 
	tfd_mask
;

85 
	#NFDBITS
 
__NFDBITS


	)

90 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

91 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

92 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

93 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

96 
__BEGIN_DECLS


106 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

107 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

108 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

109 
timevÆ
 *
__ª°ri˘
 
__timeout
);

111 #ifde‡
__USE_XOPEN2K


118 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

119 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

120 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

121 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

122 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

127 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__GNUC__


128 
	~<bôs/£À˘2.h
>

131 
	g__END_DECLS


	@/usr/include/sys/sysmacros.h

19 #i‚de‡
_SYS_SYSMACROS_H


20 
	#_SYS_SYSMACROS_H
 1

	)

22 
	~<„©uªs.h
>

24 
__BEGIN_DECLS


26 
__exãnsi⁄__


27 
	$gnu_dev_maj‹
 (
__dev
)

28 
__THROW
 
__©åibuã_c⁄°__
;

29 
__exãnsi⁄__


30 
	$gnu_dev_mö‹
 (
__dev
)

31 
__THROW
 
__©åibuã_c⁄°__
;

32 
__exãnsi⁄__


33 
	$gnu_dev_makedev
 (
__maj‹
,

34 
__mö‹
)

35 
__THROW
 
__©åibuã_c⁄°__
;

37 #ifde‡
__USE_EXTERN_INLINES


38 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

39 
	`__NTH
 (
	$gnu_dev_maj‹
 (
__dev
))

41  ((
__dev
 >> 8) & 0xfff) | (() (__dev >> 32) & ~0xfff);

42 
	}
}

44 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

45 
__NTH
 (
	$gnu_dev_mö‹
 (
__dev
))

47  (
__dev
 & 0xff) | (() (__dev >> 12) & ~0xff);

48 
	}
}

50 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

51 
__NTH
 (
	$gnu_dev_makedev
 (
__maj‹
, 
__mö‹
))

53  ((
__mö‹
 & 0xffË| ((
__maj‹
 & 0xfff) << 8)

54 | (((Ë(
__mö‹
 & ~0xff)) << 12)

55 | (((Ë(
__maj‹
 & ~0xfff)) << 32));

56 
	}
}

58 
	g__END_DECLS


61 
	#maj‹
(
dev
Ë
	`gnu_dev_maj‹
 (dev)

	)

62 
	#mö‹
(
dev
Ë
	`gnu_dev_mö‹
 (dev)

	)

63 
	#makedev
(
maj
, 
mö
Ë
	`gnu_dev_makedev
 (maj, mö)

	)

	@/usr/include/time.h

22 #i‚def 
_TIME_H


24 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

25 ! 
deföed
 
	g__√ed_time•ec
)

26 
	#_TIME_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


33 #ifdef 
_TIME_H


35 
	#__√ed_size_t


	)

36 
	#__√ed_NULL


	)

37 
	~<°ddef.h
>

41 
	~<bôs/time.h
>

44 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


45 #i‚de‡
CLK_TCK


46 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

52 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

53 
	#__˛ock_t_deföed
 1

	)

55 
	~<bôs/ty≥s.h
>

57 
__BEGIN_NAMESPACE_STD


59 
__˛ock_t
 
	t˛ock_t
;

60 
	g__END_NAMESPACE_STD


61 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


62 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

66 #unde‡
__√ed_˛ock_t


68 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

69 
	#__time_t_deföed
 1

	)

71 
	~<bôs/ty≥s.h
>

73 
__BEGIN_NAMESPACE_STD


75 
__time_t
 
	ttime_t
;

76 
__END_NAMESPACE_STD


77 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


78 
	$__USING_NAMESPACE_STD
(
time_t
)

82 #unde‡
__√ed_time_t


84 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

85 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

86 
	#__˛ockid_t_deföed
 1

	)

88 
	~<bôs/ty≥s.h
>

91 
__˛ockid_t
 
	t˛ockid_t
;

94 #unde‡
__˛ockid_time_t


96 #i‡!
deföed
 
__timî_t_deföed
 && \

97 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

98 
	#__timî_t_deföed
 1

	)

100 
	~<bôs/ty≥s.h
>

103 
__timî_t
 
	ttimî_t
;

106 #unde‡
__√ed_timî_t


109 #i‡(!
deföed
 
__time•ec_deföed
 \

110 && ((
deföed
 
_TIME_H
 \

111 && (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
 \

112 || 
deföed
 
__USE_ISOC11
)) \

113 || 
deföed
 
__√ed_time•ec
))

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
__sysˇŒ_¶⁄g_t
 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 c⁄° *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 c⁄° *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 #ifde‡
__USE_ISOC11


182 
	#TIME_UTC
 1

	)

186 
__BEGIN_NAMESPACE_STD


189 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

192 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

195 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

196 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

199 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

205 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

206 c⁄° *
__ª°ri˘
 
__f‹m©
,

207 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

208 
__END_NAMESPACE_STD


210 #ifde‡
__USE_XOPEN


213 *
	$°Ωtime
 (c⁄° *
__ª°ri˘
 
__s
,

214 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

215 
__THROW
;

218 #ifde‡
__USE_XOPEN2K8


221 
	~<xloˇÀ.h
>

223 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

224 c⁄° *
__ª°ri˘
 
__f‹m©
,

225 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

229 #ifde‡
__USE_GNU


230 *
	$°Ωtime_l
 (c⁄° *
__ª°ri˘
 
__s
,

231 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

232 
__loˇÀ_t
 
__loc
Ë
__THROW
;

236 
__BEGIN_NAMESPACE_STD


239 
tm
 *
	$gmtime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

243 
tm
 *
	$loˇ…ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

244 
__END_NAMESPACE_STD


246 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


249 
tm
 *
	$gmtime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

250 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

254 
tm
 *
	$loˇ…ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

255 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

258 
__BEGIN_NAMESPACE_STD


261 *
	$as˘ime
 (c⁄° 
tm
 *
__ç
Ë
__THROW
;

264 *
	$˘ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

265 
__END_NAMESPACE_STD


267 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


272 *
	$as˘ime_r
 (c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

273 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
	$˘ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

277 *
__ª°ri˘
 
__buf
Ë
__THROW
;

282 *
__tz«me
[2];

283 
__daylight
;

284 
__timez⁄e
;

287 #ifdef 
__USE_POSIX


289 *
tz«me
[2];

293 
	$tz£t
 (Ë
__THROW
;

296 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


297 
daylight
;

298 
timez⁄e
;

301 #ifde‡
__USE_SVID


304 
	$°ime
 (c⁄° 
time_t
 *
__whí
Ë
__THROW
;

310 
	#__i¶óp
(
yór
) \

311 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

314 #ifde‡
__USE_MISC


319 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

322 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

325 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

329 #ifde‡
__USE_POSIX199309


334 
	`«no¶ìp
 (c⁄° 
time•ec
 *
__ªque°ed_time
,

335 
time•ec
 *
__ªmaöög
);

339 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

342 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

345 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, c⁄° 
time•ec
 *
__ç
)

346 
__THROW
;

348 #ifde‡
__USE_XOPEN2K


353 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

354 c⁄° 
time•ec
 *
__ªq
,

355 
time•ec
 *
__ªm
);

358 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

363 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

364 
sigevít
 *
__ª°ri˘
 
__evp
,

365 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

368 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

371 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

372 c⁄° 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

373 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

376 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

377 
__THROW
;

380 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

384 #ifde‡
__USE_ISOC11


386 
	$time•ec_gë
 (
time•ec
 *
__ts
, 
__ba£
)

387 
__THROW
 
	`__n⁄nuŒ
 ((1));

391 #ifde‡
__USE_XOPEN_EXTENDED


403 
gëd©e_îr
;

412 
tm
 *
	`gëd©e
 (c⁄° *
__°rög
);

415 #ifde‡
__USE_GNU


426 
	`gëd©e_r
 (c⁄° *
__ª°ri˘
 
__°rög
,

427 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

430 
__END_DECLS


	@/usr/include/bits/byteswap.h

19 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


23 #i‚de‡
_BITS_BYTESWAP_H


24 
	#_BITS_BYTESWAP_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

28 
	~<bôs/w‹dsize.h
>

31 
	#__bsw≠_c⁄°™t_16
(
x
) \

32 ((Ë((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8)))

	)

35 
	~<bôs/byãsw≠-16.h
>

38 
	#__bsw≠_c⁄°™t_32
(
x
) \

39 ((((
x
) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >> 8) | \

40 (((
x
Ë& 0x0000ff00Ë<< 8Ë| (((xË& 0x000000ffË<< 24))

	)

42 #ifde‡
__GNUC__


43 #i‡
__GNUC_PREREQ
 (4, 3)

44 
__ölöe
 

45 
	$__bsw≠_32
 (
__bsx
)

47  
	`__buûtö_bsw≠32
 (
__bsx
);

48 
	}
}

49 #ñi‡
__GNUC__
 >= 2

50 #i‡
__WORDSIZE
 =64 || (
deföed
 
__i486__
 || deföed 
__≥¡ium__
 \

51 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

52 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

53 || 
deföed
 
	g__k6__
 || deföed 
	g__noc⁄a__
 \

54 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__geode__
 \

55 || 
deföed
 
	g__amdÁm10__
)

58 
	#__bsw≠_32
(
x
) \

59 (
__exãnsi⁄__
 \

60 ({ 
__v
, 
__x
 = (
x
); \

61 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

62 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

64 
	`__asm__
 ("bsw≠ %0" : "Ù" (
__v
Ë: "0" (
__x
)); \

65 
__v
; }))

	)

67 
	#__bsw≠_32
(
x
) \

68 (
__exãnsi⁄__
 \

69 ({ 
__v
, 
__x
 = (
x
); \

70 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

71 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

73 
	`__asm__
 ("rorw $8, %w0;" \

76 : "Ù" (
__v
) \

77 : "0" (
__x
) \

79 
__v
; }))

	)

82 
	#__bsw≠_32
(
x
) \

83 (
__exãnsi⁄__
 \

84 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_32
 (__x); }))

	)

87 
__ölöe
 

88 
	$__bsw≠_32
 (
__bsx
)

90  
	`__bsw≠_c⁄°™t_32
 (
__bsx
);

91 
	}
}

95 #i‡
__GNUC_PREREQ
 (2, 0)

97 
	#__bsw≠_c⁄°™t_64
(
x
) \

98 (
	`__exãnsi⁄__
 ((((
x
) & 0xff00000000000000ull) >> 56) \

99 | (((
x
) & 0x00ff000000000000ull) >> 40) \

100 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

101 | (((
x
) & 0x000000ff00000000ull) >> 8) \

102 | (((
x
) & 0x00000000ff000000ull) << 8) \

103 | (((
x
) & 0x0000000000ff0000ull) << 24) \

104 | (((
x
) & 0x000000000000ff00ull) << 40) \

105 | (((
x
Ë& 0x00000000000000ffuŒË<< 56)))

	)

107 #i‡
__GNUC_PREREQ
 (4, 3)

108 
__ölöe
 
__uöt64_t


109 
	$__bsw≠_64
 (
__uöt64_t
 
__bsx
)

111  
	`__buûtö_bsw≠64
 (
__bsx
);

112 
	}
}

113 #ñi‡
__WORDSIZE
 == 64

114 
	#__bsw≠_64
(
x
) \

115 (
__exãnsi⁄__
 \

116 ({ 
__uöt64_t
 
__v
, 
__x
 = (
x
); \

117 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

118 
__v
 = 
	`__bsw≠_c⁄°™t_64
 (
__x
); \

120 
	`__asm__
 ("bsw≠ %q0" : "Ù" (
__v
Ë: "0" (
__x
)); \

121 
__v
; }))

	)

123 
	#__bsw≠_64
(
x
) \

124 (
__exãnsi⁄__
 \

125 ({ uni⁄ { 
__exãnsi⁄__
 
__uöt64_t
 
__Œ
; \

126 
__l
[2]; } 
__w
, 
__r
; \

127 i‡(
	`__buûtö_c⁄°™t_p
 (
x
)) \

128 
__r
.
__Œ
 = 
	`__bsw≠_c⁄°™t_64
 (
x
); \

131 
__w
.
__Œ
 = (
x
); \

132 
__r
.
__l
[0] = 
	`__bsw≠_32
 (
__w
.__l[1]); \

133 
__r
.
__l
[1] = 
	`__bsw≠_32
 (
__w
.__l[0]); \

135 
__r
.
__Œ
; }))

	)

138 
	#__bsw≠_c⁄°™t_64
(
x
) \

139 ((((
x
) & 0xff00000000000000ull) >> 56) \

140 | (((
x
) & 0x00ff000000000000ull) >> 40) \

141 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

142 | (((
x
) & 0x000000ff00000000ull) >> 8) \

143 | (((
x
) & 0x00000000ff000000ull) << 8) \

144 | (((
x
) & 0x0000000000ff0000ull) << 24) \

145 | (((
x
) & 0x000000000000ff00ull) << 40) \

146 | (((
x
Ë& 0x00000000000000ffuŒË<< 56))

	)

148 
__ölöe
 
__uöt64_t


149 
	$__bsw≠_64
 (
__uöt64_t
 
__bsx
)

151  
	`__bsw≠_c⁄°™t_64
 (
__bsx
);

152 
	}
}

	@/usr/include/bits/endian.h

3 #i‚de‡
_ENDIAN_H


7 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/libc-lock.h

19 #i‚de‡
_BITS_LIBC_LOCK_H


20 
	#_BITS_LIBC_LOCK_H
 1

	)

22 
	~<±hªad.h
>

23 
	#__√ed_NULL


	)

24 
	~<°ddef.h
>

27 #ifde‡
_LIBC


28 
	~<lowÀvñlock.h
>

29 
	~<és.h
>

30 
	~<±hªad-fun˘i⁄s.h
>

31 
	~<î∫o.h
>

32 
	~<gnu/›ti⁄-groups.h
>

36 #i‡
deföed
 
_LIBC
 || deföed 
_IO_MTSAFE_IO


37 #i‡(
deföed
 
NOT_IN_libc
 && !deföed 
IS_IN_lib±hªad
Ë|| !deföed 
_LIBC


38 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__libc_lock_ªcursive_t
;

40 °ru˘ { 
	mlock
; 
	m˙t
; *
	mow√r
; } 
	t__libc_lock_ªcursive_t
;

43 
__libc_lock_ªcursive_›aque__
 
	t__libc_lock_ªcursive_t
;

53 
	#__libc_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

54 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

58 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

59 #i‡
LLL_LOCK_INITIALIZER
 == 0

60 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

61 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

63 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

64 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

66 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

67 { 
LLL_LOCK_INITIALIZER
, 0, 
NULL
 }

	)

69 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

70 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

71 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

72 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

76 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

77 
	#__libc_lock_öô_ªcursive
(
NAME
) \

78 ((
NAME
Ë(
__libc_lock_ªcursive_t
Ë
_LIBC_LOCK_RECURSIVE_INITIALIZER
, 0)

	)

80 
	#__libc_lock_öô_ªcursive
(
NAME
) \

82 i‡(
__±hªad_muãx_öô
 !
NULL
) \

84 
±hªad_muãx©å_t
 
__©å
; \

85 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

86 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

87 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

88 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

90 } 0)

	)

94 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

95 
	#__libc_lock_föi_ªcursive
(
NAME
Ë((Ë0)

	)

97 
	#__libc_lock_föi_ªcursive
(
NAME
) \

98 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_de°roy
, (&(
NAME
).
muãx
), 0)

	)

102 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

103 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

107 
__libc_lock_lock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

108 
libc_hiddí_¥Ÿo
 (
__libc_lock_lock_ªcursive_‚
);

110 #i‡
__OPTION_EGLIBC_BIG_MACROS


111 
	#__libc_lock_lock_ªcursive
(
NAME
) \

113 *
£lf
 = 
THREAD_SELF
; \

114 i‡((
NAME
).
ow√r
 !
£lf
) \

116 
	`Œl_lock
 ((
NAME
).
lock
, 
LLL_PRIVATE
); \

117 (
NAME
).
ow√r
 = 
£lf
; \

119 ++(
NAME
).
˙t
; \

120 } 0)

	)

122 
	#__libc_lock_lock_ªcursive
(
NAME
) \

123 
	`__libc_lock_lock_ªcursive_‚
 (&(
NAME
))

	)

126 
	#__libc_lock_lock_ªcursive
(
NAME
) \

127 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
).
muãx
), 0)

	)

131 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

132 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

136 
__libc_lock_åylock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

137 
libc_hiddí_¥Ÿo
 (
__libc_lock_åylock_ªcursive_‚
);

139 #i‡
__OPTION_EGLIBC_BIG_MACROS


140 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

142 
ªsu…
 = 0; \

143 *
£lf
 = 
THREAD_SELF
; \

144 i‡((
NAME
).
ow√r
 !
£lf
) \

146 i‡(
	`Œl_åylock
 ((
NAME
).
lock
) == 0) \

148 (
NAME
).
ow√r
 = 
£lf
; \

149 (
NAME
).
˙t
 = 1; \

152 
ªsu…
 = 
EBUSY
; \

155 ++(
NAME
).
˙t
; \

156 
ªsu…
; \

157 })

	)

159 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

160 
	`__libc_lock_åylock_ªcursive_‚
 (&(
NAME
))

	)

163 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

164 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
).
muãx
), 0)

	)

168 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

169 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

173 
__libc_lock_u∆ock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

174 
libc_hiddí_¥Ÿo
 (
__libc_lock_u∆ock_ªcursive_‚
);

176 #i‡
__OPTION_EGLIBC_BIG_MACROS


178 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

180 i‡(--(
NAME
).
˙t
 == 0) \

182 (
NAME
).
ow√r
 = 
NULL
; \

183 
	`Œl_u∆ock
 ((
NAME
).
lock
, 
LLL_PRIVATE
); \

185 } 0)

	)

187 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

188 
	`__libc_lock_u∆ock_ªcursive_‚
 (&(
NAME
))

	)

191 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

192 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
).
muãx
), 0)

	)

199 
_±hªad_˛ónup_push_de„r
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

200 (*
routöe
Ë(*), *
¨g
);

201 
	`_±hªad_˛ónup_p›_ª°‹e
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

202 
execuã
);

205 
	#__libc_˛ónup_ªgi⁄_°¨t
(
DOIT
, 
FCT
, 
ARG
) \

206 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

207 
_avaû
; \

208 i‡(
DOIT
) { \

209 
_avaû
 = 
	`PTFAVAIL
 (
_±hªad_˛ónup_push_de„r
); \

210 i‡(
_avaû
) { \

211 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_push_de„r
, (&
_buf„r
, 
FCT
, \

212 
ARG
)); \

214 
_buf„r
.
__routöe
 = (
FCT
); \

215 
_buf„r
.
__¨g
 = (
ARG
); \

218 
_avaû
 = 0; \

219 }

	)

222 
	#__libc_˛ónup_ªgi⁄_íd
(
DOIT
) \

223 i‡(
_avaû
) { \

224 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_p›_ª°‹e
, (&
_buf„r
, 
DOIT
));\

225 } i‡(
DOIT
) \

226 
_buf„r
.
	`__routöe
 (_buf„r.
__¨g
); \

227 
	}

	)
}

232 #ifde‡
_LIBC


233 
	~"libc-lockP.h
"

	@/usr/include/bits/select.h

18 #i‚de‡
_SYS_SELECT_H


22 
	~<bôs/w‹dsize.h
>

25 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

27 #i‡
__WORDSIZE
 == 64

28 
	#__FD_ZERO_STOS
 "°osq"

	)

30 
	#__FD_ZERO_STOS
 "°o¶"

	)

33 
	#__FD_ZERO
(
fd•
) \

35 
__d0
, 
__d1
; \

36 
__asm__
 
	`__vﬁ©ûe__
 ("˛d;Ñï; " 
__FD_ZERO_STOS
 \

37 : "=c" (
__d0
), "=D" (
__d1
) \

38 : "a" (0), "0" ( (
fd_£t
) \

39 /  (
__fd_mask
)), \

40 "1" (&
	`__FDS_BITS
 (
fd•
)[0]) \

42 } 0)

	)

48 
	#__FD_ZERO
(
£t
) \

50 
__i
; \

51 
fd_£t
 *
__¨r
 = (
£t
); \

52 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

53 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

54 } 0)

	)

58 
	#__FD_SET
(
d
, 
£t
) \

59 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] |
	`__FD_MASK
 (d)))

	)

60 
	#__FD_CLR
(
d
, 
£t
) \

61 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] &~
	`__FD_MASK
 (d)))

	)

62 
	#__FD_ISSET
(
d
, 
£t
) \

63 ((
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] & 
	`__FD_MASK
 (d)Ë!0)

	)

	@/usr/include/bits/select2.h

19 #i‚de‡
_SYS_SELECT_H


24 
__fdñt_chk
 (
__d
);

25 
	$__fdñt_w¨n
 (
__d
)

26 
	`__w¨«âr
 ("bit outside of fd_set selected");

27 #unde‡
__FD_ELT


28 
	#__FD_ELT
(
d
) \

29 
__exãnsi⁄__
 \

30 ({ 
__d
 = (
d
); \

31 (
	`__buûtö_c⁄°™t_p
 (
__d
) \

32 ? (0 <
__d
 && __d < 
__FD_SETSIZE
 \

33 ? (
__d
 / 
__NFDBITS
) \

34 : 
	`__fdñt_w¨n
 (
__d
)) \

35 : 
	`__fdñt_chk
 (
__d
)); 
	}
})

	)

	@/usr/include/bits/sigset.h

19 #i‚def 
_SIGSET_H_ty≥s


20 
	#_SIGSET_H_ty≥s
 1

	)

22 
	t__sig_©omic_t
;

26 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

29 
	m__vÆ
[
_SIGSET_NWORDS
];

30 } 
	t__sig£t_t
;

41 #i‡!
deföed
 
_SIGSET_H_‚s
 && deföed 
_SIGNAL_H


42 
	#_SIGSET_H_‚s
 1

	)

44 #i‚de‡
_EXTERN_INLINE


45 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

49 
	#__sigmask
(
sig
) \

50 (((Ë1Ë<< (((
sig
Ë- 1Ë% (8 *  ())))

	)

53 
	#__sigw‹d
(
sig
Ë(((sigË- 1Ë/ (8 *  ()))

	)

55 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

56 
	#__sigem±y£t
(
£t
) \

57 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

58 
sig£t_t
 *
__£t
 = (
£t
); \

59 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = 0; \

60 0; }))

	)

61 
	#__sigfûl£t
(
£t
) \

62 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

63 
sig£t_t
 *
__£t
 = (
£t
); \

64 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = ~0UL; \

65 0; }))

	)

67 #ifde‡
__USE_GNU


71 
	#__sigi£m±y£t
(
£t
) \

72 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

73 c⁄° 
sig£t_t
 *
__£t
 = (
£t
); \

74 
__ªt
 = 
__£t
->
__vÆ
[--
__˙t
]; \

75 !
__ªt
 && --
__˙t
 >= 0) \

76 
__ªt
 = 
__£t
->
__vÆ
[
__˙t
]; \

77 
__ªt
 =0; }))

	)

78 
	#__sig™d£t
(
de°
, 
À·
, 
right
) \

79 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

80 
sig£t_t
 *
__de°
 = (
de°
); \

81 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

82 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

83 --
__˙t
 >= 0) \

84 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

85 & 
__right
->
__vÆ
[
__˙t
]); \

86 0; }))

	)

87 
	#__sig‹£t
(
de°
, 
À·
, 
right
) \

88 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

89 
sig£t_t
 *
__de°
 = (
de°
); \

90 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

91 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

92 --
__˙t
 >= 0) \

93 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

94 | 
__right
->
__vÆ
[
__˙t
]); \

95 0; }))

	)

102 
__sigismembî
 (c⁄° 
__sig£t_t
 *, );

103 
__sigadd£t
 (
__sig£t_t
 *, );

104 
__sigdñ£t
 (
__sig£t_t
 *, );

106 #ifde‡
__USE_EXTERN_INLINES


107 
	#__SIGSETFN
(
NAME
, 
BODY
, 
CONST
) \

108 
_EXTERN_INLINE
 \

109 
	`NAME
 (
CONST
 
__sig£t_t
 *
__£t
, 
__sig
) \

111 
__mask
 = 
	`__sigmask
 (
__sig
); \

112 
__w‹d
 = 
	`__sigw‹d
 (
__sig
); \

113  
BODY
; \

114 }

	)

116 
__SIGSETFN
 (
__sigismembî
, (
__£t
->
__vÆ
[
__w‹d
] & 
__mask
) ? 1 : 0, const)

117 
__SIGSETFN
 (
__sigadd£t
, ((
__£t
->
__vÆ
[
__w‹d
] |
__mask
), 0), )

118 
__SIGSETFN
 (
__sigdñ£t
, ((
__£t
->
__vÆ
[
__w‹d
] &~
__mask
), 0), )

120 #unde‡
__SIGSETFN


	@/usr/include/bits/time.h

23 #i‡
deföed
 
__√ed_timevÆ
 || deföed 
__USE_GNU


24 #i‚de‡
_STRUCT_TIMEVAL


25 
	#_STRUCT_TIMEVAL
 1

	)

26 
	~<bôs/ty≥s.h
>

30 
	stimevÆ


32 
__time_t
 
	mtv_£c
;

33 
__su£c⁄ds_t
 
	mtv_u£c
;

38 #i‚de‡
__√ed_timevÆ


39 #i‚de‡
_BITS_TIME_H


40 
	#_BITS_TIME_H
 1

	)

48 
	#CLOCKS_PER_SEC
 1000000l

	)

50 #i‡(!
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_POSIX
) \

51 && !
deföed
 
	g__USE_XOPEN2K


54 
	~<bôs/ty≥s.h
>

55 
__sysc⁄f
 ();

56 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

59 #ifde‡
__USE_POSIX199309


61 
	#CLOCK_REALTIME
 0

	)

63 
	#CLOCK_MONOTONIC
 1

	)

65 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

67 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

69 
	#CLOCK_MONOTONIC_RAW
 4

	)

71 
	#CLOCK_REALTIME_COARSE
 5

	)

73 
	#CLOCK_MONOTONIC_COARSE
 6

	)

75 
	#CLOCK_BOOTTIME
 7

	)

77 
	#CLOCK_REALTIME_ALARM
 8

	)

79 
	#CLOCK_BOOTTIME_ALARM
 9

	)

82 
	#TIMER_ABSTIME
 1

	)

85 #ifde‡
__USE_GNU


86 
	~<bôs/timex.h
>

88 
__BEGIN_DECLS


91 
	$˛ock_adjtime
 (
__˛ockid_t
 
__˛ock_id
, 
timex
 *
__utx
Ë
__THROW
;

93 
__END_DECLS


99 #unde‡
__√ed_timevÆ


	@/usr/include/gconv.h

22 #i‚de‡
_GCONV_H


23 
	#_GCONV_H
 1

	)

25 
	~<„©uªs.h
>

26 
	#__√ed_mb°©e_t


	)

27 
	#__√ed_wöt_t


	)

28 
	~<wch¨.h
>

29 
	#__√ed_size_t


	)

30 
	#__√ed_wch¨_t


	)

31 
	~<°ddef.h
>

34 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

39 
	m__GCONV_OK
 = 0,

40 
	m__GCONV_NOCONV
,

41 
	m__GCONV_NODB
,

42 
	m__GCONV_NOMEM
,

44 
	m__GCONV_EMPTY_INPUT
,

45 
	m__GCONV_FULL_OUTPUT
,

46 
	m__GCONV_ILLEGAL_INPUT
,

47 
	m__GCONV_INCOMPLETE_INPUT
,

49 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

50 
	m__GCONV_INTERNAL_ERROR


57 
	m__GCONV_IS_LAST
 = 0x0001,

58 
	m__GCONV_IGNORE_ERRORS
 = 0x0002,

59 
	m__GCONV_SWAP
 = 0x0004

64 
	g__gc⁄v_°ï
;

65 
	g__gc⁄v_°ï_d©a
;

66 
	g__gc⁄v_lﬂded_obje˘
;

67 
	g__gc⁄v_å™s_d©a
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

85 
	t__gc⁄v_°ï_d©a
 *, *,

89 
	tsize_t
 *);

92 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
) (*, const *,

97 (*
	t__gc⁄v_å™s_quîy_f˘
) (const *, const ***,

98 
	tsize_t
 *);

101 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

102 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

104 
	s__gc⁄v_å™s_d©a


107 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

108 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

109 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

110 *
__d©a
;

111 
__gc⁄v_å™s_d©a
 *
__√xt
;

116 
	s__gc⁄v_°ï


118 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

119 c⁄° *
__mod«me
;

121 
__cou¡î
;

123 *
__‰om_«me
;

124 *
__to_«me
;

126 
__gc⁄v_f˘
 
__f˘
;

127 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

128 
__gc⁄v_öô_f˘
 
__öô_f˘
;

129 
__gc⁄v_íd_f˘
 
__íd_f˘
;

133 
__mö_√eded_‰om
;

134 
__max_√eded_‰om
;

135 
__mö_√eded_to
;

136 
__max_√eded_to
;

139 
__°©eful
;

141 *
__d©a
;

146 
	s__gc⁄v_°ï_d©a


148 *
__outbuf
;

149 *
__outbu„nd
;

153 
__Êags
;

157 
__övoˇti⁄_cou¡î
;

161 
__öã∫Æ_u£
;

163 
__mb°©e_t
 *
__°©ï
;

164 
__mb°©e_t
 
__°©e
;

168 
__gc⁄v_å™s_d©a
 *
__å™s
;

173 
	s__gc⁄v_öfo


175 
size_t
 
__n°ïs
;

176 
__gc⁄v_°ï
 *
__°ïs
;

177 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

178 } *
	t__gc⁄v_t
;

	@/usr/include/gnu/stubs-32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub_chÊags


	)

11 
	#__°ub_Áâach


	)

12 
	#__°ub_fchÊags


	)

13 
	#__°ub_fdëach


	)

14 
	#__°ub_gây


	)

15 
	#__°ub_lchmod


	)

16 
	#__°ub_ªvoke


	)

17 
	#__°ub_£éogö


	)

18 
	#__°ub_sigªtu∫


	)

19 
	#__°ub_s°k


	)

20 
	#__°ub_°ty


	)

	@/usr/include/gnu/stubs-64.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub_bdÊush


	)

11 
	#__°ub_chÊags


	)

12 
	#__°ub_Áâach


	)

13 
	#__°ub_fchÊags


	)

14 
	#__°ub_fdëach


	)

15 
	#__°ub_gëmsg


	)

16 
	#__°ub_gây


	)

17 
	#__°ub_lchmod


	)

18 
	#__°ub_putmsg


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/gnu/stubs-x32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub_bdÊush


	)

11 
	#__°ub_chÊags


	)

12 
	#__°ub_¸óã_moduÀ


	)

13 
	#__°ub_Áâach


	)

14 
	#__°ub_fchÊags


	)

15 
	#__°ub_fdëach


	)

16 
	#__°ub_gë_kî√l_syms


	)

17 
	#__°ub_gëmsg


	)

18 
	#__°ub_gây


	)

19 
	#__°ub_lchmod


	)

20 
	#__°ub_nfs£rv˘l


	)

21 
	#__°ub_putmsg


	)

22 
	#__°ub_quîy_moduÀ


	)

23 
	#__°ub_ªvoke


	)

24 
	#__°ub_£éogö


	)

25 
	#__°ub_sigªtu∫


	)

26 
	#__°ub_s°k


	)

27 
	#__°ub_°ty


	)

28 
	#__°ub_u£lib


	)

	@/usr/include/wchar.h

23 #i‚de‡
_WCHAR_H


25 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


26 
	#_WCHAR_H
 1

	)

27 
	~<„©uªs.h
>

30 #ifde‡
_WCHAR_H


32 
	#__√ed___FILE


	)

33 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_FILE


	)

36 
	~<°dio.h
>

38 
	#__√ed___va_li°


	)

39 
	~<°d¨g.h
>

41 
	~<bôs/wch¨.h
>

44 
	#__√ed_size_t


	)

45 
	#__√ed_wch¨_t


	)

46 
	#__√ed_NULL


	)

48 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


49 #unde‡
__√ed_wöt_t


50 
	#__√ed_wöt_t


	)

51 
	~<°ddef.h
>

55 #i‚de‡
_WINT_T


60 
	#_WINT_T


	)

61 
	twöt_t
;

65 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

66 && 
deföed
 
__WINT_TYPE__


67 
__BEGIN_NAMESPACE_STD


68 
__WINT_TYPE__
 
	twöt_t
;

69 
	g__END_NAMESPACE_STD


74 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

75 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

79 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
____mb°©e_t_deföed


80 
	#____mb°©e_t_deföed
 1

	)

84 
	m__cou¡
;

87 #ifde‡
__WINT_TYPE__


88 
__WINT_TYPE__
 
	m__wch
;

90 
wöt_t
 
	m__wch
;

92 
	m__wchb
[4];

93 } 
	m__vÆue
;

94 } 
	t__mb°©e_t
;

96 #unde‡
__√ed_mb°©e_t


101 #ifde‡
_WCHAR_H


103 #i‚de‡
__mb°©e_t_deföed


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 
	#__mb°©e_t_deföed
 1

	)

111 #ifde‡
__USE_GNU


112 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

115 #i‚de‡
WCHAR_MIN


117 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

118 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

121 #i‚de‡
WEOF


122 
	#WEOF
 (0xffffffffu)

	)

127 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


128 
	~<w˘y≥.h
>

132 
__BEGIN_DECLS


134 
__BEGIN_NAMESPACE_STD


137 
tm
;

138 
__END_NAMESPACE_STD


142 
	$__USING_NAMESPACE_STD
(
tm
)

145 
__BEGIN_NAMESPACE_STD


147 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

150 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

151 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

152 
__THROW
;

155 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

158 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

159 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

160 
__THROW
;

163 
	$wcscmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
)

164 
__THROW
 
__©åibuã_puª__
;

166 
	$wc¢cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

167 
__THROW
 
__©åibuã_puª__
;

168 
__END_NAMESPACE_STD


170 #ifde‡
__USE_XOPEN2K8


172 
	$wcsˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

175 
	$wc¢ˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

176 
size_t
 
__n
Ë
__THROW
;

180 
	~<xloˇÀ.h
>

182 
	$wcsˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

183 
__loˇÀ_t
 
__loc
Ë
__THROW
;

185 
	$wc¢ˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

186 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


192 
	$wcscﬁl
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

196 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

197 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

198 
__END_NAMESPACE_STD


200 #ifde‡
__USE_XOPEN2K8


206 
	$wcscﬁl_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

207 
__loˇÀ_t
 
__loc
Ë
__THROW
;

212 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

213 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

216 
wch¨_t
 *
	$wcsdup
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

219 
__BEGIN_NAMESPACE_STD


221 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


222 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

223 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 "C++" c⁄° 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

227 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

228 
__THROW
 
__©åibuã_puª__
;

231 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


232 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

233 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 "C++" c⁄° 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

237 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

238 
__THROW
 
__©åibuã_puª__
;

240 
__END_NAMESPACE_STD


242 #ifde‡
__USE_GNU


245 
wch¨_t
 *
	$wcsch∫ul
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__wc
)

246 
__THROW
 
__©åibuã_puª__
;

249 
__BEGIN_NAMESPACE_STD


252 
size_t
 
	$wcsc•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ªje˘
)

253 
__THROW
 
__©åibuã_puª__
;

256 
size_t
 
	$wcs•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

257 
__THROW
 
__©åibuã_puª__
;

259 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


260 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

262 "C++" c⁄° 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
,

263 c⁄° 
wch¨_t
 *
__ac˚±
)

264 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

266 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

267 
__THROW
 
__©åibuã_puª__
;

270 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


271 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

273 "C++" c⁄° 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
,

274 c⁄° 
wch¨_t
 *
__√edÀ
)

275 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

277 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

278 
__THROW
 
__©åibuã_puª__
;

282 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

283 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

284 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

287 
size_t
 
	$wc¶í
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

288 
__END_NAMESPACE_STD


290 #ifde‡
__USE_XOPEN


292 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


293 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

295 "C++" c⁄° 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
,

296 c⁄° 
wch¨_t
 *
__√edÀ
)

297 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

299 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

300 
__THROW
 
__©åibuã_puª__
;

304 #ifde‡
__USE_XOPEN2K8


306 
size_t
 
	$wc¢Àn
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

307 
__THROW
 
__©åibuã_puª__
;

311 
__BEGIN_NAMESPACE_STD


313 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


314 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

316 "C++" c⁄° 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
,

317 
size_t
 
__n
)

318 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

320 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

321 
__THROW
 
__©åibuã_puª__
;

325 
	$wmemcmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

326 
__THROW
 
__©åibuã_puª__
;

329 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

330 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

334 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

335 
__THROW
;

338 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

339 
__END_NAMESPACE_STD


341 #ifde‡
__USE_GNU


344 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

345 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

346 
__THROW
;

350 
__BEGIN_NAMESPACE_STD


353 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

357 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

361 
	$mbsöô
 (c⁄° 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

365 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

366 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

367 
mb°©e_t
 *
__ª°ri˘
 
__p
Ë
__THROW
;

370 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

371 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

374 
size_t
 
	$__mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

375 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

376 
size_t
 
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

377 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

378 
__END_NAMESPACE_STD


380 #ifde‡
__USE_EXTERN_INLINES


386 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

387 
__exã∫_ölöe
 
wöt_t


388 
	`__NTH
 (
	$btowc
 (
__c
))

389 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

390 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

392 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

393 
__exã∫_ölöe
 

394 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

395 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

396 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

398 
__exã∫_ölöe
 
size_t


399 
__NTH
 (
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

400 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

401 {  (
__ps
 !
NULL


402 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

405 
__BEGIN_NAMESPACE_STD


408 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

409 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

410 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

414 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

415 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

416 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

417 
__END_NAMESPACE_STD


420 #ifdef 
__USE_XOPEN2K8


423 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

424 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

425 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

429 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

430 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

431 
size_t
 
__nwc
, size_à
__Àn
,

432 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

437 #ifde‡
__USE_XOPEN


439 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

443 
	$wcswidth
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

447 
__BEGIN_NAMESPACE_STD


450 
	$wc°od
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

451 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

452 
__END_NAMESPACE_STD


454 #ifde‡
__USE_ISOC99


455 
__BEGIN_NAMESPACE_C99


457 
	$wc°of
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

458 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

459 
	$wc°ﬁd
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

460 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

461 
__END_NAMESPACE_C99


465 
__BEGIN_NAMESPACE_STD


468 
	$wc°ﬁ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

469 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

473 
	$wc°oul
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

474 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

475 
__THROW
;

476 
__END_NAMESPACE_STD


478 #ifde‡
__USE_ISOC99


479 
__BEGIN_NAMESPACE_C99


482 
__exãnsi⁄__


483 
	$wc°ﬁl
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

484 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

485 
__THROW
;

489 
__exãnsi⁄__


490 
	$wc°ouŒ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

491 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

492 
__ba£
Ë
__THROW
;

493 
__END_NAMESPACE_C99


496 #ifde‡
__USE_GNU


499 
__exãnsi⁄__


500 
	$wc°oq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

501 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

502 
__THROW
;

506 
__exãnsi⁄__


507 
	$wc°ouq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

508 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

509 
__ba£
Ë
__THROW
;

512 #ifde‡
__USE_GNU


526 
	~<xloˇÀ.h
>

530 
	$wc°ﬁ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

531 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

532 
__loˇÀ_t
 
__loc
Ë
__THROW
;

534 
	$wc°oul_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

535 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

536 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

538 
__exãnsi⁄__


539 
	$wc°ﬁl_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

540 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

541 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

543 
__exãnsi⁄__


544 
	$wc°ouŒ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

545 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

546 
__ba£
, 
__loˇÀ_t
 
__loc
)

547 
__THROW
;

549 
	$wc°od_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

550 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

551 
__THROW
;

553 
	$wc°of_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

554 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

555 
__THROW
;

557 
	$wc°ﬁd_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

558 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

559 
__loˇÀ_t
 
__loc
Ë
__THROW
;

563 #ifde‡
__USE_XOPEN2K8


566 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

567 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

571 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

572 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

573 
__THROW
;

580 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

583 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


584 
__BEGIN_NAMESPACE_STD


587 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

594 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

595 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

601 
	`w¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

605 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

606 
__THROW
 ;

612 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

613 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

614 
__gnuc_va_li°
 
__¨g
)

620 
	`vw¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

621 
__gnuc_va_li°
 
__¨g
)

625 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

626 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

627 
__gnuc_va_li°
 
__¨g
)

628 
__THROW
 ;

635 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

636 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

642 
	`wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
	$swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

646 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

647 
__THROW
 ;

649 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

650 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

651 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

652 #ifde‡
__REDIRECT


656 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

657 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

658 
__isoc99_fwsˇnf
)

660 
	`__REDIRECT
 (
wsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

661 
__isoc99_wsˇnf
)

663 
	`__REDIRECT_NTH
 (
swsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

664 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

665 ...), 
__isoc99_swsˇnf
)

668 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

669 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

670 
	`__isoc99_wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

671 
	$__isoc99_swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

672 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

673 
__THROW
;

674 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

675 
	#wsˇnf
 
__isoc99_wsˇnf


	)

676 
	#swsˇnf
 
__isoc99_swsˇnf


	)

680 
__END_NAMESPACE_STD


683 #ifde‡
__USE_ISOC99


684 
__BEGIN_NAMESPACE_C99


689 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

690 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

691 
__gnuc_va_li°
 
__¨g
)

697 
	`vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

698 
__gnuc_va_li°
 
__¨g
)

701 
	$vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

702 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

703 
__gnuc_va_li°
 
__¨g
)

704 
__THROW
 ;

706 #i‡!
deföed
 
__USE_GNU
 \

707 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

708 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

709 #ifde‡
__REDIRECT


710 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

711 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

712 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

714 
	`__REDIRECT
 (
vwsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

715 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

717 
	`__REDIRECT_NTH
 (
vswsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

718 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

719 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

722 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

723 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

724 
__gnuc_va_li°
 
__¨g
);

725 
	`__isoc99_vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

726 
__gnuc_va_li°
 
__¨g
);

727 
	$__isoc99_vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

728 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

729 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

730 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

731 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

732 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

736 
__END_NAMESPACE_C99


740 
__BEGIN_NAMESPACE_STD


745 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

746 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

752 
wöt_t
 
	`gëwch¨
 ();

759 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

760 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

766 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

774 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

775 
__FILE
 *
__ª°ri˘
 
__°ªam
);

781 
	`Âutws
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

782 
__FILE
 *
__ª°ri˘
 
__°ªam
);

789 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

790 
__END_NAMESPACE_STD


793 #ifde‡
__USE_GNU


801 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

802 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

810 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

818 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

827 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

828 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

837 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

838 
__FILE
 *
__ª°ri˘
 
__°ªam
);

846 
	`Âutws_u∆ocked
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

847 
__FILE
 *
__ª°ri˘
 
__°ªam
);

851 
__BEGIN_NAMESPACE_C99


855 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

856 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

857 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

858 
__END_NAMESPACE_C99


860 #ifde‡
__USE_GNU


861 
	~<xloˇÀ.h
>

865 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

866 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

867 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

868 
__loˇÀ_t
 
__loc
Ë
__THROW
;

877 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


878 
	#__√ed_iswxxx


	)

879 
	~<w˘y≥.h
>

883 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


884 
	~<bôs/wch¨2.h
>

887 #ifde‡
__LDBL_COMPAT


888 
	~<bôs/wch¨-ldbl.h
>

891 
__END_DECLS


899 #unde‡
__√ed_mb°©e_t


900 #unde‡
__√ed_wöt_t


	@/usr/include/bits/byteswap-16.h

19 #i‚de‡
_BITS_BYTESWAP_H


23 #ifde‡
__GNUC__


24 #i‡
__GNUC__
 >= 2

25 
	#__bsw≠_16
(
x
) \

26 (
__exãnsi⁄__
 \

27 ({ 
__v
, 
__x
 = (Ë(
x
); \

28 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

29 
__v
 = 
	`__bsw≠_c⁄°™t_16
 (
__x
); \

31 
	`__asm__
 ("rorw $8, %w0" \

32 : "Ù" (
__v
) \

33 : "0" (
__x
) \

35 
__v
; }))

	)

38 
	#__bsw≠_16
(
x
) \

39 (
__exãnsi⁄__
 \

40 ({ 
__x
 = (Ë(
x
); \

41 
	`__bsw≠_c⁄°™t_16
 (
__x
); }))

	)

44 
__ölöe
 

45 
	$__bsw≠_16
 (
__bsx
)

47  
	`__bsw≠_c⁄°™t_16
 (
__bsx
);

48 
	}
}

	@/usr/include/bits/timex.h

18 #i‚def 
_BITS_TIMEX_H


19 
	#_BITS_TIMEX_H
 1

	)

21 
	~<bôs/ty≥s.h
>

25 
	stimex


27 
	mmodes
;

28 
__sysˇŒ_¶⁄g_t
 
	moff£t
;

29 
__sysˇŒ_¶⁄g_t
 
	m‰eq
;

30 
__sysˇŒ_¶⁄g_t
 
	mmaxîr‹
;

31 
__sysˇŒ_¶⁄g_t
 
	me°îr‹
;

32 
	m°©us
;

33 
__sysˇŒ_¶⁄g_t
 
	mc⁄°™t
;

34 
__sysˇŒ_¶⁄g_t
 
	m¥ecisi⁄
;

35 
__sysˇŒ_¶⁄g_t
 
	mtﬁî™˚
;

36 
timevÆ
 
	mtime
;

37 
__sysˇŒ_¶⁄g_t
 
	mtick
;

38 
__sysˇŒ_¶⁄g_t
 
	mµs‰eq
;

39 
__sysˇŒ_¶⁄g_t
 
	mjôãr
;

40 
	mshi·
;

41 
__sysˇŒ_¶⁄g_t
 
	m°abû
;

42 
__sysˇŒ_¶⁄g_t
 
	mjô˙t
;

43 
__sysˇŒ_¶⁄g_t
 
	mˇl˙t
;

44 
__sysˇŒ_¶⁄g_t
 
	mîr˙t
;

45 
__sysˇŒ_¶⁄g_t
 
	m°b˙t
;

47 
	mèi
;

56 
	#ADJ_OFFSET
 0x0001

	)

57 
	#ADJ_FREQUENCY
 0x0002

	)

58 
	#ADJ_MAXERROR
 0x0004

	)

59 
	#ADJ_ESTERROR
 0x0008

	)

60 
	#ADJ_STATUS
 0x0010

	)

61 
	#ADJ_TIMECONST
 0x0020

	)

62 
	#ADJ_TAI
 0x0080

	)

63 
	#ADJ_MICRO
 0x1000

	)

64 
	#ADJ_NANO
 0x2000

	)

65 
	#ADJ_TICK
 0x4000

	)

66 
	#ADJ_OFFSET_SINGLESHOT
 0x8001

	)

67 
	#ADJ_OFFSET_SS_READ
 0xa001

	)

70 
	#MOD_OFFSET
 
ADJ_OFFSET


	)

71 
	#MOD_FREQUENCY
 
ADJ_FREQUENCY


	)

72 
	#MOD_MAXERROR
 
ADJ_MAXERROR


	)

73 
	#MOD_ESTERROR
 
ADJ_ESTERROR


	)

74 
	#MOD_STATUS
 
ADJ_STATUS


	)

75 
	#MOD_TIMECONST
 
ADJ_TIMECONST


	)

76 
	#MOD_CLKB
 
ADJ_TICK


	)

77 
	#MOD_CLKA
 
ADJ_OFFSET_SINGLESHOT


	)

78 
	#MOD_TAI
 
ADJ_TAI


	)

79 
	#MOD_MICRO
 
ADJ_MICRO


	)

80 
	#MOD_NANO
 
ADJ_NANO


	)

84 
	#STA_PLL
 0x0001

	)

85 
	#STA_PPSFREQ
 0x0002

	)

86 
	#STA_PPSTIME
 0x0004

	)

87 
	#STA_FLL
 0x0008

	)

89 
	#STA_INS
 0x0010

	)

90 
	#STA_DEL
 0x0020

	)

91 
	#STA_UNSYNC
 0x0040

	)

92 
	#STA_FREQHOLD
 0x0080

	)

94 
	#STA_PPSSIGNAL
 0x0100

	)

95 
	#STA_PPSJITTER
 0x0200

	)

96 
	#STA_PPSWANDER
 0x0400

	)

97 
	#STA_PPSERROR
 0x0800

	)

99 
	#STA_CLOCKERR
 0x1000

	)

100 
	#STA_NANO
 0x2000

	)

101 
	#STA_MODE
 0x4000

	)

102 
	#STA_CLK
 0x8000

	)

105 
	#STA_RONLY
 (
STA_PPSSIGNAL
 | 
STA_PPSJITTER
 | 
STA_PPSWANDER
 | \

106 
STA_PPSERROR
 | 
STA_CLOCKERR
 | 
STA_NANO
 | 
STA_MODE
 | 
STA_CLK
)

	)

	@/usr/include/bits/wchar-ldbl.h

19 #i‚de‡
_WCHAR_H


23 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


24 
__BEGIN_NAMESPACE_C99


25 
__LDBL_REDIR_DECL
 (
fw¥ötf
);

26 
__LDBL_REDIR_DECL
 (
w¥ötf
);

27 
__LDBL_REDIR_DECL
 (
sw¥ötf
);

28 
__LDBL_REDIR_DECL
 (
vfw¥ötf
);

29 
__LDBL_REDIR_DECL
 (
vw¥ötf
);

30 
__LDBL_REDIR_DECL
 (
vsw¥ötf
);

31 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

32 && !
deföed
 
	g__REDIRECT
 \

33 && (
deföed
 
	g__STRICT_ANSI__
 || deföed 
	g__USE_XOPEN2K
)

34 
	$__LDBL_REDIR1_DECL
 (
fwsˇnf
, 
__∆dbl___isoc99_fwsˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
wsˇnf
, 
__∆dbl___isoc99_wsˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
swsˇnf
, 
__∆dbl___isoc99_swsˇnf
)

38 
	`__LDBL_REDIR_DECL
 (
fwsˇnf
);

39 
	`__LDBL_REDIR_DECL
 (
wsˇnf
);

40 
	`__LDBL_REDIR_DECL
 (
swsˇnf
);

42 
__END_NAMESPACE_C99


45 #ifde‡
__USE_ISOC99


46 
__BEGIN_NAMESPACE_C99


47 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd
, 
wc°od
);

48 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

49 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

50 
	$__LDBL_REDIR1_DECL
 (
vfwsˇnf
, 
__∆dbl___isoc99_vfwsˇnf
)

51 
	$__LDBL_REDIR1_DECL
 (
vwsˇnf
, 
__∆dbl___isoc99_vwsˇnf
)

52 
	$__LDBL_REDIR1_DECL
 (
vswsˇnf
, 
__∆dbl___isoc99_vswsˇnf
)

54 
	`__LDBL_REDIR_DECL
 (
vfwsˇnf
);

55 
	`__LDBL_REDIR_DECL
 (
vwsˇnf
);

56 
	`__LDBL_REDIR_DECL
 (
vswsˇnf
);

58 
__END_NAMESPACE_C99


61 #ifde‡
__USE_GNU


62 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd_l
, 
wc°od_l
);

65 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


66 
	$__LDBL_REDIR_DECL
 (
__sw¥ötf_chk
)

67 
	$__LDBL_REDIR_DECL
 (
__vsw¥ötf_chk
)

68 #i‡
__USE_FORTIFY_LEVEL
 > 1

69 
	$__LDBL_REDIR_DECL
 (
__fw¥ötf_chk
)

70 
	$__LDBL_REDIR_DECL
 (
__w¥ötf_chk
)

71 
	$__LDBL_REDIR_DECL
 (
__vfw¥ötf_chk
)

72 
	$__LDBL_REDIR_DECL
 (
__vw¥ötf_chk
)

	@/usr/include/bits/wchar2.h

19 #i‚de‡
_WCHAR_H


24 
wch¨_t
 *
	$__wmem˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

25 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

26 
size_t
 
__ns1
Ë
__THROW
;

27 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_Æüs
,

28 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

29 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
),

30 
wmem˝y
);

31 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_chk_w¨n
,

32 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

33 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

34 
size_t
 
__ns1
), 
__wmem˝y_chk
)

35 
	`__w¨«âr
 ("wmemcpy called withÜength biggerÅhan size of destination "

38 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

39 
	`__NTH
 (
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, c⁄° wch¨_à*__ª°ri˘ 
__s2
,

40 
size_t
 
__n
))

42 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

44 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

45  
	`__wmem˝y_chk
 (
__s1
, 
__s2
, 
__n
,

46 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

48 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

49  
	`__wmem˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

50 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

52  
	`__wmem˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

53 
	}
}

56 
wch¨_t
 *
	$__wmemmove_chk
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

57 
size_t
 
__n
, size_à
__ns1
Ë
__THROW
;

58 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_Æüs
, (wch¨_à*
__s1
,

59 c⁄° 
wch¨_t
 *
__s2
,

60 
size_t
 
__n
), 
wmemmove
);

61 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_chk_w¨n
,

62 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

63 
size_t
 
__n
, size_à
__ns1
), 
__wmemmove_chk
)

64 
	`__w¨«âr
 ("wmemmove called withÜength biggerÅhan size of destination "

67 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

68 
	`__NTH
 (
	$wmemmove
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
))

70 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

72 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

73  
	`__wmemmove_chk
 (
__s1
, 
__s2
, 
__n
,

74 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

76 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

77  
	`__wmemmove_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

78 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

80  
	`__wmemmove_Æüs
 (
__s1
, 
__s2
, 
__n
);

81 
	}
}

84 #ifde‡
__USE_GNU


85 
wch¨_t
 *
	$__wmemp˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

86 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

87 
size_t
 
__ns1
Ë
__THROW
;

88 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_Æüs
,

89 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

90 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
,

91 
size_t
 
__n
), 
wmemp˝y
);

92 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_chk_w¨n
,

93 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

94 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

95 
size_t
 
__ns1
), 
__wmemp˝y_chk
)

96 
	`__w¨«âr
 ("wmempcpy called withÜength biggerÅhan size of destination "

99 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

100 
	`__NTH
 (
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, c⁄° wch¨_à*__ª°ri˘ 
__s2
,

101 
size_t
 
__n
))

103 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

105 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

106  
	`__wmemp˝y_chk
 (
__s1
, 
__s2
, 
__n
,

107 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

109 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

110  
	`__wmemp˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

111 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

113  
	`__wmemp˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

114 
	}
}

118 
wch¨_t
 *
	$__wmem£t_chk
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

119 
size_t
 
__ns
Ë
__THROW
;

120 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_Æüs
, (wch¨_à*
__s
, wch¨_à
__c
,

121 
size_t
 
__n
), 
wmem£t
);

122 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_chk_w¨n
,

123 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

124 
size_t
 
__ns
), 
__wmem£t_chk
)

125 
	`__w¨«âr
 ("wmemset called withÜength biggerÅhan size of destination "

128 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

129 
	`__NTH
 (
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
))

131 i‡(
	`__bos0
 (
__s
Ë!(
size_t
) -1)

133 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

134  
	`__wmem£t_chk
 (
__s
, 
__c
, 
__n
, 
	`__bos0
 (__sË/  (
wch¨_t
));

136 i‡(
__n
 > 
	`__bos0
 (
__s
Ë/  (
wch¨_t
))

137  
	`__wmem£t_chk_w¨n
 (
__s
, 
__c
, 
__n
,

138 
	`__bos0
 (
__s
Ë/  (
wch¨_t
));

140  
	`__wmem£t_Æüs
 (
__s
, 
__c
, 
__n
);

141 
	}
}

144 
wch¨_t
 *
	$__wcs˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

145 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

146 
size_t
 
__n
Ë
__THROW
;

147 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcs˝y_Æüs
,

148 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

149 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcs˝y
);

151 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

152 
	`__NTH
 (
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
))

154 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

155  
	`__wcs˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

156  
	`__wcs˝y_Æüs
 (
__de°
, 
__§c
);

157 
	}
}

160 
wch¨_t
 *
	$__w˝˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

161 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

162 
size_t
 
__de°Àn
Ë
__THROW
;

163 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝˝y_Æüs
,

164 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

165 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
w˝˝y
);

167 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

168 
	`__NTH
 (
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
))

170 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

171  
	`__w˝˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

172  
	`__w˝˝y_Æüs
 (
__de°
, 
__§c
);

173 
	}
}

176 
wch¨_t
 *
	$__wc¢˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

177 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

178 
size_t
 
__de°Àn
Ë
__THROW
;

179 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_Æüs
,

180 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

181 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

182 
size_t
 
__n
), 
wc¢˝y
);

183 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_chk_w¨n
,

184 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

185 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

186 
size_t
 
__n
, size_à
__de°Àn
), 
__wc¢˝y_chk
)

187 
	`__w¨«âr
 ("wcsncpy called withÜength biggerÅhan size of destination "

190 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

191 
	`__NTH
 (
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
,

192 
size_t
 
__n
))

194 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

196 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

197  
	`__wc¢˝y_chk
 (
__de°
, 
__§c
, 
__n
,

198 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

199 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

200  
	`__wc¢˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

201 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

203  
	`__wc¢˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

204 
	}
}

207 
wch¨_t
 *
	$__w˝n˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

208 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

209 
size_t
 
__de°Àn
Ë
__THROW
;

210 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_Æüs
,

211 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

212 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

213 
size_t
 
__n
), 
w˝n˝y
);

214 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_chk_w¨n
,

215 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

216 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

217 
size_t
 
__n
, size_à
__de°Àn
), 
__w˝n˝y_chk
)

218 
	`__w¨«âr
 ("wcpncpy called withÜength biggerÅhan size of destination "

221 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

222 
	`__NTH
 (
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
,

223 
size_t
 
__n
))

225 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

227 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

228  
	`__w˝n˝y_chk
 (
__de°
, 
__§c
, 
__n
,

229 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

230 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

231  
	`__w˝n˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

232 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

234  
	`__w˝n˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

235 
	}
}

238 
wch¨_t
 *
	$__wcsˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

239 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

240 
size_t
 
__de°Àn
Ë
__THROW
;

241 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcsˇt_Æüs
,

242 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

243 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcsˇt
);

245 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

246 
	`__NTH
 (
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
))

248 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

249  
	`__wcsˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

250  
	`__wcsˇt_Æüs
 (
__de°
, 
__§c
);

251 
	}
}

254 
wch¨_t
 *
	$__wc¢ˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

255 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

256 
size_t
 
__n
, size_à
__de°Àn
Ë
__THROW
;

257 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢ˇt_Æüs
,

258 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

259 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

260 
size_t
 
__n
), 
wc¢ˇt
);

262 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

263 
	`__NTH
 (
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
,

264 
size_t
 
__n
))

266 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

267  
	`__wc¢ˇt_chk
 (
__de°
, 
__§c
, 
__n
,

268 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

269  
	`__wc¢ˇt_Æüs
 (
__de°
, 
__§c
, 
__n
);

270 
	}
}

273 
	$__sw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

274 
__Êag
, 
size_t
 
__s_Àn
,

275 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

276 
__THROW
 ;

278 
	`__REDIRECT_NTH_LDBL
 (
__sw¥ötf_Æüs
,

279 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

280 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...),

281 
sw¥ötf
);

283 #ifde‡
__va_¨g_∑ck


284 
__f‹tify_fun˘i⁄
 

285 
	`__NTH
 (
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

286 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...))

288 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

289  
	`__sw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

290 
	`__bos
 (
__s
Ë/  (
wch¨_t
),

291 
__fmt
, 
	`__va_¨g_∑ck
 ());

292  
	`__sw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
	`__va_¨g_∑ck
 ());

293 
	}
}

294 #ñi‡!
deföed
 
__˝lu•lus


296 
	#sw¥ötf
(
s
, 
n
, ...) \

297 (
	`__bos
 (
s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1 \

298 ? 
	`__sw¥ötf_chk
 (
s
, 
n
, 
__USE_FORTIFY_LEVEL
 - 1, \

299 
	`__bos
 (
s
Ë/  (
wch¨_t
), 
__VA_ARGS__
) \

300 : 
	`sw¥ötf
 (
s
, 
n
, 
__VA_ARGS__
))

	)

303 
	$__vsw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

304 
__Êag
, 
size_t
 
__s_Àn
,

305 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

306 
__gnuc_va_li°
 
__¨g
)

307 
__THROW
 ;

309 
	`__REDIRECT_NTH_LDBL
 (
__vsw¥ötf_Æüs
,

310 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

311 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
,

312 
__gnuc_va_li°
 
__≠
), 
vsw¥ötf
);

314 
__f‹tify_fun˘i⁄
 

315 
	`__NTH
 (
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

316 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
))

318 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

319  
	`__vsw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

320 
	`__bos
 (
__s
Ë/  (
wch¨_t
), 
__fmt
, 
__≠
);

321  
	`__vsw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
__≠
);

322 
	}
}

325 #i‡
__USE_FORTIFY_LEVEL
 > 1

327 
__fw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

328 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

329 
__w¥ötf_chk
 (
__Êag
, c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

331 
__vfw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

332 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

333 
__gnuc_va_li°
 
__≠
);

334 
__vw¥ötf_chk
 (
__Êag
, c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

335 
__gnuc_va_li°
 
__≠
);

337 #ifde‡
__va_¨g_∑ck


338 
__f‹tify_fun˘i⁄
 

339 
	$w¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...)

341  
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

342 
	}
}

344 
__f‹tify_fun˘i⁄
 

345 
	$fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, c⁄° 
wch¨_t
 *__ª°ri˘ 
__fmt
, ...)

347  
	`__fw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

348 
	`__va_¨g_∑ck
 ());

349 
	}
}

350 #ñi‡!
deföed
 
__˝lu•lus


351 
	#w¥ötf
(...) \

352 
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

353 
	#fw¥ötf
(
°ªam
, ...) \

354 
	`__fw¥ötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

357 
__f‹tify_fun˘i⁄
 

358 
	$vw¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

360  
	`__vw¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

361 
	}
}

363 
__f‹tify_fun˘i⁄
 

364 
	$vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

365 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

367  
	`__vfw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

368 
	}
}

372 
wch¨_t
 *
	$__fgëws_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

373 
__FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

374 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_Æüs
,

375 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

376 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws
Ë
__wur
;

377 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_chk_w¨n
,

378 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

379 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgëws_chk
)

380 
__wur
 
	`__w¨«âr
 ("fgetws called with bigger sizeÅhanÜength "

383 
__f‹tify_fun˘i⁄
 
__wur
 
wch¨_t
 *

384 
	$fgëws
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

386 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

388 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

389  
	`__fgëws_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

390 
__n
, 
__°ªam
);

392 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

393  
	`__fgëws_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

394 
__n
, 
__°ªam
);

396  
	`__fgëws_Æüs
 (
__s
, 
__n
, 
__°ªam
);

397 
	}
}

399 #ifde‡
__USE_GNU


400 
wch¨_t
 *
	$__fgëws_u∆ocked_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
,

401 
__n
, 
__FILE
 *
__ª°ri˘
 
__°ªam
)

402 
__wur
;

403 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_Æüs
,

404 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

405 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws_u∆ocked
)

406 
__wur
;

407 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_chk_w¨n
,

408 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

409 
__FILE
 *
__ª°ri˘
 
__°ªam
),

410 
__fgëws_u∆ocked_chk
)

411 
__wur
 
	`__w¨«âr
 ("fgetws_unlocked called with bigger sizeÅhanÜength "

414 
__f‹tify_fun˘i⁄
 
__wur
 
wch¨_t
 *

415 
	$fgëws_u∆ocked
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

417 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

419 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

420  
	`__fgëws_u∆ocked_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

421 
__n
, 
__°ªam
);

423 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

424  
	`__fgëws_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

425 
__n
, 
__°ªam
);

427  
	`__fgëws_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

428 
	}
}

432 
size_t
 
	$__w¸tomb_chk
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

433 
mb°©e_t
 *
__ª°ri˘
 
__p
,

434 
size_t
 
__buÊí
Ë
__THROW
 
__wur
;

435 
size_t
 
	`__REDIRECT_NTH
 (
__w¸tomb_Æüs
,

436 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

437 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
w¸tomb
Ë
__wur
;

439 
__f‹tify_fun˘i⁄
 
__wur
 
size_t


440 
	`__NTH
 (
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

441 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

446 
	#__WCHAR_MB_LEN_MAX
 16

	)

447 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__WCHAR_MB_LEN_MAX


450 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__WCHAR_MB_LEN_MAX
 > __bos (__s))

451  
	`__w¸tomb_chk
 (
__s
, 
__wch¨
, 
__ps
, 
	`__bos
 (__s));

452  
	`__w¸tomb_Æüs
 (
__s
, 
__wch¨
, 
__ps
);

453 
	}
}

456 
size_t
 
	$__mb§towcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

457 c⁄° **
__ª°ri˘
 
__§c
,

458 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

459 
size_t
 
__d°Àn
Ë
__THROW
;

460 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_Æüs
,

461 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

462 c⁄° **
__ª°ri˘
 
__§c
,

463 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

464 
mb§towcs
);

465 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_chk_w¨n
,

466 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

467 c⁄° **
__ª°ri˘
 
__§c
,

468 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

469 
size_t
 
__d°Àn
), 
__mb§towcs_chk
)

470 
	`__w¨«âr
 ("mbsrtowcs called with dst buffer smallerÅhanÜen "

473 
__f‹tify_fun˘i⁄
 
size_t


474 
	`__NTH
 (
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, c⁄° **__ª°ri˘ 
__§c
,

475 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

477 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

479 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

480  
	`__mb§towcs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

481 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

483 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

484  
	`__mb§towcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

485 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

487  
	`__mb§towcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

488 
	}
}

491 
size_t
 
	$__wc§tombs_chk
 (*
__ª°ri˘
 
__d°
,

492 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

493 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

494 
size_t
 
__d°Àn
Ë
__THROW
;

495 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_Æüs
,

496 (*
__ª°ri˘
 
__d°
,

497 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

498 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

499 
wc§tombs
);

500 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_chk_w¨n
,

501 (*
__ª°ri˘
 
__d°
,

502 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

503 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

504 
size_t
 
__d°Àn
), 
__wc§tombs_chk
)

505 
	`__w¨«âr
 ("wcsrtombs called with dst buffer smallerÅhanÜen");

507 
__f‹tify_fun˘i⁄
 
size_t


508 
	`__NTH
 (
	$wc§tombs
 (*
__ª°ri˘
 
__d°
, c⁄° 
wch¨_t
 **__ª°ri˘ 
__§c
,

509 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

511 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

513 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

514  
	`__wc§tombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

516 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

517  
	`__wc§tombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

519  
	`__wc§tombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

520 
	}
}

523 #ifde‡
__USE_GNU


524 
size_t
 
	$__mb¢πowcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

525 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

526 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

527 
size_t
 
__d°Àn
Ë
__THROW
;

528 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_Æüs
,

529 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

530 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

531 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

532 
mb¢πowcs
);

533 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_chk_w¨n
,

534 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

535 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

536 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

537 
size_t
 
__d°Àn
), 
__mb¢πowcs_chk
)

538 
	`__w¨«âr
 ("mbsnrtowcs called with dst buffer smallerÅhanÜen "

541 
__f‹tify_fun˘i⁄
 
size_t


542 
	`__NTH
 (
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, c⁄° **__ª°ri˘ 
__§c
,

543 
size_t
 
__nmc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

545 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

547 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

548  
	`__mb¢πowcs_chk
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

549 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

551 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

552  
	`__mb¢πowcs_chk_w¨n
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

553 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

555  
	`__mb¢πowcs_Æüs
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
);

556 
	}
}

559 
size_t
 
	$__wc¢πombs_chk
 (*
__ª°ri˘
 
__d°
,

560 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

561 
size_t
 
__nwc
, size_à
__Àn
,

562 
mb°©e_t
 *
__ª°ri˘
 
__ps
, 
size_t
 
__d°Àn
)

563 
__THROW
;

564 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_Æüs
,

565 (*
__ª°ri˘
 
__d°
,

566 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

567 
size_t
 
__nwc
, size_à
__Àn
,

568 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
wc¢πombs
);

569 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_chk_w¨n
,

570 (*
__ª°ri˘
 
__d°
,

571 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

572 
size_t
 
__nwc
, size_à
__Àn
,

573 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

574 
size_t
 
__d°Àn
), 
__wc¢πombs_chk
)

575 
	`__w¨«âr
 ("wcsnrtombs called with dst buffer smallerÅhanÜen");

577 
__f‹tify_fun˘i⁄
 
size_t


578 
	`__NTH
 (
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
, c⁄° 
wch¨_t
 **__ª°ri˘ 
__§c
,

579 
size_t
 
__nwc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

581 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

583 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

584  
	`__wc¢πombs_chk
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

585 
	`__bos
 (
__d°
));

587 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

588  
	`__wc¢πombs_chk_w¨n
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

589 
	`__bos
 (
__d°
));

591  
	`__wc¢πombs_Æüs
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
);

592 
	}
}

	@/usr/include/errno.h

22 #i‚def 
_ERRNO_H


26 #i‚def 
__√ed_Em©h


27 
	#_ERRNO_H
 1

	)

28 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


35 
	~<bôs/î∫o.h
>

36 #unde‡
__√ed_Em©h


38 #ifdef 
_ERRNO_H


45 #i‚def 
î∫o


46 
î∫o
;

49 #ifde‡
__USE_GNU


54 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

58 
	g__END_DECLS


66 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


67 #i‚de‡
__îr‹_t_deföed


68 
	tîr‹_t
;

69 
	#__îr‹_t_deföed
 1

	)

71 #unde‡
__√ed_îr‹_t


	@/usr/include/gnu/option-groups.h

10 #i‚de‡
__GNU_OPTION_GROUPS_H


11 
	#__GNU_OPTION_GROUPS_H


	)

13 
	#__OPTION_EGLIBC_ADVANCED_INET6
 1

	)

14 
	#__OPTION_EGLIBC_BACKTRACE
 1

	)

15 
	#__OPTION_EGLIBC_BIG_MACROS
 1

	)

16 
	#__OPTION_EGLIBC_BSD
 1

	)

17 
	#__OPTION_EGLIBC_CATGETS
 1

	)

18 
	#__OPTION_EGLIBC_CHARSETS
 1

	)

19 
	#__OPTION_EGLIBC_CRYPT
 1

	)

20 
	#__OPTION_EGLIBC_CRYPT_UFC
 1

	)

21 
	#__OPTION_EGLIBC_CXX_TESTS
 1

	)

22 
	#__OPTION_EGLIBC_DB_ALIASES
 1

	)

23 
	#__OPTION_EGLIBC_ENVZ
 1

	)

24 
	#__OPTION_EGLIBC_FCVT
 1

	)

25 
	#__OPTION_EGLIBC_FMTMSG
 1

	)

26 
	#__OPTION_EGLIBC_FSTAB
 1

	)

27 
	#__OPTION_EGLIBC_FTRAVERSE
 1

	)

28 
	#__OPTION_EGLIBC_GETLOGIN
 1

	)

29 
	#__OPTION_EGLIBC_IDN
 1

	)

30 
	#__OPTION_EGLIBC_INET
 1

	)

31 
	#__OPTION_EGLIBC_INET_ANL
 1

	)

32 
	#__OPTION_EGLIBC_LIBM
 1

	)

33 
	#__OPTION_EGLIBC_LOCALES
 1

	)

34 
	#__OPTION_EGLIBC_LOCALE_CODE
 1

	)

35 
	#__OPTION_EGLIBC_MEMUSAGE
 1

	)

36 
	#__OPTION_EGLIBC_NIS
 1

	)

37 
	#__OPTION_EGLIBC_NSSWITCH
 1

	)

38 
	#__OPTION_EGLIBC_RCMD
 1

	)

39 
	#__OPTION_EGLIBC_RTLD_DEBUG
 1

	)

40 
	#__OPTION_EGLIBC_SPAWN
 1

	)

41 
	#__OPTION_EGLIBC_STREAMS
 1

	)

42 
	#__OPTION_EGLIBC_SUNRPC
 1

	)

43 
	#__OPTION_EGLIBC_UTMP
 1

	)

44 
	#__OPTION_EGLIBC_UTMPX
 1

	)

45 
	#__OPTION_EGLIBC_WORDEXP
 1

	)

46 
	#__OPTION_POSIX_C_LANG_WIDE_CHAR
 1

	)

47 
	#__OPTION_POSIX_REGEXP
 1

	)

48 
	#__OPTION_POSIX_REGEXP_GLIBC
 1

	)

49 
	#__OPTION_POSIX_WIDE_CHAR_DEVICE_IO
 1

	)

	@/usr/include/pthread.h

18 #i‚de‡
_PTHREAD_H


19 
	#_PTHREAD_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<ídün.h
>

23 
	~<sched.h
>

24 
	~<time.h
>

26 
	~<bôs/±hªadty≥s.h
>

27 
	~<bôs/£tjmp.h
>

28 
	~<bôs/w‹dsize.h
>

34 
	mPTHREAD_CREATE_JOINABLE
,

35 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

36 
	mPTHREAD_CREATE_DETACHED


37 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

44 
	mPTHREAD_MUTEX_TIMED_NP
,

45 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

46 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

47 
	mPTHREAD_MUTEX_ADAPTIVE_NP


48 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


50 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

51 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

52 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

53 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


55 #ifde‡
__USE_GNU


57 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


62 #ifde‡
__USE_XOPEN2K


66 
	mPTHREAD_MUTEX_STALLED
,

67 
	mPTHREAD_MUTEX_STALLED_NP
 = 
PTHREAD_MUTEX_STALLED
,

68 
	mPTHREAD_MUTEX_ROBUST
,

69 
	mPTHREAD_MUTEX_ROBUST_NP
 = 
PTHREAD_MUTEX_ROBUST


74 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


78 
	mPTHREAD_PRIO_NONE
,

79 
	mPTHREAD_PRIO_INHERIT
,

80 
	mPTHREAD_PRIO_PROTECT


86 #i‡
__PTHREAD_MUTEX_HAVE_ELISION
 == 1

87 
	#__PTHREAD_SPINS
 0, 0

	)

88 #ñi‡
__PTHREAD_MUTEX_HAVE_ELISION
 == 2

89 
	#__PTHREAD_SPINS
 { 0, 0 }

	)

91 
	#__PTHREAD_SPINS
 0

	)

94 #ifde‡
__PTHREAD_MUTEX_HAVE_PREV


95 
	#PTHREAD_MUTEX_INITIALIZER
 \

96 { { 0, 0, 0, 0, 0, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

97 #ifde‡
__USE_GNU


98 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

99 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

100 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

101 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

102 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

103 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

104 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

105 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

109 
	#PTHREAD_MUTEX_INITIALIZER
 \

110 { { 0, 0, 0, 0, 0, { 
__PTHREAD_SPINS
 } } }

	)

111 #ifde‡
__USE_GNU


112 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

113 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

114 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

115 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

116 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

117 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

124 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


127 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

128 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

129 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

130 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


136 #i‚de‡
__PTHREAD_RWLOCK_INT_FLAGS_SHARED


137 #i‡
__WORDSIZE
 == 64

138 
	#__PTHREAD_RWLOCK_INT_FLAGS_SHARED
 1

	)

143 
	#PTHREAD_RWLOCK_INITIALIZER
 \

144 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

	)

145 #ifde‡
__USE_GNU


146 #ifde‡
__PTHREAD_RWLOCK_INT_FLAGS_SHARED


147 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

149 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

151 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


152 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

153 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, \

154 0, 0, 0, 0 } }

	)

156 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

157 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,\

158 0 } }

	)

168 
	mPTHREAD_INHERIT_SCHED
,

169 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

170 
	mPTHREAD_EXPLICIT_SCHED


171 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

178 
	mPTHREAD_SCOPE_SYSTEM
,

179 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

180 
	mPTHREAD_SCOPE_PROCESS


181 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

188 
	mPTHREAD_PROCESS_PRIVATE
,

189 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

190 
	mPTHREAD_PROCESS_SHARED


191 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

197 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

201 
	s_±hªad_˛ónup_buf„r


203 (*
	m__routöe
) (*);

204 *
	m__¨g
;

205 
	m__ˇn˚…y≥
;

206 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

212 
	mPTHREAD_CANCEL_ENABLE
,

213 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

214 
	mPTHREAD_CANCEL_DISABLE


215 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

219 
	mPTHREAD_CANCEL_DEFERRED
,

220 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

221 
	mPTHREAD_CANCEL_ASYNCHRONOUS


222 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

224 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

228 
	#PTHREAD_ONCE_INIT
 0

	)

231 #ifde‡
__USE_XOPEN2K


235 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

239 
__BEGIN_DECLS


244 
±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

245 c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

246 *(*
__°¨t_routöe
) (*),

247 *
__ª°ri˘
 
__¨g
Ë
__THROWNL
 
__n⁄nuŒ
 ((1, 3));

253 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

261 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

263 #ifde‡
__USE_GNU


266 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

274 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

275 c⁄° 
time•ec
 *
__ab°ime
);

282 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

286 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

289 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
)

290 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

298 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

301 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

302 
__THROW
 
	`__n⁄nuŒ
 ((1));

305 
	$±hªad_©å_gëdëach°©e
 (c⁄° 
±hªad_©å_t
 *
__©å
,

306 *
__dëach°©e
)

307 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

310 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

311 
__dëach°©e
)

312 
__THROW
 
	`__n⁄nuŒ
 ((1));

316 
	$±hªad_©å_gëgu¨dsize
 (c⁄° 
±hªad_©å_t
 *
__©å
,

317 
size_t
 *
__gu¨dsize
)

318 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

321 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

322 
size_t
 
__gu¨dsize
)

323 
__THROW
 
	`__n⁄nuŒ
 ((1));

327 
	$±hªad_©å_gësched∑øm
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

328 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

329 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

332 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

333 c⁄° 
sched_∑øm
 *
__ª°ri˘


334 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

337 
	$±hªad_©å_gëschedpﬁicy
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


338 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

339 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

342 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

343 
__THROW
 
	`__n⁄nuŒ
 ((1));

346 
	$±hªad_©å_gëöhîôsched
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


347 
__©å
, *
__ª°ri˘
 
__öhîô
)

348 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

351 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

352 
__öhîô
)

353 
__THROW
 
	`__n⁄nuŒ
 ((1));

357 
	$±hªad_©å_gësc›e
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

358 *
__ª°ri˘
 
__sc›e
)

359 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

362 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

363 
__THROW
 
	`__n⁄nuŒ
 ((1));

366 
	$±hªad_©å_gë°ackaddr
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


367 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

368 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

374 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

375 *
__°ackaddr
)

376 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

379 
	$±hªad_©å_gë°acksize
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


380 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

381 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

386 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

387 
size_t
 
__°acksize
)

388 
__THROW
 
	`__n⁄nuŒ
 ((1));

390 #ifde‡
__USE_XOPEN2K


392 
	$±hªad_©å_gë°ack
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

393 **
__ª°ri˘
 
__°ackaddr
,

394 
size_t
 *
__ª°ri˘
 
__°acksize
)

395 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

400 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

401 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

404 #ifde‡
__USE_GNU


407 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

408 
size_t
 
__˝u£tsize
,

409 c⁄° 
˝u_£t_t
 *
__˝u£t
)

410 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

414 
	$±hªad_©å_gëafföôy_≈
 (c⁄° 
±hªad_©å_t
 *
__©å
,

415 
size_t
 
__˝u£tsize
,

416 
˝u_£t_t
 *
__˝u£t
)

417 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

420 
	$±hªad_gë©å_deÁu…_≈
 (
±hªad_©å_t
 *
__©å
)

421 
__THROW
 
	`__n⁄nuŒ
 ((1));

425 
	$±hªad_£èâr_deÁu…_≈
 (c⁄° 
±hªad_©å_t
 *
__©å
)

426 
__THROW
 
	`__n⁄nuŒ
 ((1));

431 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

440 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

441 c⁄° 
sched_∑øm
 *
__∑øm
)

442 
__THROW
 
	`__n⁄nuŒ
 ((3));

445 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

446 *
__ª°ri˘
 
__pﬁicy
,

447 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

448 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

451 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

452 
__THROW
;

455 #ifde‡
__USE_GNU


457 
	$±hªad_gë«me_≈
 (
±hªad_t
 
__èrgë_thªad
, *
__buf
,

458 
size_t
 
__buÊí
)

459 
__THROW
 
	`__n⁄nuŒ
 ((2));

462 
	$±hªad_£äame_≈
 (
±hªad_t
 
__èrgë_thªad
, c⁄° *
__«me
)

463 
__THROW
 
	`__n⁄nuŒ
 ((2));

467 #ifde‡
__USE_UNIX98


469 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

472 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

475 #ifde‡
__USE_GNU


480 
	$±hªad_yõld
 (Ë
__THROW
;

485 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

486 c⁄° 
˝u_£t_t
 *
__˝u£t
)

487 
__THROW
 
	`__n⁄nuŒ
 ((3));

490 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

491 
˝u_£t_t
 *
__˝u£t
)

492 
__THROW
 
	`__n⁄nuŒ
 ((3));

505 
	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

506 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

517 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

521 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

524 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

529 
	`±hªad_ã°ˇn˚l
 ();

538 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

539 
__mask_was_ßved
;

540 } 
__ˇn˚l_jmp_buf
[1];

541 *
__∑d
[4];

542 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

545 #i‚de‡
__˛ónup_f˘_©åibuã


546 
	#__˛ónup_f˘_©åibuã


	)

551 
	s__±hªad_˛ónup_‰ame


553 (*
__ˇn˚l_routöe
) (*);

554 *
__ˇn˚l_¨g
;

555 
__do_ô
;

556 
__ˇn˚l_ty≥
;

559 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


560 #ifde‡
__˝lu•lus


562 ˛as†
	c__±hªad_˛ónup_˛ass


564 (*
__ˇn˚l_routöe
) (*);

565 *
__ˇn˚l_¨g
;

566 
__do_ô
;

567 
__ˇn˚l_ty≥
;

569 
public
:

570 
	`__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

571 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

572 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

573 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

574 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

575 &
__ˇn˚l_ty≥
); 
	}
}

576 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

586 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

588 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

592 
	#±hªad_˛ónup_p›
(
execuã
) \

593 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

594 } 0)

	)

596 #ifde‡
__USE_GNU


600 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

602 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

603 
__˛‰ame
.
	`__de„r
 ()

	)

608 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

609 
__˛‰ame
.
	`__ª°‹e
 (); \

610 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

611 } 0)

	)

618 
__exã∫_ölöe
 

619 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

621 i‡(
__‰ame
->
__do_ô
)

622 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

623 
	}
}

632 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

634 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

635 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

636 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

637 .
__do_ô
 = 1 };

	)

641 
	#±hªad_˛ónup_p›
(
execuã
) \

642 
__˛‰ame
.
__do_ô
 = (
execuã
); \

643 } 0)

	)

645 #ifde‡
__USE_GNU


649 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

651 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

652 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

653 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

654 .
__do_ô
 = 1 }; \

655 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

656 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

661 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

662 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

663 
__˛‰ame
.
__do_ô
 = (
execuã
); \

664 } 0)

	)

675 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

677 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

678 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

679 *
__ˇn˚l_¨g
 = (
¨g
); \

680 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

681 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

682 i‡(
	`__glibc_u∆ikñy
 (
__nŸ_fú°_ˇŒ
)) \

684 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

685 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

689 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

690 dÿ{

	)

691 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

692 
__˛ónup_f˘_©åibuã
;

696 
	#±hªad_˛ónup_p›
(
execuã
) \

699 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

700 i‡(
execuã
) \

701 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

702 } 0)

	)

703 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

704 
__˛ónup_f˘_©åibuã
;

706 #ifde‡
__USE_GNU


710 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

712 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

713 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

714 *
__ˇn˚l_¨g
 = (
¨g
); \

715 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

716 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

717 i‡(
	`__glibc_u∆ikñy
 (
__nŸ_fú°_ˇŒ
)) \

719 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

720 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

724 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

725 dÿ{

	)

726 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

727 
__˛ónup_f˘_©åibuã
;

732 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

735 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

736 i‡(
execuã
) \

737 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

738 
	}
} 0)

	)

739 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

740 
__˛ónup_f˘_©åibuã
;

744 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

745 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

746 #i‚de‡
SHARED


747 
	`__©åibuã__
 ((
__wók__
))

753 
__jmp_buf_èg
;

754 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROWNL
;

760 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

761 c⁄° 
±hªad_muãx©å_t
 *
__muãx©å
)

762 
__THROW
 
	`__n⁄nuŒ
 ((1));

765 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

766 
__THROW
 
	`__n⁄nuŒ
 ((1));

769 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

770 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

773 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

774 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

776 #ifde‡
__USE_XOPEN2K


778 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

779 c⁄° 
time•ec
 *
__ª°ri˘


780 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

784 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

785 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

789 
	$±hªad_muãx_gë¥io˚ûög
 (c⁄° 
±hªad_muãx_t
 *

790 
__ª°ri˘
 
__muãx
,

791 *
__ª°ri˘
 
__¥io˚ûög
)

792 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

796 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

797 
__¥io˚ûög
,

798 *
__ª°ri˘
 
__ﬁd_˚ûög
)

799 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

802 #ifde‡
__USE_XOPEN2K8


804 
	$±hªad_muãx_c⁄si°ít
 (
±hªad_muãx_t
 *
__muãx
)

805 
__THROW
 
	`__n⁄nuŒ
 ((1));

806 #ifde‡
__USE_GNU


807 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

808 
__THROW
 
	`__n⁄nuŒ
 ((1));

817 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

818 
__THROW
 
	`__n⁄nuŒ
 ((1));

821 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

822 
__THROW
 
	`__n⁄nuŒ
 ((1));

825 
	$±hªad_muãx©å_gëpsh¨ed
 (c⁄° 
±hªad_muãx©å_t
 *

826 
__ª°ri˘
 
__©å
,

827 *
__ª°ri˘
 
__psh¨ed
)

828 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

831 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

832 
__psh¨ed
)

833 
__THROW
 
	`__n⁄nuŒ
 ((1));

835 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


837 
	$±hªad_muãx©å_gëty≥
 (c⁄° 
±hªad_muãx©å_t
 *
__ª°ri˘


838 
__©å
, *
__ª°ri˘
 
__köd
)

839 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

844 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

845 
__THROW
 
	`__n⁄nuŒ
 ((1));

849 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (c⁄° 
±hªad_muãx©å_t
 *

850 
__ª°ri˘
 
__©å
,

851 *
__ª°ri˘
 
__¥Ÿocﬁ
)

852 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

856 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

857 
__¥Ÿocﬁ
)

858 
__THROW
 
	`__n⁄nuŒ
 ((1));

861 
	$±hªad_muãx©å_gë¥io˚ûög
 (c⁄° 
±hªad_muãx©å_t
 *

862 
__ª°ri˘
 
__©å
,

863 *
__ª°ri˘
 
__¥io˚ûög
)

864 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

867 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

868 
__¥io˚ûög
)

869 
__THROW
 
	`__n⁄nuŒ
 ((1));

871 #ifde‡
__USE_XOPEN2K


873 
	$±hªad_muãx©å_gërobu°
 (c⁄° 
±hªad_muãx©å_t
 *
__©å
,

874 *
__robu°√ss
)

875 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

876 #ifde‡
__USE_GNU


877 
	$±hªad_muãx©å_gërobu°_≈
 (c⁄° 
±hªad_muãx©å_t
 *
__©å
,

878 *
__robu°√ss
)

879 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

883 
	$±hªad_muãx©å_£åobu°
 (
±hªad_muãx©å_t
 *
__©å
,

884 
__robu°√ss
)

885 
__THROW
 
	`__n⁄nuŒ
 ((1));

886 #ifde‡
__USE_GNU


887 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

888 
__robu°√ss
)

889 
__THROW
 
	`__n⁄nuŒ
 ((1));

894 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


899 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

900 c⁄° 
±hªad_rwlock©å_t
 *
__ª°ri˘


901 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

904 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

905 
__THROW
 
	`__n⁄nuŒ
 ((1));

908 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

909 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

912 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

913 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

915 #ifde‡
__USE_XOPEN2K


917 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

918 c⁄° 
time•ec
 *
__ª°ri˘


919 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

923 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

924 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

927 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

928 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

930 #ifde‡
__USE_XOPEN2K


932 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

933 c⁄° 
time•ec
 *
__ª°ri˘


934 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

938 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

939 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

945 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

946 
__THROW
 
	`__n⁄nuŒ
 ((1));

949 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

950 
__THROW
 
	`__n⁄nuŒ
 ((1));

953 
	$±hªad_rwlock©å_gëpsh¨ed
 (c⁄° 
±hªad_rwlock©å_t
 *

954 
__ª°ri˘
 
__©å
,

955 *
__ª°ri˘
 
__psh¨ed
)

956 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

959 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

960 
__psh¨ed
)

961 
__THROW
 
	`__n⁄nuŒ
 ((1));

964 
	$±hªad_rwlock©å_gëköd_≈
 (c⁄° 
±hªad_rwlock©å_t
 *

965 
__ª°ri˘
 
__©å
,

966 *
__ª°ri˘
 
__¥ef
)

967 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

970 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

971 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

979 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

980 c⁄° 
±hªad_c⁄d©å_t
 *
__ª°ri˘
 
__c⁄d_©å
)

981 
__THROW
 
	`__n⁄nuŒ
 ((1));

984 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

985 
__THROW
 
	`__n⁄nuŒ
 ((1));

988 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

989 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

992 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

993 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1000 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

1001 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

1002 
	`__n⁄nuŒ
 ((1, 2));

1011 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

1012 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

1013 c⁄° 
time•ec
 *
__ª°ri˘
 
__ab°ime
)

1014 
	`__n⁄nuŒ
 ((1, 2, 3));

1019 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

1020 
__THROW
 
	`__n⁄nuŒ
 ((1));

1023 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

1024 
__THROW
 
	`__n⁄nuŒ
 ((1));

1027 
	$±hªad_c⁄d©å_gëpsh¨ed
 (c⁄° 
±hªad_c⁄d©å_t
 *

1028 
__ª°ri˘
 
__©å
,

1029 *
__ª°ri˘
 
__psh¨ed
)

1030 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1033 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

1034 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1036 #ifde‡
__USE_XOPEN2K


1038 
	$±hªad_c⁄d©å_gë˛ock
 (c⁄° 
±hªad_c⁄d©å_t
 *

1039 
__ª°ri˘
 
__©å
,

1040 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

1041 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1044 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

1045 
__˛ockid_t
 
__˛ock_id
)

1046 
__THROW
 
	`__n⁄nuŒ
 ((1));

1050 #ifde‡
__USE_XOPEN2K


1055 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1056 
__THROW
 
	`__n⁄nuŒ
 ((1));

1059 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1060 
__THROW
 
	`__n⁄nuŒ
 ((1));

1063 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1064 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1067 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1068 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1071 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1072 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1079 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1080 c⁄° 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1081 
__©å
, 
__cou¡
)

1082 
__THROW
 
	`__n⁄nuŒ
 ((1));

1085 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1086 
__THROW
 
	`__n⁄nuŒ
 ((1));

1089 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1090 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1094 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1095 
__THROW
 
	`__n⁄nuŒ
 ((1));

1098 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1099 
__THROW
 
	`__n⁄nuŒ
 ((1));

1102 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (c⁄° 
±hªad_b¨rõøâr_t
 *

1103 
__ª°ri˘
 
__©å
,

1104 *
__ª°ri˘
 
__psh¨ed
)

1105 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1108 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1109 
__psh¨ed
)

1110 
__THROW
 
	`__n⁄nuŒ
 ((1));

1122 
	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1123 (*
__de°r_fun˘i⁄
) (*))

1124 
__THROW
 
	`__n⁄nuŒ
 ((1));

1127 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1130 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1133 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1134 c⁄° *
__poöãr
Ë
__THROW
 ;

1137 #ifde‡
__USE_XOPEN2K


1139 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1140 
__˛ockid_t
 *
__˛ock_id
)

1141 
__THROW
 
	`__n⁄nuŒ
 ((2));

1156 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1157 (*
__∑ª¡
) (),

1158 (*
__chûd
Ë()Ë
__THROW
;

1161 #ifde‡
__USE_EXTERN_INLINES


1163 
__exã∫_ölöe
 

1164 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1166  
__thªad1
 =
__thªad2
;

1167 
	}
}

1170 
	g__END_DECLS


	@/usr/include/wctype.h

23 #i‚de‡
_WCTYPE_H


25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 #i‚de‡
__√ed_iswxxx


29 
	#_WCTYPE_H
 1

	)

32 
	#__√ed_wöt_t


	)

33 
	~<wch¨.h
>

37 #i‚de‡
WEOF


38 
	#WEOF
 (0xffffffffu)

	)

41 #unde‡
__√ed_iswxxx


46 #i‚de‡
__iswxxx_deföed


47 
	#__iswxxx_deföed
 1

	)

49 
__BEGIN_NAMESPACE_C99


52 
	tw˘y≥_t
;

53 
	g__END_NAMESPACE_C99


55 #i‚de‡
_ISwbô


60 
	~<ídün.h
>

61 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


62 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

64 
	#_ISwbô
(
bô
) \

65 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

66 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

67 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

68 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

73 
	m__ISwuµî
 = 0,

74 
	m__ISwlowî
 = 1,

75 
	m__ISwÆpha
 = 2,

76 
	m__ISwdigô
 = 3,

77 
	m__ISwxdigô
 = 4,

78 
	m__ISw•a˚
 = 5,

79 
	m__ISw¥öt
 = 6,

80 
	m__ISwgøph
 = 7,

81 
	m__ISwbœnk
 = 8,

82 
	m__ISw˙ål
 = 9,

83 
	m__ISwpun˘
 = 10,

84 
	m__ISwÆnum
 = 11,

86 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

87 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

88 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

89 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

90 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

91 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

92 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

93 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

94 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

95 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

96 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

97 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

102 
__BEGIN_DECLS


104 
__BEGIN_NAMESPACE_C99


111 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

117 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

120 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

124 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

128 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

133 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

136 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

141 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

146 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

151 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

156 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

161 #ifde‡
__USE_ISOC99


162 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

171 
w˘y≥_t
 
	$w˘y≥
 (c⁄° *
__¥›îty
Ë
__THROW
;

175 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

176 
__END_NAMESPACE_C99


183 
__BEGIN_NAMESPACE_C99


186 c⁄° 
	t__öt32_t
 *
	tw˘øns_t
;

187 
__END_NAMESPACE_C99


188 #ifde‡
__USE_GNU


189 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

192 
__BEGIN_NAMESPACE_C99


194 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

197 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
__END_NAMESPACE_C99


200 
__END_DECLS


207 #ifde‡
_WCTYPE_H


213 
__BEGIN_DECLS


215 
__BEGIN_NAMESPACE_C99


218 
w˘øns_t
 
	$w˘øns
 (c⁄° *
__¥›îty
Ë
__THROW
;

221 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

222 
__END_NAMESPACE_C99


224 #ifde‡
__USE_XOPEN2K8


226 
	~<xloˇÀ.h
>

230 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

236 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

239 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

243 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

247 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

252 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

255 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

260 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

265 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

270 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

275 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

280 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

284 
w˘y≥_t
 
	$w˘y≥_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

285 
__THROW
;

289 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

290 
__THROW
;

298 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

301 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

305 
w˘øns_t
 
	$w˘øns_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

306 
__THROW
;

309 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

310 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

314 
__END_DECLS


	@/usr/include/bits/errno.h

19 #ifde‡
_ERRNO_H


21 #unde‡
EDOM


22 #unde‡
EILSEQ


23 #unde‡
ERANGE


24 
	~<löux/î∫o.h
>

27 
	#ENOTSUP
 
EOPNOTSUPP


	)

30 #i‚de‡
ECANCELED


31 
	#ECANCELED
 125

	)

35 #i‚de‡
EOWNERDEAD


36 
	#EOWNERDEAD
 130

	)

37 
	#ENOTRECOVERABLE
 131

	)

40 #i‚de‡
ERFKILL


41 
	#ERFKILL
 132

	)

44 #i‚de‡
EHWPOISON


45 
	#EHWPOISON
 133

	)

48 #i‚de‡
__ASSEMBLER__


50 *
	$__î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

52 #i‡!
deföed
 
_LIBC
 || deföed 
_LIBC_REENTRANT


54 
	#î∫o
 (*
	`__î∫o_loˇti⁄
 ())

	)

59 #i‡!
deföed
 
_ERRNO_H
 && deföed 
__√ed_Em©h


63 
	#EDOM
 33

	)

64 
	#EILSEQ
 84

	)

65 
	#ERANGE
 34

	)

	@/usr/include/bits/setjmp.h

19 #i‚de‡
_BITS_SETJMP_H


20 
	#_BITS_SETJMP_H
 1

	)

22 #i‡!
deföed
 
_SETJMP_H
 && !deföed 
_PTHREAD_H


26 
	~<bôs/w‹dsize.h
>

28 #i‚de‡
_ASM


30 #i‡
__WORDSIZE
 == 64

31 
	t__jmp_buf
[8];

32 #ñi‡
deföed
 
__x86_64__


33 
__exãnsi⁄__
 
	t__jmp_buf
[8];

35 
	t__jmp_buf
[6];

	@/usr/include/sched.h

19 #i‚def 
_SCHED_H


20 
	#_SCHED_H
 1

	)

22 
	~<„©uªs.h
>

25 
	~<bôs/ty≥s.h
>

27 
	#__√ed_size_t


	)

28 
	~<°ddef.h
>

30 
	#__√ed_time_t


	)

31 
	#__√ed_time•ec


	)

32 
	~<time.h
>

34 #i‚de‡
__pid_t_deföed


35 
__pid_t
 
	tpid_t
;

36 
	#__pid_t_deföed


	)

41 
	~<bôs/sched.h
>

43 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

46 
__BEGIN_DECLS


49 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, c⁄° 
sched_∑øm
 *
__∑øm
)

50 
__THROW
;

53 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

56 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

57 c⁄° 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

60 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

63 
	$sched_yõld
 (Ë
__THROW
;

66 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

69 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

72 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

75 #ifde‡
__USE_GNU


77 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

78 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

79 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

80 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

81 
˝u£ç
)

	)

82 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

83 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

85 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

86 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

87 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

88 
˝u£ç
)

	)

89 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

90 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

92 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

93 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

94 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

95 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

97 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

98 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

99 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

100 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

101 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

102 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

103 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

104 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

105 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

106 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

107 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

108 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

110 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

111 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

112 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

116 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

117 c⁄° 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

120 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

121 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

124 
__END_DECLS


	@/usr/include/bits/sched.h

20 #i‚de‡
__√ed_sched∑øm


22 #i‚de‡
_SCHED_H


28 
	#SCHED_OTHER
 0

	)

29 
	#SCHED_FIFO
 1

	)

30 
	#SCHED_RR
 2

	)

31 #ifde‡
__USE_GNU


32 
	#SCHED_BATCH
 3

	)

33 
	#SCHED_IDLE
 5

	)

35 
	#SCHED_RESET_ON_FORK
 0x40000000

	)

38 #ifde‡
__USE_GNU


40 
	#CSIGNAL
 0x000000f‡

	)

41 
	#CLONE_VM
 0x00000100

	)

42 
	#CLONE_FS
 0x00000200

	)

43 
	#CLONE_FILES
 0x00000400

	)

44 
	#CLONE_SIGHAND
 0x00000800

	)

45 
	#CLONE_PTRACE
 0x00002000

	)

46 
	#CLONE_VFORK
 0x00004000

	)

48 
	#CLONE_PARENT
 0x00008000

	)

50 
	#CLONE_THREAD
 0x00010000

	)

51 
	#CLONE_NEWNS
 0x00020000

	)

52 
	#CLONE_SYSVSEM
 0x00040000

	)

53 
	#CLONE_SETTLS
 0x00080000

	)

54 
	#CLONE_PARENT_SETTID
 0x00100000

	)

56 
	#CLONE_CHILD_CLEARTID
 0x00200000

	)

58 
	#CLONE_DETACHED
 0x00400000

	)

59 
	#CLONE_UNTRACED
 0x00800000

	)

61 
	#CLONE_CHILD_SETTID
 0x01000000

	)

63 
	#CLONE_NEWUTS
 0x04000000

	)

64 
	#CLONE_NEWIPC
 0x08000000

	)

65 
	#CLONE_NEWUSER
 0x10000000

	)

66 
	#CLONE_NEWPID
 0x20000000

	)

67 
	#CLONE_NEWNET
 0x40000000

	)

68 
	#CLONE_IO
 0x80000000

	)

72 
	ssched_∑øm


74 
	m__sched_¥i‹ôy
;

77 
	g__BEGIN_DECLS


79 #ifde‡
__USE_GNU


81 
˛⁄e
 ((*
__‚
Ë(*
__¨g
), *
__chûd_°ack
,

82 
__Êags
, *
__¨g
, ...Ë
__THROW
;

85 
	$unsh¨e
 (
__Êags
Ë
__THROW
;

88 
	$sched_gë˝u
 (Ë
__THROW
;

91 
	$£äs
 (
__fd
, 
__n°y≥
Ë
__THROW
;

95 
__END_DECLS


99 #i‡!
deföed
 
__deföed_sched∑øm
 \

100 && (
deföed
 
__√ed_sched∑øm
 || deföed 
_SCHED_H
)

101 
	#__deföed_sched∑øm
 1

	)

103 
	s__sched_∑øm


105 
__sched_¥i‹ôy
;

107 #unde‡
__√ed_sched∑øm


111 #i‡
deföed
 
_SCHED_H
 && !deföed 
__˝u_£t_t_deföed


112 
	#__˝u_£t_t_deföed


	)

114 
	#__CPU_SETSIZE
 1024

	)

115 
	#__NCPUBITS
 (8 *  (
__˝u_mask
))

	)

118 
	t__˝u_mask
;

121 
	#__CPUELT
(
˝u
Ë((˝uË/ 
__NCPUBITS
)

	)

122 
	#__CPUMASK
(
˝u
Ë((
__˝u_mask
Ë1 << ((˝uË% 
__NCPUBITS
))

	)

127 
__˝u_mask
 
__bôs
[
__CPU_SETSIZE
 / 
__NCPUBITS
];

128 } 
	t˝u_£t_t
;

131 #i‡
	`__GNUC_PREREQ
 (2, 91)

132 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

133 dÿ
	`__buûtö_mem£t
 (
˝u£ç
, '\0', 
£tsize
); 0)

	)

135 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

137 
size_t
 
__i
; \

138 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

139 
__˝u_mask
 *
__bôs
 = (
˝u£ç
)->__bits; \

140 
__i
 = 0; __ò< 
__imax
; ++__i) \

141 
__bôs
[
__i
] = 0; \

142 
	}
} 0)

	)

144 
	#__CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

145 (
__exãnsi⁄__
 \

146 ({ 
size_t
 
__˝u
 = (
˝u
); \

147 
__˝u
 / 8 < (
£tsize
) \

148 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

149 |
	`__CPUMASK
 (
__˝u
)) \

150 : 0; }))

	)

151 
	#__CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

152 (
__exãnsi⁄__
 \

153 ({ 
size_t
 
__˝u
 = (
˝u
); \

154 
__˝u
 / 8 < (
£tsize
) \

155 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

156 &~
	`__CPUMASK
 (
__˝u
)) \

157 : 0; }))

	)

158 
	#__CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

159 (
__exãnsi⁄__
 \

160 ({ 
size_t
 
__˝u
 = (
˝u
); \

161 
__˝u
 / 8 < (
£tsize
) \

162 ? ((((c⁄° 
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

163 & 
	`__CPUMASK
 (
__˝u
))) != 0 \

164 : 0; }))

	)

166 
	#__CPU_COUNT_S
(
£tsize
, 
˝u£ç
) \

167 
	`__sched_˝ucou¡
 (
£tsize
, 
˝u£ç
)

	)

169 #i‡
__GNUC_PREREQ
 (2, 91)

170 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

171 (
	`__buûtö_memcmp
 (
˝u£ç1
, 
˝u£ç2
, 
£tsize
Ë=0)

	)

173 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

174 (
__exãnsi⁄__
 \

175 ({ c⁄° 
__˝u_mask
 *
__¨r1
 = (
˝u£ç1
)->
__bôs
; \

176 c⁄° 
__˝u_mask
 *
__¨r2
 = (
˝u£ç2
)->
__bôs
; \

177 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

178 
size_t
 
__i
; \

179 
__i
 = 0; __ò< 
__imax
; ++__i) \

180 i‡(
__¨r1
[
__i
] !
__¨r2
[__i]) \

182 
__i
 =
__imax
; }))

	)

185 
	#__CPU_OP_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, 
›
) \

186 (
__exãnsi⁄__
 \

187 ({ 
˝u_£t_t
 *
__de°
 = (
de°£t
); \

188 c⁄° 
__˝u_mask
 *
__¨r1
 = (
§c£t1
)->
__bôs
; \

189 c⁄° 
__˝u_mask
 *
__¨r2
 = (
§c£t2
)->
__bôs
; \

190 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

191 
size_t
 
__i
; \

192 
__i
 = 0; __ò< 
__imax
; ++__i) \

193 ((
__˝u_mask
 *Ë
__de°
->
__bôs
)[
__i
] = 
__¨r1
[__i] 
›
 
__¨r2
[__i]; \

194 
__de°
; }))

	)

196 
	#__CPU_ALLOC_SIZE
(
cou¡
) \

197 ((((
cou¡
Ë+ 
__NCPUBITS
 - 1Ë/ __NCPUBITSË*  (
__˝u_mask
))

	)

198 
	#__CPU_ALLOC
(
cou¡
Ë
	`__sched_˝uÆloc
 (cou¡)

	)

199 
	#__CPU_FREE
(
˝u£t
Ë
	`__sched_˝u‰ì
 (˝u£t)

	)

201 
__BEGIN_DECLS


203 
	$__sched_˝ucou¡
 (
size_t
 
__£tsize
, c⁄° 
˝u_£t_t
 *
__£ç
)

204 
__THROW
;

205 
˝u_£t_t
 *
	$__sched_˝uÆloc
 (
size_t
 
__cou¡
Ë
__THROW
 
__wur
;

206 
	$__sched_˝u‰ì
 (
˝u_£t_t
 *
__£t
Ë
__THROW
;

208 
__END_DECLS


	@/usr/include/linux/errno.h

1 
	~<asm/î∫o.h
>

	@/usr/include/asm/errno.h

1 
	~<asm-gíîic/î∫o.h
>

	@/usr/include/asm-generic/errno.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_H


2 
	#_ASM_GENERIC_ERRNO_H


	)

4 
	~<asm-gíîic/î∫o-ba£.h
>

6 
	#EDEADLK
 35

	)

7 
	#ENAMETOOLONG
 36

	)

8 
	#ENOLCK
 37

	)

9 
	#ENOSYS
 38

	)

10 
	#ENOTEMPTY
 39

	)

11 
	#ELOOP
 40

	)

12 
	#EWOULDBLOCK
 
EAGAIN


	)

13 
	#ENOMSG
 42

	)

14 
	#EIDRM
 43

	)

15 
	#ECHRNG
 44

	)

16 
	#EL2NSYNC
 45

	)

17 
	#EL3HLT
 46

	)

18 
	#EL3RST
 47

	)

19 
	#ELNRNG
 48

	)

20 
	#EUNATCH
 49

	)

21 
	#ENOCSI
 50

	)

22 
	#EL2HLT
 51

	)

23 
	#EBADE
 52

	)

24 
	#EBADR
 53

	)

25 
	#EXFULL
 54

	)

26 
	#ENOANO
 55

	)

27 
	#EBADRQC
 56

	)

28 
	#EBADSLT
 57

	)

30 
	#EDEADLOCK
 
EDEADLK


	)

32 
	#EBFONT
 59

	)

33 
	#ENOSTR
 60

	)

34 
	#ENODATA
 61

	)

35 
	#ETIME
 62

	)

36 
	#ENOSR
 63

	)

37 
	#ENONET
 64

	)

38 
	#ENOPKG
 65

	)

39 
	#EREMOTE
 66

	)

40 
	#ENOLINK
 67

	)

41 
	#EADV
 68

	)

42 
	#ESRMNT
 69

	)

43 
	#ECOMM
 70

	)

44 
	#EPROTO
 71

	)

45 
	#EMULTIHOP
 72

	)

46 
	#EDOTDOT
 73

	)

47 
	#EBADMSG
 74

	)

48 
	#EOVERFLOW
 75

	)

49 
	#ENOTUNIQ
 76

	)

50 
	#EBADFD
 77

	)

51 
	#EREMCHG
 78

	)

52 
	#ELIBACC
 79

	)

53 
	#ELIBBAD
 80

	)

54 
	#ELIBSCN
 81

	)

55 
	#ELIBMAX
 82

	)

56 
	#ELIBEXEC
 83

	)

57 
	#EILSEQ
 84

	)

58 
	#ERESTART
 85

	)

59 
	#ESTRPIPE
 86

	)

60 
	#EUSERS
 87

	)

61 
	#ENOTSOCK
 88

	)

62 
	#EDESTADDRREQ
 89

	)

63 
	#EMSGSIZE
 90

	)

64 
	#EPROTOTYPE
 91

	)

65 
	#ENOPROTOOPT
 92

	)

66 
	#EPROTONOSUPPORT
 93

	)

67 
	#ESOCKTNOSUPPORT
 94

	)

68 
	#EOPNOTSUPP
 95

	)

69 
	#EPFNOSUPPORT
 96

	)

70 
	#EAFNOSUPPORT
 97

	)

71 
	#EADDRINUSE
 98

	)

72 
	#EADDRNOTAVAIL
 99

	)

73 
	#ENETDOWN
 100

	)

74 
	#ENETUNREACH
 101

	)

75 
	#ENETRESET
 102

	)

76 
	#ECONNABORTED
 103

	)

77 
	#ECONNRESET
 104

	)

78 
	#ENOBUFS
 105

	)

79 
	#EISCONN
 106

	)

80 
	#ENOTCONN
 107

	)

81 
	#ESHUTDOWN
 108

	)

82 
	#ETOOMANYREFS
 109

	)

83 
	#ETIMEDOUT
 110

	)

84 
	#ECONNREFUSED
 111

	)

85 
	#EHOSTDOWN
 112

	)

86 
	#EHOSTUNREACH
 113

	)

87 
	#EALREADY
 114

	)

88 
	#EINPROGRESS
 115

	)

89 
	#ESTALE
 116

	)

90 
	#EUCLEAN
 117

	)

91 
	#ENOTNAM
 118

	)

92 
	#ENAVAIL
 119

	)

93 
	#EISNAM
 120

	)

94 
	#EREMOTEIO
 121

	)

95 
	#EDQUOT
 122

	)

97 
	#ENOMEDIUM
 123

	)

98 
	#EMEDIUMTYPE
 124

	)

99 
	#ECANCELED
 125

	)

100 
	#ENOKEY
 126

	)

101 
	#EKEYEXPIRED
 127

	)

102 
	#EKEYREVOKED
 128

	)

103 
	#EKEYREJECTED
 129

	)

106 
	#EOWNERDEAD
 130

	)

107 
	#ENOTRECOVERABLE
 131

	)

109 
	#ERFKILL
 132

	)

111 
	#EHWPOISON
 133

	)

	@/usr/include/asm-generic/errno-base.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_BASE_H


2 
	#_ASM_GENERIC_ERRNO_BASE_H


	)

4 
	#EPERM
 1

	)

5 
	#ENOENT
 2

	)

6 
	#ESRCH
 3

	)

7 
	#EINTR
 4

	)

8 
	#EIO
 5

	)

9 
	#ENXIO
 6

	)

10 
	#E2BIG
 7

	)

11 
	#ENOEXEC
 8

	)

12 
	#EBADF
 9

	)

13 
	#ECHILD
 10

	)

14 
	#EAGAIN
 11

	)

15 
	#ENOMEM
 12

	)

16 
	#EACCES
 13

	)

17 
	#EFAULT
 14

	)

18 
	#ENOTBLK
 15

	)

19 
	#EBUSY
 16

	)

20 
	#EEXIST
 17

	)

21 
	#EXDEV
 18

	)

22 
	#ENODEV
 19

	)

23 
	#ENOTDIR
 20

	)

24 
	#EISDIR
 21

	)

25 
	#EINVAL
 22

	)

26 
	#ENFILE
 23

	)

27 
	#EMFILE
 24

	)

28 
	#ENOTTY
 25

	)

29 
	#ETXTBSY
 26

	)

30 
	#EFBIG
 27

	)

31 
	#ENOSPC
 28

	)

32 
	#ESPIPE
 29

	)

33 
	#EROFS
 30

	)

34 
	#EMLINK
 31

	)

35 
	#EPIPE
 32

	)

36 
	#EDOM
 33

	)

37 
	#ERANGE
 34

	)

	@
1
.
1
/usr/include
74
1941
home_automation.c
home_automation.h
home_automation_types.h
ota/ble_server.c
ota/ble_server.h
/usr/include/malloc.h
/usr/include/stdint.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/alloca.h
/usr/include/bits/stdio-ldbl.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio2.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/stdlib-bsearch.h
/usr/include/bits/stdlib-float.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/string.h
/usr/include/bits/string2.h
/usr/include/bits/string3.h
/usr/include/bits/sys_errlist.h
/usr/include/bits/types.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/bits/wchar.h
/usr/include/bits/wordsize.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/sys/types.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/bits/libio-ldbl.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/stdio-lock.h
/usr/include/bits/typesizes.h
/usr/include/ctype.h
/usr/include/endian.h
/usr/include/gnu/stubs.h
/usr/include/stdc-predef.h
/usr/include/sys/cdefs.h
/usr/include/sys/select.h
/usr/include/sys/sysmacros.h
/usr/include/time.h
/usr/include/bits/byteswap.h
/usr/include/bits/endian.h
/usr/include/bits/libc-lock.h
/usr/include/bits/select.h
/usr/include/bits/select2.h
/usr/include/bits/sigset.h
/usr/include/bits/time.h
/usr/include/gconv.h
/usr/include/gnu/stubs-32.h
/usr/include/gnu/stubs-64.h
/usr/include/gnu/stubs-x32.h
/usr/include/wchar.h
/usr/include/bits/byteswap-16.h
/usr/include/bits/timex.h
/usr/include/bits/wchar-ldbl.h
/usr/include/bits/wchar2.h
/usr/include/errno.h
/usr/include/gnu/option-groups.h
/usr/include/pthread.h
/usr/include/wctype.h
/usr/include/bits/errno.h
/usr/include/bits/setjmp.h
/usr/include/sched.h
/usr/include/bits/sched.h
/usr/include/linux/errno.h
/usr/include/asm/errno.h
/usr/include/asm-generic/errno.h
/usr/include/asm-generic/errno-base.h
